// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync_agent_software_update_events.proto

#ifndef PROTOBUF_INCLUDED_sync_5fagent_5fsoftware_5fupdate_5fevents_2eproto
#define PROTOBUF_INCLUDED_sync_5fagent_5fsoftware_5fupdate_5fevents_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "sync_agent_software_update_structures.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_sync_5fagent_5fsoftware_5fupdate_5fevents_2eproto 

namespace protobuf_sync_5fagent_5fsoftware_5fupdate_5fevents_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_sync_5fagent_5fsoftware_5fupdate_5fevents_2eproto
namespace logi {
namespace proto {
class LSASoftwareUpdateReportEvent;
class LSASoftwareUpdateReportEventDefaultTypeInternal;
extern LSASoftwareUpdateReportEventDefaultTypeInternal _LSASoftwareUpdateReportEvent_default_instance_;
}  // namespace proto
}  // namespace logi
namespace google {
namespace protobuf {
template<> ::logi::proto::LSASoftwareUpdateReportEvent* Arena::CreateMaybeMessage<::logi::proto::LSASoftwareUpdateReportEvent>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace logi {
namespace proto {

// ===================================================================

class LSASoftwareUpdateReportEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:logi.proto.LSASoftwareUpdateReportEvent) */ {
 public:
  LSASoftwareUpdateReportEvent();
  virtual ~LSASoftwareUpdateReportEvent();

  LSASoftwareUpdateReportEvent(const LSASoftwareUpdateReportEvent& from);

  inline LSASoftwareUpdateReportEvent& operator=(const LSASoftwareUpdateReportEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LSASoftwareUpdateReportEvent(LSASoftwareUpdateReportEvent&& from) noexcept
    : LSASoftwareUpdateReportEvent() {
    *this = ::std::move(from);
  }

  inline LSASoftwareUpdateReportEvent& operator=(LSASoftwareUpdateReportEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LSASoftwareUpdateReportEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LSASoftwareUpdateReportEvent* internal_default_instance() {
    return reinterpret_cast<const LSASoftwareUpdateReportEvent*>(
               &_LSASoftwareUpdateReportEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LSASoftwareUpdateReportEvent* other);
  friend void swap(LSASoftwareUpdateReportEvent& a, LSASoftwareUpdateReportEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LSASoftwareUpdateReportEvent* New() const final {
    return CreateMaybeMessage<LSASoftwareUpdateReportEvent>(NULL);
  }

  LSASoftwareUpdateReportEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LSASoftwareUpdateReportEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LSASoftwareUpdateReportEvent& from);
  void MergeFrom(const LSASoftwareUpdateReportEvent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LSASoftwareUpdateReportEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .logi.proto.LSASoftwareUpdateReport report = 1;
  bool has_report() const;
  void clear_report();
  static const int kReportFieldNumber = 1;
  private:
  const ::logi::proto::LSASoftwareUpdateReport& _internal_report() const;
  public:
  const ::logi::proto::LSASoftwareUpdateReport& report() const;
  ::logi::proto::LSASoftwareUpdateReport* release_report();
  ::logi::proto::LSASoftwareUpdateReport* mutable_report();
  void set_allocated_report(::logi::proto::LSASoftwareUpdateReport* report);

  // @@protoc_insertion_point(class_scope:logi.proto.LSASoftwareUpdateReportEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::logi::proto::LSASoftwareUpdateReport* report_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_sync_5fagent_5fsoftware_5fupdate_5fevents_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LSASoftwareUpdateReportEvent

// .logi.proto.LSASoftwareUpdateReport report = 1;
inline bool LSASoftwareUpdateReportEvent::has_report() const {
  return this != internal_default_instance() && report_ != NULL;
}
inline const ::logi::proto::LSASoftwareUpdateReport& LSASoftwareUpdateReportEvent::_internal_report() const {
  return *report_;
}
inline const ::logi::proto::LSASoftwareUpdateReport& LSASoftwareUpdateReportEvent::report() const {
  const ::logi::proto::LSASoftwareUpdateReport* p = report_;
  // @@protoc_insertion_point(field_get:logi.proto.LSASoftwareUpdateReportEvent.report)
  return p != NULL ? *p : *reinterpret_cast<const ::logi::proto::LSASoftwareUpdateReport*>(
      &::logi::proto::_LSASoftwareUpdateReport_default_instance_);
}
inline ::logi::proto::LSASoftwareUpdateReport* LSASoftwareUpdateReportEvent::release_report() {
  // @@protoc_insertion_point(field_release:logi.proto.LSASoftwareUpdateReportEvent.report)
  
  ::logi::proto::LSASoftwareUpdateReport* temp = report_;
  report_ = NULL;
  return temp;
}
inline ::logi::proto::LSASoftwareUpdateReport* LSASoftwareUpdateReportEvent::mutable_report() {
  
  if (report_ == NULL) {
    auto* p = CreateMaybeMessage<::logi::proto::LSASoftwareUpdateReport>(GetArenaNoVirtual());
    report_ = p;
  }
  // @@protoc_insertion_point(field_mutable:logi.proto.LSASoftwareUpdateReportEvent.report)
  return report_;
}
inline void LSASoftwareUpdateReportEvent::set_allocated_report(::logi::proto::LSASoftwareUpdateReport* report) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(report_);
  }
  if (report) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      report = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, report, submessage_arena);
    }
    
  } else {
    
  }
  report_ = report;
  // @@protoc_insertion_point(field_set_allocated:logi.proto.LSASoftwareUpdateReportEvent.report)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace logi

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_sync_5fagent_5fsoftware_5fupdate_5fevents_2eproto
