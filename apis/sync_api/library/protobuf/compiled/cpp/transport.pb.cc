// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transport.proto

#include "transport.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Error;
}  // namespace protobuf_common_2eproto
namespace protobuf_configuration_5frequests_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_configuration_5frequests_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_LogiSyncConfigurationRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_configuration_5frequests_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_LogiSyncConfigurationResponse;
}  // namespace protobuf_configuration_5frequests_2eproto
namespace protobuf_connection_5fevents_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_connection_5fevents_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConnectionEvent;
}  // namespace protobuf_connection_5fevents_2eproto
namespace protobuf_firmware_5fevents_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_firmware_5fevents_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_FirmwareEvent;
}  // namespace protobuf_firmware_5fevents_2eproto
namespace protobuf_firmware_5frequests_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_firmware_5frequests_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_FirmwareRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_firmware_5frequests_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_FirmwareResponse;
}  // namespace protobuf_firmware_5frequests_2eproto
namespace protobuf_product_5fstate_5fevents_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_product_5fstate_5fevents_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_ProductEvent;
}  // namespace protobuf_product_5fstate_5fevents_2eproto
namespace protobuf_product_5fstate_5frequests_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_product_5fstate_5frequests_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_ProductRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_product_5fstate_5frequests_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_ProductResponse;
}  // namespace protobuf_product_5fstate_5frequests_2eproto
namespace protobuf_transport_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Header;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Kill;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pong;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Ack;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Event;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Request;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Response;
}  // namespace protobuf_transport_2eproto
namespace logi {
namespace proto {
class HeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Header>
      _instance;
} _Header_default_instance_;
class LogiSyncMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogiSyncMessage>
      _instance;
  const ::logi::proto::Ack* ack_;
  const ::logi::proto::Request* request_;
  const ::logi::proto::Response* response_;
  const ::logi::proto::Event* event_;
  const ::logi::proto::Pong* pong_;
  const ::logi::proto::Kill* kill_;
} _LogiSyncMessage_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
  const ::logi::proto::FirmwareRequest* firmware_request_;
  const ::logi::proto::ProductRequest* product_request_;
  const ::logi::proto::LogiSyncConfigurationRequest* configuration_request_;
} _Request_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
  const ::logi::proto::FirmwareResponse* firmware_response_;
  const ::logi::proto::ProductResponse* product_response_;
  const ::logi::proto::LogiSyncConfigurationResponse* configuration_response_;
} _Response_default_instance_;
class EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Event>
      _instance;
  const ::logi::proto::FirmwareEvent* firmware_event_;
  const ::logi::proto::ProductEvent* product_event_;
  const ::logi::proto::ConnectionEvent* connection_event_;
} _Event_default_instance_;
class AckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ack>
      _instance;
} _Ack_default_instance_;
class PongDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pong>
      _instance;
} _Pong_default_instance_;
class KillDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Kill>
      _instance;
} _Kill_default_instance_;
}  // namespace proto
}  // namespace logi
namespace protobuf_transport_2eproto {
static void InitDefaultsHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_Header_default_instance_;
    new (ptr) ::logi::proto::Header();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::Header::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Header =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeader}, {}};

static void InitDefaultsLogiSyncMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LogiSyncMessage_default_instance_;
    new (ptr) ::logi::proto::LogiSyncMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LogiSyncMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_LogiSyncMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsLogiSyncMessage}, {
      &protobuf_transport_2eproto::scc_info_Header.base,
      &protobuf_transport_2eproto::scc_info_Ack.base,
      &protobuf_transport_2eproto::scc_info_Request.base,
      &protobuf_transport_2eproto::scc_info_Response.base,
      &protobuf_transport_2eproto::scc_info_Event.base,
      &protobuf_transport_2eproto::scc_info_Pong.base,
      &protobuf_transport_2eproto::scc_info_Kill.base,}};

static void InitDefaultsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_Request_default_instance_;
    new (ptr) ::logi::proto::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRequest}, {
      &protobuf_firmware_5frequests_2eproto::scc_info_FirmwareRequest.base,
      &protobuf_product_5fstate_5frequests_2eproto::scc_info_ProductRequest.base,
      &protobuf_configuration_5frequests_2eproto::scc_info_LogiSyncConfigurationRequest.base,}};

static void InitDefaultsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_Response_default_instance_;
    new (ptr) ::logi::proto::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsResponse}, {
      &protobuf_firmware_5frequests_2eproto::scc_info_FirmwareResponse.base,
      &protobuf_product_5fstate_5frequests_2eproto::scc_info_ProductResponse.base,
      &protobuf_configuration_5frequests_2eproto::scc_info_LogiSyncConfigurationResponse.base,}};

static void InitDefaultsEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_Event_default_instance_;
    new (ptr) ::logi::proto::Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Event =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsEvent}, {
      &protobuf_firmware_5fevents_2eproto::scc_info_FirmwareEvent.base,
      &protobuf_product_5fstate_5fevents_2eproto::scc_info_ProductEvent.base,
      &protobuf_connection_5fevents_2eproto::scc_info_ConnectionEvent.base,}};

static void InitDefaultsAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_Ack_default_instance_;
    new (ptr) ::logi::proto::Ack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::Ack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Ack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAck}, {
      &protobuf_common_2eproto::scc_info_Error.base,}};

static void InitDefaultsPong() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_Pong_default_instance_;
    new (ptr) ::logi::proto::Pong();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::Pong::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pong =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPong}, {}};

static void InitDefaultsKill() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_Kill_default_instance_;
    new (ptr) ::logi::proto::Kill();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::Kill::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Kill =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKill}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Header.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogiSyncMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Event.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pong.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Kill.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Header, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Header, user_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Header, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Header, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LogiSyncMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LogiSyncMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LogiSyncMessage, header_),
  offsetof(::logi::proto::LogiSyncMessageDefaultTypeInternal, ack_),
  offsetof(::logi::proto::LogiSyncMessageDefaultTypeInternal, request_),
  offsetof(::logi::proto::LogiSyncMessageDefaultTypeInternal, response_),
  offsetof(::logi::proto::LogiSyncMessageDefaultTypeInternal, event_),
  offsetof(::logi::proto::LogiSyncMessageDefaultTypeInternal, pong_),
  offsetof(::logi::proto::LogiSyncMessageDefaultTypeInternal, kill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LogiSyncMessage, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Request, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::logi::proto::RequestDefaultTypeInternal, firmware_request_),
  offsetof(::logi::proto::RequestDefaultTypeInternal, product_request_),
  offsetof(::logi::proto::RequestDefaultTypeInternal, configuration_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Request, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Response, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::logi::proto::ResponseDefaultTypeInternal, firmware_response_),
  offsetof(::logi::proto::ResponseDefaultTypeInternal, product_response_),
  offsetof(::logi::proto::ResponseDefaultTypeInternal, configuration_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Response, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Event, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::logi::proto::EventDefaultTypeInternal, firmware_event_),
  offsetof(::logi::proto::EventDefaultTypeInternal, product_event_),
  offsetof(::logi::proto::EventDefaultTypeInternal, connection_event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Event, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Ack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Ack, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Ack, response_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Pong, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Pong, reserved_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Kill, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::Kill, reserved_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::logi::proto::Header)},
  { 9, -1, sizeof(::logi::proto::LogiSyncMessage)},
  { 22, -1, sizeof(::logi::proto::Request)},
  { 31, -1, sizeof(::logi::proto::Response)},
  { 40, -1, sizeof(::logi::proto::Event)},
  { 49, -1, sizeof(::logi::proto::Ack)},
  { 56, -1, sizeof(::logi::proto::Pong)},
  { 62, -1, sizeof(::logi::proto::Kill)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_Header_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LogiSyncMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_Ack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_Pong_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_Kill_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "transport.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017transport.proto\022\nlogi.proto\032\014common.pr"
      "oto\032\032product_state_events.proto\032\034product"
      "_state_requests.proto\032\025firmware_events.p"
      "roto\032\027firmware_requests.proto\032\027connectio"
      "n_events.proto\032\034configuration_requests.p"
      "roto\"O\n\006Header\022\021\n\ttimestamp\030\001 \001(\001\022\024\n\014use"
      "r_context\030\002 \001(\t\022\014\n\004guid\030\003 \001(\t\022\016\n\006status\030"
      "\004 \001(\r\"\232\002\n\017LogiSyncMessage\022\"\n\006header\030\001 \001("
      "\0132\022.logi.proto.Header\022\036\n\003ack\030\002 \001(\0132\017.log"
      "i.proto.AckH\000\022&\n\007request\030\003 \001(\0132\023.logi.pr"
      "oto.RequestH\000\022(\n\010response\030\004 \001(\0132\024.logi.p"
      "roto.ResponseH\000\022\"\n\005event\030\005 \001(\0132\021.logi.pr"
      "oto.EventH\000\022 \n\004pong\030\006 \001(\0132\020.logi.proto.P"
      "ongH\000\022 \n\004kill\030\007 \001(\0132\020.logi.proto.KillH\000B"
      "\t\n\007message\"\317\001\n\007Request\0227\n\020firmware_reque"
      "st\030\002 \001(\0132\033.logi.proto.FirmwareRequestH\000\022"
      "5\n\017product_request\030\003 \001(\0132\032.logi.proto.Pr"
      "oductRequestH\000\022I\n\025configuration_request\030"
      "\004 \001(\0132(.logi.proto.LogiSyncConfiguration"
      "RequestH\000B\t\n\007payload\"\326\001\n\010Response\0229\n\021fir"
      "mware_response\030\002 \001(\0132\034.logi.proto.Firmwa"
      "reResponseH\000\0227\n\020product_response\030\003 \001(\0132\033"
      ".logi.proto.ProductResponseH\000\022K\n\026configu"
      "ration_response\030\004 \001(\0132).logi.proto.LogiS"
      "yncConfigurationResponseH\000B\t\n\007payload\"\263\001"
      "\n\005Event\0223\n\016firmware_event\030\002 \001(\0132\031.logi.p"
      "roto.FirmwareEventH\000\0221\n\rproduct_event\030\003 "
      "\001(\0132\030.logi.proto.ProductEventH\000\0227\n\020conne"
      "ction_event\030\004 \001(\0132\033.logi.proto.Connectio"
      "nEventH\000B\t\n\007payload\"\?\n\003Ack\022!\n\006errors\030\001 \003"
      "(\0132\021.logi.proto.Error\022\025\n\rresponse_guid\030\002"
      " \001(\t\"\030\n\004Pong\022\020\n\010reserved\030\001 \001(\010\"\030\n\004Kill\022\020"
      "\n\010reserved\030\001 \001(\010B%\n#com.logitech.vc.sync"
      ".proto.messagesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1343);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "transport.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
  ::protobuf_product_5fstate_5fevents_2eproto::AddDescriptors();
  ::protobuf_product_5fstate_5frequests_2eproto::AddDescriptors();
  ::protobuf_firmware_5fevents_2eproto::AddDescriptors();
  ::protobuf_firmware_5frequests_2eproto::AddDescriptors();
  ::protobuf_connection_5fevents_2eproto::AddDescriptors();
  ::protobuf_configuration_5frequests_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_transport_2eproto
namespace logi {
namespace proto {

// ===================================================================

void Header::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Header::kTimestampFieldNumber;
const int Header::kUserContextFieldNumber;
const int Header::kGuidFieldNumber;
const int Header::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Header::Header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_Header.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.Header)
}
Header::Header(const Header& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_context().size() > 0) {
    user_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_context_);
  }
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guid().size() > 0) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:logi.proto.Header)
}

void Header::SharedCtor() {
  user_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(status_));
}

Header::~Header() {
  // @@protoc_insertion_point(destructor:logi.proto.Header)
  SharedDtor();
}

void Header::SharedDtor() {
  user_context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Header::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Header::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Header& Header::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_Header.base);
  return *internal_default_instance();
}


void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool Header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.Header)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_context = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_context()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_context().data(), static_cast<int>(this->user_context().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.Header.user_context"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guid().data(), static_cast<int>(this->guid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.Header.guid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.Header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.Header)
  return false;
#undef DO_
}

void Header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // string user_context = 2;
  if (this->user_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_context().data(), static_cast<int>(this->user_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.Header.user_context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_context(), output);
  }

  // string guid = 3;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guid().data(), static_cast<int>(this->guid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.Header.guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->guid(), output);
  }

  // uint32 status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.Header)
}

::google::protobuf::uint8* Header::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // string user_context = 2;
  if (this->user_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_context().data(), static_cast<int>(this->user_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.Header.user_context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_context(), target);
  }

  // string guid = 3;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guid().data(), static_cast<int>(this->guid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.Header.guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->guid(), target);
  }

  // uint32 status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.Header)
  return target;
}

size_t Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.Header)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_context = 2;
  if (this->user_context().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_context());
  }

  // string guid = 3;
  if (this->guid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guid());
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // uint32 status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.Header)
  GOOGLE_DCHECK_NE(&from, this);
  const Header* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Header>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.Header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.Header)
    MergeFrom(*source);
  }
}

void Header::MergeFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.Header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_context().size() > 0) {

    user_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_context_);
  }
  if (from.guid().size() > 0) {

    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Header::IsInitialized() const {
  return true;
}

void Header::Swap(Header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Header::InternalSwap(Header* other) {
  using std::swap;
  user_context_.Swap(&other->user_context_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guid_.Swap(&other->guid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Header::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogiSyncMessage::InitAsDefaultInstance() {
  ::logi::proto::_LogiSyncMessage_default_instance_._instance.get_mutable()->header_ = const_cast< ::logi::proto::Header*>(
      ::logi::proto::Header::internal_default_instance());
  ::logi::proto::_LogiSyncMessage_default_instance_.ack_ = const_cast< ::logi::proto::Ack*>(
      ::logi::proto::Ack::internal_default_instance());
  ::logi::proto::_LogiSyncMessage_default_instance_.request_ = const_cast< ::logi::proto::Request*>(
      ::logi::proto::Request::internal_default_instance());
  ::logi::proto::_LogiSyncMessage_default_instance_.response_ = const_cast< ::logi::proto::Response*>(
      ::logi::proto::Response::internal_default_instance());
  ::logi::proto::_LogiSyncMessage_default_instance_.event_ = const_cast< ::logi::proto::Event*>(
      ::logi::proto::Event::internal_default_instance());
  ::logi::proto::_LogiSyncMessage_default_instance_.pong_ = const_cast< ::logi::proto::Pong*>(
      ::logi::proto::Pong::internal_default_instance());
  ::logi::proto::_LogiSyncMessage_default_instance_.kill_ = const_cast< ::logi::proto::Kill*>(
      ::logi::proto::Kill::internal_default_instance());
}
void LogiSyncMessage::set_allocated_ack(::logi::proto::Ack* ack) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (ack) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ack = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ack, submessage_arena);
    }
    set_has_ack();
    message_.ack_ = ack;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.LogiSyncMessage.ack)
}
void LogiSyncMessage::set_allocated_request(::logi::proto::Request* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    set_has_request();
    message_.request_ = request;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.LogiSyncMessage.request)
}
void LogiSyncMessage::set_allocated_response(::logi::proto::Response* response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response, submessage_arena);
    }
    set_has_response();
    message_.response_ = response;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.LogiSyncMessage.response)
}
void LogiSyncMessage::set_allocated_event(::logi::proto::Event* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    set_has_event();
    message_.event_ = event;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.LogiSyncMessage.event)
}
void LogiSyncMessage::set_allocated_pong(::logi::proto::Pong* pong) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (pong) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pong = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pong, submessage_arena);
    }
    set_has_pong();
    message_.pong_ = pong;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.LogiSyncMessage.pong)
}
void LogiSyncMessage::set_allocated_kill(::logi::proto::Kill* kill) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (kill) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      kill = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, kill, submessage_arena);
    }
    set_has_kill();
    message_.kill_ = kill;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.LogiSyncMessage.kill)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogiSyncMessage::kHeaderFieldNumber;
const int LogiSyncMessage::kAckFieldNumber;
const int LogiSyncMessage::kRequestFieldNumber;
const int LogiSyncMessage::kResponseFieldNumber;
const int LogiSyncMessage::kEventFieldNumber;
const int LogiSyncMessage::kPongFieldNumber;
const int LogiSyncMessage::kKillFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogiSyncMessage::LogiSyncMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_LogiSyncMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LogiSyncMessage)
}
LogiSyncMessage::LogiSyncMessage(const LogiSyncMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::logi::proto::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  clear_has_message();
  switch (from.message_case()) {
    case kAck: {
      mutable_ack()->::logi::proto::Ack::MergeFrom(from.ack());
      break;
    }
    case kRequest: {
      mutable_request()->::logi::proto::Request::MergeFrom(from.request());
      break;
    }
    case kResponse: {
      mutable_response()->::logi::proto::Response::MergeFrom(from.response());
      break;
    }
    case kEvent: {
      mutable_event()->::logi::proto::Event::MergeFrom(from.event());
      break;
    }
    case kPong: {
      mutable_pong()->::logi::proto::Pong::MergeFrom(from.pong());
      break;
    }
    case kKill: {
      mutable_kill()->::logi::proto::Kill::MergeFrom(from.kill());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:logi.proto.LogiSyncMessage)
}

void LogiSyncMessage::SharedCtor() {
  header_ = NULL;
  clear_has_message();
}

LogiSyncMessage::~LogiSyncMessage() {
  // @@protoc_insertion_point(destructor:logi.proto.LogiSyncMessage)
  SharedDtor();
}

void LogiSyncMessage::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (has_message()) {
    clear_message();
  }
}

void LogiSyncMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogiSyncMessage::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogiSyncMessage& LogiSyncMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_LogiSyncMessage.base);
  return *internal_default_instance();
}


void LogiSyncMessage::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:logi.proto.LogiSyncMessage)
  switch (message_case()) {
    case kAck: {
      delete message_.ack_;
      break;
    }
    case kRequest: {
      delete message_.request_;
      break;
    }
    case kResponse: {
      delete message_.response_;
      break;
    }
    case kEvent: {
      delete message_.event_;
      break;
    }
    case kPong: {
      delete message_.pong_;
      break;
    }
    case kKill: {
      delete message_.kill_;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void LogiSyncMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LogiSyncMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  clear_message();
  _internal_metadata_.Clear();
}

bool LogiSyncMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LogiSyncMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .logi.proto.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.Ack ack = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.Request request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.Response response = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.Event event = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.Pong pong = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pong()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.Kill kill = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kill()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LogiSyncMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LogiSyncMessage)
  return false;
#undef DO_
}

void LogiSyncMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LogiSyncMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .logi.proto.Ack ack = 2;
  if (has_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_ack(), output);
  }

  // .logi.proto.Request request = 3;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_request(), output);
  }

  // .logi.proto.Response response = 4;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_response(), output);
  }

  // .logi.proto.Event event = 5;
  if (has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_event(), output);
  }

  // .logi.proto.Pong pong = 6;
  if (has_pong()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_pong(), output);
  }

  // .logi.proto.Kill kill = 7;
  if (has_kill()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_kill(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LogiSyncMessage)
}

::google::protobuf::uint8* LogiSyncMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LogiSyncMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .logi.proto.Ack ack = 2;
  if (has_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_ack(), deterministic, target);
  }

  // .logi.proto.Request request = 3;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_request(), deterministic, target);
  }

  // .logi.proto.Response response = 4;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_response(), deterministic, target);
  }

  // .logi.proto.Event event = 5;
  if (has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_event(), deterministic, target);
  }

  // .logi.proto.Pong pong = 6;
  if (has_pong()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_pong(), deterministic, target);
  }

  // .logi.proto.Kill kill = 7;
  if (has_kill()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_kill(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LogiSyncMessage)
  return target;
}

size_t LogiSyncMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LogiSyncMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .logi.proto.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  switch (message_case()) {
    // .logi.proto.Ack ack = 2;
    case kAck: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.ack_);
      break;
    }
    // .logi.proto.Request request = 3;
    case kRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.request_);
      break;
    }
    // .logi.proto.Response response = 4;
    case kResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.response_);
      break;
    }
    // .logi.proto.Event event = 5;
    case kEvent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.event_);
      break;
    }
    // .logi.proto.Pong pong = 6;
    case kPong: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.pong_);
      break;
    }
    // .logi.proto.Kill kill = 7;
    case kKill: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.kill_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogiSyncMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LogiSyncMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const LogiSyncMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogiSyncMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LogiSyncMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LogiSyncMessage)
    MergeFrom(*source);
  }
}

void LogiSyncMessage::MergeFrom(const LogiSyncMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LogiSyncMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::logi::proto::Header::MergeFrom(from.header());
  }
  switch (from.message_case()) {
    case kAck: {
      mutable_ack()->::logi::proto::Ack::MergeFrom(from.ack());
      break;
    }
    case kRequest: {
      mutable_request()->::logi::proto::Request::MergeFrom(from.request());
      break;
    }
    case kResponse: {
      mutable_response()->::logi::proto::Response::MergeFrom(from.response());
      break;
    }
    case kEvent: {
      mutable_event()->::logi::proto::Event::MergeFrom(from.event());
      break;
    }
    case kPong: {
      mutable_pong()->::logi::proto::Pong::MergeFrom(from.pong());
      break;
    }
    case kKill: {
      mutable_kill()->::logi::proto::Kill::MergeFrom(from.kill());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void LogiSyncMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LogiSyncMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogiSyncMessage::CopyFrom(const LogiSyncMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LogiSyncMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogiSyncMessage::IsInitialized() const {
  return true;
}

void LogiSyncMessage::Swap(LogiSyncMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogiSyncMessage::InternalSwap(LogiSyncMessage* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogiSyncMessage::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request::InitAsDefaultInstance() {
  ::logi::proto::_Request_default_instance_.firmware_request_ = const_cast< ::logi::proto::FirmwareRequest*>(
      ::logi::proto::FirmwareRequest::internal_default_instance());
  ::logi::proto::_Request_default_instance_.product_request_ = const_cast< ::logi::proto::ProductRequest*>(
      ::logi::proto::ProductRequest::internal_default_instance());
  ::logi::proto::_Request_default_instance_.configuration_request_ = const_cast< ::logi::proto::LogiSyncConfigurationRequest*>(
      ::logi::proto::LogiSyncConfigurationRequest::internal_default_instance());
}
void Request::set_allocated_firmware_request(::logi::proto::FirmwareRequest* firmware_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (firmware_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      firmware_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, firmware_request, submessage_arena);
    }
    set_has_firmware_request();
    payload_.firmware_request_ = firmware_request;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.Request.firmware_request)
}
void Request::clear_firmware_request() {
  if (has_firmware_request()) {
    delete payload_.firmware_request_;
    clear_has_payload();
  }
}
void Request::set_allocated_product_request(::logi::proto::ProductRequest* product_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (product_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      product_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, product_request, submessage_arena);
    }
    set_has_product_request();
    payload_.product_request_ = product_request;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.Request.product_request)
}
void Request::clear_product_request() {
  if (has_product_request()) {
    delete payload_.product_request_;
    clear_has_payload();
  }
}
void Request::set_allocated_configuration_request(::logi::proto::LogiSyncConfigurationRequest* configuration_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (configuration_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      configuration_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, configuration_request, submessage_arena);
    }
    set_has_configuration_request();
    payload_.configuration_request_ = configuration_request;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.Request.configuration_request)
}
void Request::clear_configuration_request() {
  if (has_configuration_request()) {
    delete payload_.configuration_request_;
    clear_has_payload();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kFirmwareRequestFieldNumber;
const int Request::kProductRequestFieldNumber;
const int Request::kConfigurationRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kFirmwareRequest: {
      mutable_firmware_request()->::logi::proto::FirmwareRequest::MergeFrom(from.firmware_request());
      break;
    }
    case kProductRequest: {
      mutable_product_request()->::logi::proto::ProductRequest::MergeFrom(from.product_request());
      break;
    }
    case kConfigurationRequest: {
      mutable_configuration_request()->::logi::proto::LogiSyncConfigurationRequest::MergeFrom(from.configuration_request());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:logi.proto.Request)
}

void Request::SharedCtor() {
  clear_has_payload();
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:logi.proto.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (has_payload()) {
    clear_payload();
  }
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_Request.base);
  return *internal_default_instance();
}


void Request::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:logi.proto.Request)
  switch (payload_case()) {
    case kFirmwareRequest: {
      delete payload_.firmware_request_;
      break;
    }
    case kProductRequest: {
      delete payload_.product_request_;
      break;
    }
    case kConfigurationRequest: {
      delete payload_.configuration_request_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .logi.proto.FirmwareRequest firmware_request = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_firmware_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.ProductRequest product_request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.LogiSyncConfigurationRequest configuration_request = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_configuration_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.FirmwareRequest firmware_request = 2;
  if (has_firmware_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_firmware_request(), output);
  }

  // .logi.proto.ProductRequest product_request = 3;
  if (has_product_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_product_request(), output);
  }

  // .logi.proto.LogiSyncConfigurationRequest configuration_request = 4;
  if (has_configuration_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_configuration_request(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.FirmwareRequest firmware_request = 2;
  if (has_firmware_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_firmware_request(), deterministic, target);
  }

  // .logi.proto.ProductRequest product_request = 3;
  if (has_product_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_product_request(), deterministic, target);
  }

  // .logi.proto.LogiSyncConfigurationRequest configuration_request = 4;
  if (has_configuration_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_configuration_request(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.Request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (payload_case()) {
    // .logi.proto.FirmwareRequest firmware_request = 2;
    case kFirmwareRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.firmware_request_);
      break;
    }
    // .logi.proto.ProductRequest product_request = 3;
    case kProductRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.product_request_);
      break;
    }
    // .logi.proto.LogiSyncConfigurationRequest configuration_request = 4;
    case kConfigurationRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.configuration_request_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kFirmwareRequest: {
      mutable_firmware_request()->::logi::proto::FirmwareRequest::MergeFrom(from.firmware_request());
      break;
    }
    case kProductRequest: {
      mutable_product_request()->::logi::proto::ProductRequest::MergeFrom(from.product_request());
      break;
    }
    case kConfigurationRequest: {
      mutable_configuration_request()->::logi::proto::LogiSyncConfigurationRequest::MergeFrom(from.configuration_request());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::logi::proto::_Response_default_instance_.firmware_response_ = const_cast< ::logi::proto::FirmwareResponse*>(
      ::logi::proto::FirmwareResponse::internal_default_instance());
  ::logi::proto::_Response_default_instance_.product_response_ = const_cast< ::logi::proto::ProductResponse*>(
      ::logi::proto::ProductResponse::internal_default_instance());
  ::logi::proto::_Response_default_instance_.configuration_response_ = const_cast< ::logi::proto::LogiSyncConfigurationResponse*>(
      ::logi::proto::LogiSyncConfigurationResponse::internal_default_instance());
}
void Response::set_allocated_firmware_response(::logi::proto::FirmwareResponse* firmware_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (firmware_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      firmware_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, firmware_response, submessage_arena);
    }
    set_has_firmware_response();
    payload_.firmware_response_ = firmware_response;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.Response.firmware_response)
}
void Response::clear_firmware_response() {
  if (has_firmware_response()) {
    delete payload_.firmware_response_;
    clear_has_payload();
  }
}
void Response::set_allocated_product_response(::logi::proto::ProductResponse* product_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (product_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      product_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, product_response, submessage_arena);
    }
    set_has_product_response();
    payload_.product_response_ = product_response;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.Response.product_response)
}
void Response::clear_product_response() {
  if (has_product_response()) {
    delete payload_.product_response_;
    clear_has_payload();
  }
}
void Response::set_allocated_configuration_response(::logi::proto::LogiSyncConfigurationResponse* configuration_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (configuration_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      configuration_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, configuration_response, submessage_arena);
    }
    set_has_configuration_response();
    payload_.configuration_response_ = configuration_response;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.Response.configuration_response)
}
void Response::clear_configuration_response() {
  if (has_configuration_response()) {
    delete payload_.configuration_response_;
    clear_has_payload();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kFirmwareResponseFieldNumber;
const int Response::kProductResponseFieldNumber;
const int Response::kConfigurationResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kFirmwareResponse: {
      mutable_firmware_response()->::logi::proto::FirmwareResponse::MergeFrom(from.firmware_response());
      break;
    }
    case kProductResponse: {
      mutable_product_response()->::logi::proto::ProductResponse::MergeFrom(from.product_response());
      break;
    }
    case kConfigurationResponse: {
      mutable_configuration_response()->::logi::proto::LogiSyncConfigurationResponse::MergeFrom(from.configuration_response());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:logi.proto.Response)
}

void Response::SharedCtor() {
  clear_has_payload();
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:logi.proto.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (has_payload()) {
    clear_payload();
  }
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_Response.base);
  return *internal_default_instance();
}


void Response::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:logi.proto.Response)
  switch (payload_case()) {
    case kFirmwareResponse: {
      delete payload_.firmware_response_;
      break;
    }
    case kProductResponse: {
      delete payload_.product_response_;
      break;
    }
    case kConfigurationResponse: {
      delete payload_.configuration_response_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .logi.proto.FirmwareResponse firmware_response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_firmware_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.ProductResponse product_response = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.LogiSyncConfigurationResponse configuration_response = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_configuration_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.FirmwareResponse firmware_response = 2;
  if (has_firmware_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_firmware_response(), output);
  }

  // .logi.proto.ProductResponse product_response = 3;
  if (has_product_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_product_response(), output);
  }

  // .logi.proto.LogiSyncConfigurationResponse configuration_response = 4;
  if (has_configuration_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_configuration_response(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.FirmwareResponse firmware_response = 2;
  if (has_firmware_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_firmware_response(), deterministic, target);
  }

  // .logi.proto.ProductResponse product_response = 3;
  if (has_product_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_product_response(), deterministic, target);
  }

  // .logi.proto.LogiSyncConfigurationResponse configuration_response = 4;
  if (has_configuration_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_configuration_response(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (payload_case()) {
    // .logi.proto.FirmwareResponse firmware_response = 2;
    case kFirmwareResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.firmware_response_);
      break;
    }
    // .logi.proto.ProductResponse product_response = 3;
    case kProductResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.product_response_);
      break;
    }
    // .logi.proto.LogiSyncConfigurationResponse configuration_response = 4;
    case kConfigurationResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.configuration_response_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kFirmwareResponse: {
      mutable_firmware_response()->::logi::proto::FirmwareResponse::MergeFrom(from.firmware_response());
      break;
    }
    case kProductResponse: {
      mutable_product_response()->::logi::proto::ProductResponse::MergeFrom(from.product_response());
      break;
    }
    case kConfigurationResponse: {
      mutable_configuration_response()->::logi::proto::LogiSyncConfigurationResponse::MergeFrom(from.configuration_response());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Event::InitAsDefaultInstance() {
  ::logi::proto::_Event_default_instance_.firmware_event_ = const_cast< ::logi::proto::FirmwareEvent*>(
      ::logi::proto::FirmwareEvent::internal_default_instance());
  ::logi::proto::_Event_default_instance_.product_event_ = const_cast< ::logi::proto::ProductEvent*>(
      ::logi::proto::ProductEvent::internal_default_instance());
  ::logi::proto::_Event_default_instance_.connection_event_ = const_cast< ::logi::proto::ConnectionEvent*>(
      ::logi::proto::ConnectionEvent::internal_default_instance());
}
void Event::set_allocated_firmware_event(::logi::proto::FirmwareEvent* firmware_event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (firmware_event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      firmware_event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, firmware_event, submessage_arena);
    }
    set_has_firmware_event();
    payload_.firmware_event_ = firmware_event;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.Event.firmware_event)
}
void Event::clear_firmware_event() {
  if (has_firmware_event()) {
    delete payload_.firmware_event_;
    clear_has_payload();
  }
}
void Event::set_allocated_product_event(::logi::proto::ProductEvent* product_event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (product_event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      product_event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, product_event, submessage_arena);
    }
    set_has_product_event();
    payload_.product_event_ = product_event;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.Event.product_event)
}
void Event::clear_product_event() {
  if (has_product_event()) {
    delete payload_.product_event_;
    clear_has_payload();
  }
}
void Event::set_allocated_connection_event(::logi::proto::ConnectionEvent* connection_event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (connection_event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection_event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection_event, submessage_arena);
    }
    set_has_connection_event();
    payload_.connection_event_ = connection_event;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.Event.connection_event)
}
void Event::clear_connection_event() {
  if (has_connection_event()) {
    delete payload_.connection_event_;
    clear_has_payload();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kFirmwareEventFieldNumber;
const int Event::kProductEventFieldNumber;
const int Event::kConnectionEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_Event.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kFirmwareEvent: {
      mutable_firmware_event()->::logi::proto::FirmwareEvent::MergeFrom(from.firmware_event());
      break;
    }
    case kProductEvent: {
      mutable_product_event()->::logi::proto::ProductEvent::MergeFrom(from.product_event());
      break;
    }
    case kConnectionEvent: {
      mutable_connection_event()->::logi::proto::ConnectionEvent::MergeFrom(from.connection_event());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:logi.proto.Event)
}

void Event::SharedCtor() {
  clear_has_payload();
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:logi.proto.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  if (has_payload()) {
    clear_payload();
  }
}

void Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Event& Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_Event.base);
  return *internal_default_instance();
}


void Event::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:logi.proto.Event)
  switch (payload_case()) {
    case kFirmwareEvent: {
      delete payload_.firmware_event_;
      break;
    }
    case kProductEvent: {
      delete payload_.product_event_;
      break;
    }
    case kConnectionEvent: {
      delete payload_.connection_event_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear();
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .logi.proto.FirmwareEvent firmware_event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_firmware_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.ProductEvent product_event = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.ConnectionEvent connection_event = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connection_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.FirmwareEvent firmware_event = 2;
  if (has_firmware_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_firmware_event(), output);
  }

  // .logi.proto.ProductEvent product_event = 3;
  if (has_product_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_product_event(), output);
  }

  // .logi.proto.ConnectionEvent connection_event = 4;
  if (has_connection_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_connection_event(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.FirmwareEvent firmware_event = 2;
  if (has_firmware_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_firmware_event(), deterministic, target);
  }

  // .logi.proto.ProductEvent product_event = 3;
  if (has_product_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_product_event(), deterministic, target);
  }

  // .logi.proto.ConnectionEvent connection_event = 4;
  if (has_connection_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_connection_event(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.Event)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (payload_case()) {
    // .logi.proto.FirmwareEvent firmware_event = 2;
    case kFirmwareEvent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.firmware_event_);
      break;
    }
    // .logi.proto.ProductEvent product_event = 3;
    case kProductEvent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.product_event_);
      break;
    }
    // .logi.proto.ConnectionEvent connection_event = 4;
    case kConnectionEvent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.connection_event_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kFirmwareEvent: {
      mutable_firmware_event()->::logi::proto::FirmwareEvent::MergeFrom(from.firmware_event());
      break;
    }
    case kProductEvent: {
      mutable_product_event()->::logi::proto::ProductEvent::MergeFrom(from.product_event());
      break;
    }
    case kConnectionEvent: {
      mutable_connection_event()->::logi::proto::ConnectionEvent::MergeFrom(from.connection_event());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ack::InitAsDefaultInstance() {
}
void Ack::clear_errors() {
  errors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ack::kErrorsFieldNumber;
const int Ack::kResponseGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ack::Ack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_Ack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.Ack)
}
Ack::Ack(const Ack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_guid().size() > 0) {
    response_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_guid_);
  }
  // @@protoc_insertion_point(copy_constructor:logi.proto.Ack)
}

void Ack::SharedCtor() {
  response_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Ack::~Ack() {
  // @@protoc_insertion_point(destructor:logi.proto.Ack)
  SharedDtor();
}

void Ack::SharedDtor() {
  response_guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Ack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ack::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ack& Ack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_Ack.base);
  return *internal_default_instance();
}


void Ack::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.Ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  response_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.Ack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .logi.proto.Error errors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_guid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_guid().data(), static_cast<int>(this->response_guid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.Ack.response_guid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.Ack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.Ack)
  return false;
#undef DO_
}

void Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.Ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Error errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->errors(static_cast<int>(i)),
      output);
  }

  // string response_guid = 2;
  if (this->response_guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_guid().data(), static_cast<int>(this->response_guid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.Ack.response_guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->response_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.Ack)
}

::google::protobuf::uint8* Ack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.Ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Error errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->errors(static_cast<int>(i)), deterministic, target);
  }

  // string response_guid = 2;
  if (this->response_guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_guid().data(), static_cast<int>(this->response_guid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.Ack.response_guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->response_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.Ack)
  return target;
}

size_t Ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.Ack)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .logi.proto.Error errors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  // string response_guid = 2;
  if (this->response_guid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.Ack)
  GOOGLE_DCHECK_NE(&from, this);
  const Ack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.Ack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.Ack)
    MergeFrom(*source);
  }
}

void Ack::MergeFrom(const Ack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.Ack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.response_guid().size() > 0) {

    response_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_guid_);
  }
}

void Ack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.Ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ack::CopyFrom(const Ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.Ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ack::IsInitialized() const {
  return true;
}

void Ack::Swap(Ack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ack::InternalSwap(Ack* other) {
  using std::swap;
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
  response_guid_.Swap(&other->response_guid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ack::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pong::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pong::kReservedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pong::Pong()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_Pong.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.Pong)
}
Pong::Pong(const Pong& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reserved_ = from.reserved_;
  // @@protoc_insertion_point(copy_constructor:logi.proto.Pong)
}

void Pong::SharedCtor() {
  reserved_ = false;
}

Pong::~Pong() {
  // @@protoc_insertion_point(destructor:logi.proto.Pong)
  SharedDtor();
}

void Pong::SharedDtor() {
}

void Pong::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pong::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pong& Pong::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_Pong.base);
  return *internal_default_instance();
}


void Pong::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.Pong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reserved_ = false;
  _internal_metadata_.Clear();
}

bool Pong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.Pong)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool reserved = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reserved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.Pong)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.Pong)
  return false;
#undef DO_
}

void Pong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.Pong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reserved = 1;
  if (this->reserved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reserved(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.Pong)
}

::google::protobuf::uint8* Pong::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.Pong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reserved = 1;
  if (this->reserved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reserved(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.Pong)
  return target;
}

size_t Pong::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.Pong)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool reserved = 1;
  if (this->reserved() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pong::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.Pong)
  GOOGLE_DCHECK_NE(&from, this);
  const Pong* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pong>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.Pong)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.Pong)
    MergeFrom(*source);
  }
}

void Pong::MergeFrom(const Pong& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.Pong)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reserved() != 0) {
    set_reserved(from.reserved());
  }
}

void Pong::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.Pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pong::CopyFrom(const Pong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.Pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pong::IsInitialized() const {
  return true;
}

void Pong::Swap(Pong* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pong::InternalSwap(Pong* other) {
  using std::swap;
  swap(reserved_, other->reserved_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pong::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Kill::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Kill::kReservedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Kill::Kill()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_Kill.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.Kill)
}
Kill::Kill(const Kill& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reserved_ = from.reserved_;
  // @@protoc_insertion_point(copy_constructor:logi.proto.Kill)
}

void Kill::SharedCtor() {
  reserved_ = false;
}

Kill::~Kill() {
  // @@protoc_insertion_point(destructor:logi.proto.Kill)
  SharedDtor();
}

void Kill::SharedDtor() {
}

void Kill::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Kill::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Kill& Kill::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_Kill.base);
  return *internal_default_instance();
}


void Kill::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.Kill)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reserved_ = false;
  _internal_metadata_.Clear();
}

bool Kill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.Kill)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool reserved = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reserved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.Kill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.Kill)
  return false;
#undef DO_
}

void Kill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.Kill)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reserved = 1;
  if (this->reserved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reserved(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.Kill)
}

::google::protobuf::uint8* Kill::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.Kill)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reserved = 1;
  if (this->reserved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reserved(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.Kill)
  return target;
}

size_t Kill::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.Kill)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool reserved = 1;
  if (this->reserved() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Kill::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.Kill)
  GOOGLE_DCHECK_NE(&from, this);
  const Kill* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Kill>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.Kill)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.Kill)
    MergeFrom(*source);
  }
}

void Kill::MergeFrom(const Kill& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.Kill)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reserved() != 0) {
    set_reserved(from.reserved());
  }
}

void Kill::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.Kill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Kill::CopyFrom(const Kill& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.Kill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Kill::IsInitialized() const {
  return true;
}

void Kill::Swap(Kill* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Kill::InternalSwap(Kill* other) {
  using std::swap;
  swap(reserved_, other->reserved_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Kill::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace logi
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::Header* Arena::CreateMaybeMessage< ::logi::proto::Header >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::Header >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LogiSyncMessage* Arena::CreateMaybeMessage< ::logi::proto::LogiSyncMessage >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LogiSyncMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::Request* Arena::CreateMaybeMessage< ::logi::proto::Request >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::Response* Arena::CreateMaybeMessage< ::logi::proto::Response >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::Event* Arena::CreateMaybeMessage< ::logi::proto::Event >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::Event >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::Ack* Arena::CreateMaybeMessage< ::logi::proto::Ack >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::Ack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::Pong* Arena::CreateMaybeMessage< ::logi::proto::Pong >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::Pong >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::Kill* Arena::CreateMaybeMessage< ::logi::proto::Kill >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::Kill >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
