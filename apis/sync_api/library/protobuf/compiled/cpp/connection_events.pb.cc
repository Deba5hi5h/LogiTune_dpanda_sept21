// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: connection_events.proto

#include "connection_events.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_connection_5fevents_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_connection_5fevents_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ClientConnectionEvent;
}  // namespace protobuf_connection_5fevents_2eproto
namespace protobuf_firmware_5fstructures_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_firmware_5fstructures_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FirmwareUpdateProgress;
}  // namespace protobuf_firmware_5fstructures_2eproto
namespace protobuf_product_5fstate_5fstructures_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_product_5fstate_5fstructures_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Product;
}  // namespace protobuf_product_5fstate_5fstructures_2eproto
namespace logi {
namespace proto {
class ClientConnectionEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientConnectionEvent>
      _instance;
} _ClientConnectionEvent_default_instance_;
class ConnectionEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectionEvent>
      _instance;
  const ::logi::proto::ClientConnectionEvent* client_connection_event_;
} _ConnectionEvent_default_instance_;
}  // namespace proto
}  // namespace logi
namespace protobuf_connection_5fevents_2eproto {
static void InitDefaultsClientConnectionEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_ClientConnectionEvent_default_instance_;
    new (ptr) ::logi::proto::ClientConnectionEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::ClientConnectionEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ClientConnectionEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsClientConnectionEvent}, {
      &protobuf_product_5fstate_5fstructures_2eproto::scc_info_Product.base,
      &protobuf_firmware_5fstructures_2eproto::scc_info_FirmwareUpdateProgress.base,}};

static void InitDefaultsConnectionEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_ConnectionEvent_default_instance_;
    new (ptr) ::logi::proto::ConnectionEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::ConnectionEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConnectionEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConnectionEvent}, {
      &protobuf_connection_5fevents_2eproto::scc_info_ClientConnectionEvent.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ClientConnectionEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectionEvent.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::ClientConnectionEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::ClientConnectionEvent, products_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::ClientConnectionEvent, updates_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::ConnectionEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::ConnectionEvent, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::logi::proto::ConnectionEventDefaultTypeInternal, client_connection_event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::ConnectionEvent, event_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::logi::proto::ClientConnectionEvent)},
  { 7, -1, sizeof(::logi::proto::ConnectionEvent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_ClientConnectionEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_ConnectionEvent_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "connection_events.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027connection_events.proto\022\nlogi.proto\032\036p"
      "roduct_state_structures.proto\032\031firmware_"
      "structures.proto\"s\n\025ClientConnectionEven"
      "t\022%\n\010products\030\001 \003(\0132\023.logi.proto.Product"
      "\0223\n\007updates\030\002 \003(\0132\".logi.proto.FirmwareU"
      "pdateProgress\"`\n\017ConnectionEvent\022D\n\027clie"
      "nt_connection_event\030\001 \001(\0132!.logi.proto.C"
      "lientConnectionEventH\000B\007\n\005eventB%\n#com.l"
      "ogitech.vc.sync.proto.messagesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 358);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "connection_events.proto", &protobuf_RegisterTypes);
  ::protobuf_product_5fstate_5fstructures_2eproto::AddDescriptors();
  ::protobuf_firmware_5fstructures_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_connection_5fevents_2eproto
namespace logi {
namespace proto {

// ===================================================================

void ClientConnectionEvent::InitAsDefaultInstance() {
}
void ClientConnectionEvent::clear_products() {
  products_.Clear();
}
void ClientConnectionEvent::clear_updates() {
  updates_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientConnectionEvent::kProductsFieldNumber;
const int ClientConnectionEvent::kUpdatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientConnectionEvent::ClientConnectionEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_connection_5fevents_2eproto::scc_info_ClientConnectionEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.ClientConnectionEvent)
}
ClientConnectionEvent::ClientConnectionEvent(const ClientConnectionEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      products_(from.products_),
      updates_(from.updates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:logi.proto.ClientConnectionEvent)
}

void ClientConnectionEvent::SharedCtor() {
}

ClientConnectionEvent::~ClientConnectionEvent() {
  // @@protoc_insertion_point(destructor:logi.proto.ClientConnectionEvent)
  SharedDtor();
}

void ClientConnectionEvent::SharedDtor() {
}

void ClientConnectionEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientConnectionEvent::descriptor() {
  ::protobuf_connection_5fevents_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_connection_5fevents_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientConnectionEvent& ClientConnectionEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_connection_5fevents_2eproto::scc_info_ClientConnectionEvent.base);
  return *internal_default_instance();
}


void ClientConnectionEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.ClientConnectionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  products_.Clear();
  updates_.Clear();
  _internal_metadata_.Clear();
}

bool ClientConnectionEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.ClientConnectionEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .logi.proto.Product products = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_products()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .logi.proto.FirmwareUpdateProgress updates = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_updates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.ClientConnectionEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.ClientConnectionEvent)
  return false;
#undef DO_
}

void ClientConnectionEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.ClientConnectionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Product products = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->products_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->products(static_cast<int>(i)),
      output);
  }

  // repeated .logi.proto.FirmwareUpdateProgress updates = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->updates_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->updates(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.ClientConnectionEvent)
}

::google::protobuf::uint8* ClientConnectionEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.ClientConnectionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Product products = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->products_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->products(static_cast<int>(i)), deterministic, target);
  }

  // repeated .logi.proto.FirmwareUpdateProgress updates = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->updates_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->updates(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.ClientConnectionEvent)
  return target;
}

size_t ClientConnectionEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.ClientConnectionEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .logi.proto.Product products = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->products_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->products(static_cast<int>(i)));
    }
  }

  // repeated .logi.proto.FirmwareUpdateProgress updates = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->updates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->updates(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientConnectionEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.ClientConnectionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientConnectionEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientConnectionEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.ClientConnectionEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.ClientConnectionEvent)
    MergeFrom(*source);
  }
}

void ClientConnectionEvent::MergeFrom(const ClientConnectionEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.ClientConnectionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  products_.MergeFrom(from.products_);
  updates_.MergeFrom(from.updates_);
}

void ClientConnectionEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.ClientConnectionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientConnectionEvent::CopyFrom(const ClientConnectionEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.ClientConnectionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientConnectionEvent::IsInitialized() const {
  return true;
}

void ClientConnectionEvent::Swap(ClientConnectionEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientConnectionEvent::InternalSwap(ClientConnectionEvent* other) {
  using std::swap;
  CastToBase(&products_)->InternalSwap(CastToBase(&other->products_));
  CastToBase(&updates_)->InternalSwap(CastToBase(&other->updates_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientConnectionEvent::GetMetadata() const {
  protobuf_connection_5fevents_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_connection_5fevents_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectionEvent::InitAsDefaultInstance() {
  ::logi::proto::_ConnectionEvent_default_instance_.client_connection_event_ = const_cast< ::logi::proto::ClientConnectionEvent*>(
      ::logi::proto::ClientConnectionEvent::internal_default_instance());
}
void ConnectionEvent::set_allocated_client_connection_event(::logi::proto::ClientConnectionEvent* client_connection_event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_event();
  if (client_connection_event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      client_connection_event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, client_connection_event, submessage_arena);
    }
    set_has_client_connection_event();
    event_.client_connection_event_ = client_connection_event;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.ConnectionEvent.client_connection_event)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectionEvent::kClientConnectionEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectionEvent::ConnectionEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_connection_5fevents_2eproto::scc_info_ConnectionEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.ConnectionEvent)
}
ConnectionEvent::ConnectionEvent(const ConnectionEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_event();
  switch (from.event_case()) {
    case kClientConnectionEvent: {
      mutable_client_connection_event()->::logi::proto::ClientConnectionEvent::MergeFrom(from.client_connection_event());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:logi.proto.ConnectionEvent)
}

void ConnectionEvent::SharedCtor() {
  clear_has_event();
}

ConnectionEvent::~ConnectionEvent() {
  // @@protoc_insertion_point(destructor:logi.proto.ConnectionEvent)
  SharedDtor();
}

void ConnectionEvent::SharedDtor() {
  if (has_event()) {
    clear_event();
  }
}

void ConnectionEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectionEvent::descriptor() {
  ::protobuf_connection_5fevents_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_connection_5fevents_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectionEvent& ConnectionEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_connection_5fevents_2eproto::scc_info_ConnectionEvent.base);
  return *internal_default_instance();
}


void ConnectionEvent::clear_event() {
// @@protoc_insertion_point(one_of_clear_start:logi.proto.ConnectionEvent)
  switch (event_case()) {
    case kClientConnectionEvent: {
      delete event_.client_connection_event_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void ConnectionEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.ConnectionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_event();
  _internal_metadata_.Clear();
}

bool ConnectionEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.ConnectionEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .logi.proto.ClientConnectionEvent client_connection_event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_connection_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.ConnectionEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.ConnectionEvent)
  return false;
#undef DO_
}

void ConnectionEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.ConnectionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.ClientConnectionEvent client_connection_event = 1;
  if (has_client_connection_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_client_connection_event(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.ConnectionEvent)
}

::google::protobuf::uint8* ConnectionEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.ConnectionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.ClientConnectionEvent client_connection_event = 1;
  if (has_client_connection_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_client_connection_event(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.ConnectionEvent)
  return target;
}

size_t ConnectionEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.ConnectionEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (event_case()) {
    // .logi.proto.ClientConnectionEvent client_connection_event = 1;
    case kClientConnectionEvent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *event_.client_connection_event_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectionEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.ConnectionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectionEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectionEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.ConnectionEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.ConnectionEvent)
    MergeFrom(*source);
  }
}

void ConnectionEvent::MergeFrom(const ConnectionEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.ConnectionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.event_case()) {
    case kClientConnectionEvent: {
      mutable_client_connection_event()->::logi::proto::ClientConnectionEvent::MergeFrom(from.client_connection_event());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void ConnectionEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.ConnectionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionEvent::CopyFrom(const ConnectionEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.ConnectionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionEvent::IsInitialized() const {
  return true;
}

void ConnectionEvent::Swap(ConnectionEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectionEvent::InternalSwap(ConnectionEvent* other) {
  using std::swap;
  swap(event_, other->event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectionEvent::GetMetadata() const {
  protobuf_connection_5fevents_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_connection_5fevents_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace logi
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::ClientConnectionEvent* Arena::CreateMaybeMessage< ::logi::proto::ClientConnectionEvent >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::ClientConnectionEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::ConnectionEvent* Arena::CreateMaybeMessage< ::logi::proto::ConnectionEvent >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::ConnectionEvent >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
