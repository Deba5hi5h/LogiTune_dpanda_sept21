// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloud_provisioning_requests.proto

#include "cloud_provisioning_requests.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_cloud_5fprovisioning_5fstructures_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cloud_5fprovisioning_5fstructures_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LRProvisioningData;
}  // namespace protobuf_cloud_5fprovisioning_5fstructures_2eproto
namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Error;
}  // namespace protobuf_common_2eproto
namespace protobuf_configuration_5fstructures_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_configuration_5fstructures_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HostInformation;
}  // namespace protobuf_configuration_5fstructures_2eproto
namespace logi {
namespace proto {
class LRProvisionHostRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LRProvisionHostRequest>
      _instance;
} _LRProvisionHostRequest_default_instance_;
class LRProvisionHostResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LRProvisionHostResponse>
      _instance;
} _LRProvisionHostResponse_default_instance_;
class LRDeprovisionHostRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LRDeprovisionHostRequest>
      _instance;
} _LRDeprovisionHostRequest_default_instance_;
class LRDeprovisionHostResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LRDeprovisionHostResponse>
      _instance;
} _LRDeprovisionHostResponse_default_instance_;
class LRGetProvisioningDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LRGetProvisioningDataRequest>
      _instance;
} _LRGetProvisioningDataRequest_default_instance_;
class LRGetProvisioningDataResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LRGetProvisioningDataResponse>
      _instance;
} _LRGetProvisioningDataResponse_default_instance_;
class LRSetCloudConnectionStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LRSetCloudConnectionStateRequest>
      _instance;
} _LRSetCloudConnectionStateRequest_default_instance_;
class LRSetCloudConnectionStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LRSetCloudConnectionStateResponse>
      _instance;
} _LRSetCloudConnectionStateResponse_default_instance_;
}  // namespace proto
}  // namespace logi
namespace protobuf_cloud_5fprovisioning_5frequests_2eproto {
static void InitDefaultsLRProvisionHostRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LRProvisionHostRequest_default_instance_;
    new (ptr) ::logi::proto::LRProvisionHostRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LRProvisionHostRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LRProvisionHostRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLRProvisionHostRequest}, {
      &protobuf_cloud_5fprovisioning_5fstructures_2eproto::scc_info_LRProvisioningData.base,}};

static void InitDefaultsLRProvisionHostResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LRProvisionHostResponse_default_instance_;
    new (ptr) ::logi::proto::LRProvisionHostResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LRProvisionHostResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LRProvisionHostResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLRProvisionHostResponse}, {
      &protobuf_common_2eproto::scc_info_Error.base,}};

static void InitDefaultsLRDeprovisionHostRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LRDeprovisionHostRequest_default_instance_;
    new (ptr) ::logi::proto::LRDeprovisionHostRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LRDeprovisionHostRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LRDeprovisionHostRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLRDeprovisionHostRequest}, {}};

static void InitDefaultsLRDeprovisionHostResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LRDeprovisionHostResponse_default_instance_;
    new (ptr) ::logi::proto::LRDeprovisionHostResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LRDeprovisionHostResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LRDeprovisionHostResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLRDeprovisionHostResponse}, {
      &protobuf_common_2eproto::scc_info_Error.base,}};

static void InitDefaultsLRGetProvisioningDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LRGetProvisioningDataRequest_default_instance_;
    new (ptr) ::logi::proto::LRGetProvisioningDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LRGetProvisioningDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LRGetProvisioningDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLRGetProvisioningDataRequest}, {}};

static void InitDefaultsLRGetProvisioningDataResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LRGetProvisioningDataResponse_default_instance_;
    new (ptr) ::logi::proto::LRGetProvisioningDataResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LRGetProvisioningDataResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LRGetProvisioningDataResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLRGetProvisioningDataResponse}, {
      &protobuf_common_2eproto::scc_info_Error.base,
      &protobuf_cloud_5fprovisioning_5fstructures_2eproto::scc_info_LRProvisioningData.base,}};

static void InitDefaultsLRSetCloudConnectionStateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LRSetCloudConnectionStateRequest_default_instance_;
    new (ptr) ::logi::proto::LRSetCloudConnectionStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LRSetCloudConnectionStateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LRSetCloudConnectionStateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLRSetCloudConnectionStateRequest}, {}};

static void InitDefaultsLRSetCloudConnectionStateResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LRSetCloudConnectionStateResponse_default_instance_;
    new (ptr) ::logi::proto::LRSetCloudConnectionStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LRSetCloudConnectionStateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LRSetCloudConnectionStateResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLRSetCloudConnectionStateResponse}, {
      &protobuf_common_2eproto::scc_info_Error.base,
      &protobuf_configuration_5fstructures_2eproto::scc_info_HostInformation.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LRProvisionHostRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LRProvisionHostResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LRDeprovisionHostRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LRDeprovisionHostResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LRGetProvisioningDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LRGetProvisioningDataResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LRSetCloudConnectionStateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LRSetCloudConnectionStateResponse.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisionHostRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisionHostRequest, provisioning_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisionHostResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisionHostResponse, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisionHostResponse, success_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRDeprovisionHostRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRDeprovisionHostRequest, reserved_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRDeprovisionHostResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRDeprovisionHostResponse, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRDeprovisionHostResponse, success_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRGetProvisioningDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRGetProvisioningDataRequest, reserved_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRGetProvisioningDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRGetProvisioningDataResponse, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRGetProvisioningDataResponse, is_provisioned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRGetProvisioningDataResponse, is_connected_to_cloud_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRGetProvisioningDataResponse, provisioning_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRSetCloudConnectionStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRSetCloudConnectionStateRequest, is_connected_to_cloud_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRSetCloudConnectionStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRSetCloudConnectionStateResponse, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRSetCloudConnectionStateResponse, host_information_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::logi::proto::LRProvisionHostRequest)},
  { 6, -1, sizeof(::logi::proto::LRProvisionHostResponse)},
  { 13, -1, sizeof(::logi::proto::LRDeprovisionHostRequest)},
  { 19, -1, sizeof(::logi::proto::LRDeprovisionHostResponse)},
  { 26, -1, sizeof(::logi::proto::LRGetProvisioningDataRequest)},
  { 32, -1, sizeof(::logi::proto::LRGetProvisioningDataResponse)},
  { 41, -1, sizeof(::logi::proto::LRSetCloudConnectionStateRequest)},
  { 47, -1, sizeof(::logi::proto::LRSetCloudConnectionStateResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LRProvisionHostRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LRProvisionHostResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LRDeprovisionHostRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LRDeprovisionHostResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LRGetProvisioningDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LRGetProvisioningDataResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LRSetCloudConnectionStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LRSetCloudConnectionStateResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "cloud_provisioning_requests.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!cloud_provisioning_requests.proto\022\nlog"
      "i.proto\032#cloud_provisioning_structures.p"
      "roto\032\014common.proto\032\036configuration_struct"
      "ures.proto\"S\n\026LRProvisionHostRequest\0229\n\021"
      "provisioning_data\030\001 \001(\0132\036.logi.proto.LRP"
      "rovisioningData\"M\n\027LRProvisionHostRespon"
      "se\022!\n\006errors\030\001 \003(\0132\021.logi.proto.Error\022\017\n"
      "\007success\030\002 \001(\010\",\n\030LRDeprovisionHostReque"
      "st\022\020\n\010reserved\030\001 \001(\010\"O\n\031LRDeprovisionHos"
      "tResponse\022!\n\006errors\030\001 \003(\0132\021.logi.proto.E"
      "rror\022\017\n\007success\030\002 \001(\010\"0\n\034LRGetProvisioni"
      "ngDataRequest\022\020\n\010reserved\030\001 \001(\010\"\264\001\n\035LRGe"
      "tProvisioningDataResponse\022!\n\006errors\030\001 \003("
      "\0132\021.logi.proto.Error\022\026\n\016is_provisioned\030\002"
      " \001(\010\022\035\n\025is_connected_to_cloud\030\003 \001(\010\0229\n\021p"
      "rovisioning_data\030\004 \001(\0132\036.logi.proto.LRPr"
      "ovisioningData\"A\n LRSetCloudConnectionSt"
      "ateRequest\022\035\n\025is_connected_to_cloud\030\001 \001("
      "\010\"}\n!LRSetCloudConnectionStateResponse\022!"
      "\n\006errors\030\001 \003(\0132\021.logi.proto.Error\0225\n\020hos"
      "t_information\030\002 \001(\0132\033.logi.proto.HostInf"
      "ormationB4\n2com.logitech.vc.raiden.proto"
      ".provisioning.messagesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 910);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cloud_provisioning_requests.proto", &protobuf_RegisterTypes);
  ::protobuf_cloud_5fprovisioning_5fstructures_2eproto::AddDescriptors();
  ::protobuf_common_2eproto::AddDescriptors();
  ::protobuf_configuration_5fstructures_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_cloud_5fprovisioning_5frequests_2eproto
namespace logi {
namespace proto {

// ===================================================================

void LRProvisionHostRequest::InitAsDefaultInstance() {
  ::logi::proto::_LRProvisionHostRequest_default_instance_._instance.get_mutable()->provisioning_data_ = const_cast< ::logi::proto::LRProvisioningData*>(
      ::logi::proto::LRProvisioningData::internal_default_instance());
}
void LRProvisionHostRequest::clear_provisioning_data() {
  if (GetArenaNoVirtual() == NULL && provisioning_data_ != NULL) {
    delete provisioning_data_;
  }
  provisioning_data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LRProvisionHostRequest::kProvisioningDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LRProvisionHostRequest::LRProvisionHostRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRProvisionHostRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LRProvisionHostRequest)
}
LRProvisionHostRequest::LRProvisionHostRequest(const LRProvisionHostRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_provisioning_data()) {
    provisioning_data_ = new ::logi::proto::LRProvisioningData(*from.provisioning_data_);
  } else {
    provisioning_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:logi.proto.LRProvisionHostRequest)
}

void LRProvisionHostRequest::SharedCtor() {
  provisioning_data_ = NULL;
}

LRProvisionHostRequest::~LRProvisionHostRequest() {
  // @@protoc_insertion_point(destructor:logi.proto.LRProvisionHostRequest)
  SharedDtor();
}

void LRProvisionHostRequest::SharedDtor() {
  if (this != internal_default_instance()) delete provisioning_data_;
}

void LRProvisionHostRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LRProvisionHostRequest::descriptor() {
  ::protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LRProvisionHostRequest& LRProvisionHostRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRProvisionHostRequest.base);
  return *internal_default_instance();
}


void LRProvisionHostRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LRProvisionHostRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && provisioning_data_ != NULL) {
    delete provisioning_data_;
  }
  provisioning_data_ = NULL;
  _internal_metadata_.Clear();
}

bool LRProvisionHostRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LRProvisionHostRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .logi.proto.LRProvisioningData provisioning_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_provisioning_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LRProvisionHostRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LRProvisionHostRequest)
  return false;
#undef DO_
}

void LRProvisionHostRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LRProvisionHostRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.LRProvisioningData provisioning_data = 1;
  if (this->has_provisioning_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_provisioning_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LRProvisionHostRequest)
}

::google::protobuf::uint8* LRProvisionHostRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LRProvisionHostRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.LRProvisioningData provisioning_data = 1;
  if (this->has_provisioning_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_provisioning_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LRProvisionHostRequest)
  return target;
}

size_t LRProvisionHostRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LRProvisionHostRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .logi.proto.LRProvisioningData provisioning_data = 1;
  if (this->has_provisioning_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *provisioning_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LRProvisionHostRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LRProvisionHostRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LRProvisionHostRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LRProvisionHostRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LRProvisionHostRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LRProvisionHostRequest)
    MergeFrom(*source);
  }
}

void LRProvisionHostRequest::MergeFrom(const LRProvisionHostRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LRProvisionHostRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_provisioning_data()) {
    mutable_provisioning_data()->::logi::proto::LRProvisioningData::MergeFrom(from.provisioning_data());
  }
}

void LRProvisionHostRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LRProvisionHostRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LRProvisionHostRequest::CopyFrom(const LRProvisionHostRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LRProvisionHostRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LRProvisionHostRequest::IsInitialized() const {
  return true;
}

void LRProvisionHostRequest::Swap(LRProvisionHostRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LRProvisionHostRequest::InternalSwap(LRProvisionHostRequest* other) {
  using std::swap;
  swap(provisioning_data_, other->provisioning_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LRProvisionHostRequest::GetMetadata() const {
  protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LRProvisionHostResponse::InitAsDefaultInstance() {
}
void LRProvisionHostResponse::clear_errors() {
  errors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LRProvisionHostResponse::kErrorsFieldNumber;
const int LRProvisionHostResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LRProvisionHostResponse::LRProvisionHostResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRProvisionHostResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LRProvisionHostResponse)
}
LRProvisionHostResponse::LRProvisionHostResponse(const LRProvisionHostResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:logi.proto.LRProvisionHostResponse)
}

void LRProvisionHostResponse::SharedCtor() {
  success_ = false;
}

LRProvisionHostResponse::~LRProvisionHostResponse() {
  // @@protoc_insertion_point(destructor:logi.proto.LRProvisionHostResponse)
  SharedDtor();
}

void LRProvisionHostResponse::SharedDtor() {
}

void LRProvisionHostResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LRProvisionHostResponse::descriptor() {
  ::protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LRProvisionHostResponse& LRProvisionHostResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRProvisionHostResponse.base);
  return *internal_default_instance();
}


void LRProvisionHostResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LRProvisionHostResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  success_ = false;
  _internal_metadata_.Clear();
}

bool LRProvisionHostResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LRProvisionHostResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .logi.proto.Error errors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LRProvisionHostResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LRProvisionHostResponse)
  return false;
#undef DO_
}

void LRProvisionHostResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LRProvisionHostResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Error errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->errors(static_cast<int>(i)),
      output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LRProvisionHostResponse)
}

::google::protobuf::uint8* LRProvisionHostResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LRProvisionHostResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Error errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->errors(static_cast<int>(i)), deterministic, target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LRProvisionHostResponse)
  return target;
}

size_t LRProvisionHostResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LRProvisionHostResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .logi.proto.Error errors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LRProvisionHostResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LRProvisionHostResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LRProvisionHostResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LRProvisionHostResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LRProvisionHostResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LRProvisionHostResponse)
    MergeFrom(*source);
  }
}

void LRProvisionHostResponse::MergeFrom(const LRProvisionHostResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LRProvisionHostResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void LRProvisionHostResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LRProvisionHostResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LRProvisionHostResponse::CopyFrom(const LRProvisionHostResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LRProvisionHostResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LRProvisionHostResponse::IsInitialized() const {
  return true;
}

void LRProvisionHostResponse::Swap(LRProvisionHostResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LRProvisionHostResponse::InternalSwap(LRProvisionHostResponse* other) {
  using std::swap;
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LRProvisionHostResponse::GetMetadata() const {
  protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LRDeprovisionHostRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LRDeprovisionHostRequest::kReservedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LRDeprovisionHostRequest::LRDeprovisionHostRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRDeprovisionHostRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LRDeprovisionHostRequest)
}
LRDeprovisionHostRequest::LRDeprovisionHostRequest(const LRDeprovisionHostRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reserved_ = from.reserved_;
  // @@protoc_insertion_point(copy_constructor:logi.proto.LRDeprovisionHostRequest)
}

void LRDeprovisionHostRequest::SharedCtor() {
  reserved_ = false;
}

LRDeprovisionHostRequest::~LRDeprovisionHostRequest() {
  // @@protoc_insertion_point(destructor:logi.proto.LRDeprovisionHostRequest)
  SharedDtor();
}

void LRDeprovisionHostRequest::SharedDtor() {
}

void LRDeprovisionHostRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LRDeprovisionHostRequest::descriptor() {
  ::protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LRDeprovisionHostRequest& LRDeprovisionHostRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRDeprovisionHostRequest.base);
  return *internal_default_instance();
}


void LRDeprovisionHostRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LRDeprovisionHostRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reserved_ = false;
  _internal_metadata_.Clear();
}

bool LRDeprovisionHostRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LRDeprovisionHostRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool reserved = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reserved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LRDeprovisionHostRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LRDeprovisionHostRequest)
  return false;
#undef DO_
}

void LRDeprovisionHostRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LRDeprovisionHostRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reserved = 1;
  if (this->reserved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reserved(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LRDeprovisionHostRequest)
}

::google::protobuf::uint8* LRDeprovisionHostRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LRDeprovisionHostRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reserved = 1;
  if (this->reserved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reserved(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LRDeprovisionHostRequest)
  return target;
}

size_t LRDeprovisionHostRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LRDeprovisionHostRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool reserved = 1;
  if (this->reserved() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LRDeprovisionHostRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LRDeprovisionHostRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LRDeprovisionHostRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LRDeprovisionHostRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LRDeprovisionHostRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LRDeprovisionHostRequest)
    MergeFrom(*source);
  }
}

void LRDeprovisionHostRequest::MergeFrom(const LRDeprovisionHostRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LRDeprovisionHostRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reserved() != 0) {
    set_reserved(from.reserved());
  }
}

void LRDeprovisionHostRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LRDeprovisionHostRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LRDeprovisionHostRequest::CopyFrom(const LRDeprovisionHostRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LRDeprovisionHostRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LRDeprovisionHostRequest::IsInitialized() const {
  return true;
}

void LRDeprovisionHostRequest::Swap(LRDeprovisionHostRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LRDeprovisionHostRequest::InternalSwap(LRDeprovisionHostRequest* other) {
  using std::swap;
  swap(reserved_, other->reserved_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LRDeprovisionHostRequest::GetMetadata() const {
  protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LRDeprovisionHostResponse::InitAsDefaultInstance() {
}
void LRDeprovisionHostResponse::clear_errors() {
  errors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LRDeprovisionHostResponse::kErrorsFieldNumber;
const int LRDeprovisionHostResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LRDeprovisionHostResponse::LRDeprovisionHostResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRDeprovisionHostResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LRDeprovisionHostResponse)
}
LRDeprovisionHostResponse::LRDeprovisionHostResponse(const LRDeprovisionHostResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:logi.proto.LRDeprovisionHostResponse)
}

void LRDeprovisionHostResponse::SharedCtor() {
  success_ = false;
}

LRDeprovisionHostResponse::~LRDeprovisionHostResponse() {
  // @@protoc_insertion_point(destructor:logi.proto.LRDeprovisionHostResponse)
  SharedDtor();
}

void LRDeprovisionHostResponse::SharedDtor() {
}

void LRDeprovisionHostResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LRDeprovisionHostResponse::descriptor() {
  ::protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LRDeprovisionHostResponse& LRDeprovisionHostResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRDeprovisionHostResponse.base);
  return *internal_default_instance();
}


void LRDeprovisionHostResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LRDeprovisionHostResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  success_ = false;
  _internal_metadata_.Clear();
}

bool LRDeprovisionHostResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LRDeprovisionHostResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .logi.proto.Error errors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LRDeprovisionHostResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LRDeprovisionHostResponse)
  return false;
#undef DO_
}

void LRDeprovisionHostResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LRDeprovisionHostResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Error errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->errors(static_cast<int>(i)),
      output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LRDeprovisionHostResponse)
}

::google::protobuf::uint8* LRDeprovisionHostResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LRDeprovisionHostResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Error errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->errors(static_cast<int>(i)), deterministic, target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LRDeprovisionHostResponse)
  return target;
}

size_t LRDeprovisionHostResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LRDeprovisionHostResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .logi.proto.Error errors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LRDeprovisionHostResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LRDeprovisionHostResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LRDeprovisionHostResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LRDeprovisionHostResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LRDeprovisionHostResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LRDeprovisionHostResponse)
    MergeFrom(*source);
  }
}

void LRDeprovisionHostResponse::MergeFrom(const LRDeprovisionHostResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LRDeprovisionHostResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void LRDeprovisionHostResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LRDeprovisionHostResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LRDeprovisionHostResponse::CopyFrom(const LRDeprovisionHostResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LRDeprovisionHostResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LRDeprovisionHostResponse::IsInitialized() const {
  return true;
}

void LRDeprovisionHostResponse::Swap(LRDeprovisionHostResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LRDeprovisionHostResponse::InternalSwap(LRDeprovisionHostResponse* other) {
  using std::swap;
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LRDeprovisionHostResponse::GetMetadata() const {
  protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LRGetProvisioningDataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LRGetProvisioningDataRequest::kReservedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LRGetProvisioningDataRequest::LRGetProvisioningDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRGetProvisioningDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LRGetProvisioningDataRequest)
}
LRGetProvisioningDataRequest::LRGetProvisioningDataRequest(const LRGetProvisioningDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reserved_ = from.reserved_;
  // @@protoc_insertion_point(copy_constructor:logi.proto.LRGetProvisioningDataRequest)
}

void LRGetProvisioningDataRequest::SharedCtor() {
  reserved_ = false;
}

LRGetProvisioningDataRequest::~LRGetProvisioningDataRequest() {
  // @@protoc_insertion_point(destructor:logi.proto.LRGetProvisioningDataRequest)
  SharedDtor();
}

void LRGetProvisioningDataRequest::SharedDtor() {
}

void LRGetProvisioningDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LRGetProvisioningDataRequest::descriptor() {
  ::protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LRGetProvisioningDataRequest& LRGetProvisioningDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRGetProvisioningDataRequest.base);
  return *internal_default_instance();
}


void LRGetProvisioningDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LRGetProvisioningDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reserved_ = false;
  _internal_metadata_.Clear();
}

bool LRGetProvisioningDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LRGetProvisioningDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool reserved = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reserved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LRGetProvisioningDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LRGetProvisioningDataRequest)
  return false;
#undef DO_
}

void LRGetProvisioningDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LRGetProvisioningDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reserved = 1;
  if (this->reserved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reserved(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LRGetProvisioningDataRequest)
}

::google::protobuf::uint8* LRGetProvisioningDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LRGetProvisioningDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reserved = 1;
  if (this->reserved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reserved(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LRGetProvisioningDataRequest)
  return target;
}

size_t LRGetProvisioningDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LRGetProvisioningDataRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool reserved = 1;
  if (this->reserved() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LRGetProvisioningDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LRGetProvisioningDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LRGetProvisioningDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LRGetProvisioningDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LRGetProvisioningDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LRGetProvisioningDataRequest)
    MergeFrom(*source);
  }
}

void LRGetProvisioningDataRequest::MergeFrom(const LRGetProvisioningDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LRGetProvisioningDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reserved() != 0) {
    set_reserved(from.reserved());
  }
}

void LRGetProvisioningDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LRGetProvisioningDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LRGetProvisioningDataRequest::CopyFrom(const LRGetProvisioningDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LRGetProvisioningDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LRGetProvisioningDataRequest::IsInitialized() const {
  return true;
}

void LRGetProvisioningDataRequest::Swap(LRGetProvisioningDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LRGetProvisioningDataRequest::InternalSwap(LRGetProvisioningDataRequest* other) {
  using std::swap;
  swap(reserved_, other->reserved_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LRGetProvisioningDataRequest::GetMetadata() const {
  protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LRGetProvisioningDataResponse::InitAsDefaultInstance() {
  ::logi::proto::_LRGetProvisioningDataResponse_default_instance_._instance.get_mutable()->provisioning_data_ = const_cast< ::logi::proto::LRProvisioningData*>(
      ::logi::proto::LRProvisioningData::internal_default_instance());
}
void LRGetProvisioningDataResponse::clear_errors() {
  errors_.Clear();
}
void LRGetProvisioningDataResponse::clear_provisioning_data() {
  if (GetArenaNoVirtual() == NULL && provisioning_data_ != NULL) {
    delete provisioning_data_;
  }
  provisioning_data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LRGetProvisioningDataResponse::kErrorsFieldNumber;
const int LRGetProvisioningDataResponse::kIsProvisionedFieldNumber;
const int LRGetProvisioningDataResponse::kIsConnectedToCloudFieldNumber;
const int LRGetProvisioningDataResponse::kProvisioningDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LRGetProvisioningDataResponse::LRGetProvisioningDataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRGetProvisioningDataResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LRGetProvisioningDataResponse)
}
LRGetProvisioningDataResponse::LRGetProvisioningDataResponse(const LRGetProvisioningDataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_provisioning_data()) {
    provisioning_data_ = new ::logi::proto::LRProvisioningData(*from.provisioning_data_);
  } else {
    provisioning_data_ = NULL;
  }
  ::memcpy(&is_provisioned_, &from.is_provisioned_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_connected_to_cloud_) -
    reinterpret_cast<char*>(&is_provisioned_)) + sizeof(is_connected_to_cloud_));
  // @@protoc_insertion_point(copy_constructor:logi.proto.LRGetProvisioningDataResponse)
}

void LRGetProvisioningDataResponse::SharedCtor() {
  ::memset(&provisioning_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_connected_to_cloud_) -
      reinterpret_cast<char*>(&provisioning_data_)) + sizeof(is_connected_to_cloud_));
}

LRGetProvisioningDataResponse::~LRGetProvisioningDataResponse() {
  // @@protoc_insertion_point(destructor:logi.proto.LRGetProvisioningDataResponse)
  SharedDtor();
}

void LRGetProvisioningDataResponse::SharedDtor() {
  if (this != internal_default_instance()) delete provisioning_data_;
}

void LRGetProvisioningDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LRGetProvisioningDataResponse::descriptor() {
  ::protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LRGetProvisioningDataResponse& LRGetProvisioningDataResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRGetProvisioningDataResponse.base);
  return *internal_default_instance();
}


void LRGetProvisioningDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LRGetProvisioningDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  if (GetArenaNoVirtual() == NULL && provisioning_data_ != NULL) {
    delete provisioning_data_;
  }
  provisioning_data_ = NULL;
  ::memset(&is_provisioned_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_connected_to_cloud_) -
      reinterpret_cast<char*>(&is_provisioned_)) + sizeof(is_connected_to_cloud_));
  _internal_metadata_.Clear();
}

bool LRGetProvisioningDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LRGetProvisioningDataResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .logi.proto.Error errors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_provisioned = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_provisioned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_connected_to_cloud = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_connected_to_cloud_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.LRProvisioningData provisioning_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_provisioning_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LRGetProvisioningDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LRGetProvisioningDataResponse)
  return false;
#undef DO_
}

void LRGetProvisioningDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LRGetProvisioningDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Error errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->errors(static_cast<int>(i)),
      output);
  }

  // bool is_provisioned = 2;
  if (this->is_provisioned() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_provisioned(), output);
  }

  // bool is_connected_to_cloud = 3;
  if (this->is_connected_to_cloud() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_connected_to_cloud(), output);
  }

  // .logi.proto.LRProvisioningData provisioning_data = 4;
  if (this->has_provisioning_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_provisioning_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LRGetProvisioningDataResponse)
}

::google::protobuf::uint8* LRGetProvisioningDataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LRGetProvisioningDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Error errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->errors(static_cast<int>(i)), deterministic, target);
  }

  // bool is_provisioned = 2;
  if (this->is_provisioned() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_provisioned(), target);
  }

  // bool is_connected_to_cloud = 3;
  if (this->is_connected_to_cloud() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_connected_to_cloud(), target);
  }

  // .logi.proto.LRProvisioningData provisioning_data = 4;
  if (this->has_provisioning_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_provisioning_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LRGetProvisioningDataResponse)
  return target;
}

size_t LRGetProvisioningDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LRGetProvisioningDataResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .logi.proto.Error errors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  // .logi.proto.LRProvisioningData provisioning_data = 4;
  if (this->has_provisioning_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *provisioning_data_);
  }

  // bool is_provisioned = 2;
  if (this->is_provisioned() != 0) {
    total_size += 1 + 1;
  }

  // bool is_connected_to_cloud = 3;
  if (this->is_connected_to_cloud() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LRGetProvisioningDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LRGetProvisioningDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LRGetProvisioningDataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LRGetProvisioningDataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LRGetProvisioningDataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LRGetProvisioningDataResponse)
    MergeFrom(*source);
  }
}

void LRGetProvisioningDataResponse::MergeFrom(const LRGetProvisioningDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LRGetProvisioningDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_provisioning_data()) {
    mutable_provisioning_data()->::logi::proto::LRProvisioningData::MergeFrom(from.provisioning_data());
  }
  if (from.is_provisioned() != 0) {
    set_is_provisioned(from.is_provisioned());
  }
  if (from.is_connected_to_cloud() != 0) {
    set_is_connected_to_cloud(from.is_connected_to_cloud());
  }
}

void LRGetProvisioningDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LRGetProvisioningDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LRGetProvisioningDataResponse::CopyFrom(const LRGetProvisioningDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LRGetProvisioningDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LRGetProvisioningDataResponse::IsInitialized() const {
  return true;
}

void LRGetProvisioningDataResponse::Swap(LRGetProvisioningDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LRGetProvisioningDataResponse::InternalSwap(LRGetProvisioningDataResponse* other) {
  using std::swap;
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
  swap(provisioning_data_, other->provisioning_data_);
  swap(is_provisioned_, other->is_provisioned_);
  swap(is_connected_to_cloud_, other->is_connected_to_cloud_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LRGetProvisioningDataResponse::GetMetadata() const {
  protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LRSetCloudConnectionStateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LRSetCloudConnectionStateRequest::kIsConnectedToCloudFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LRSetCloudConnectionStateRequest::LRSetCloudConnectionStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRSetCloudConnectionStateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LRSetCloudConnectionStateRequest)
}
LRSetCloudConnectionStateRequest::LRSetCloudConnectionStateRequest(const LRSetCloudConnectionStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_connected_to_cloud_ = from.is_connected_to_cloud_;
  // @@protoc_insertion_point(copy_constructor:logi.proto.LRSetCloudConnectionStateRequest)
}

void LRSetCloudConnectionStateRequest::SharedCtor() {
  is_connected_to_cloud_ = false;
}

LRSetCloudConnectionStateRequest::~LRSetCloudConnectionStateRequest() {
  // @@protoc_insertion_point(destructor:logi.proto.LRSetCloudConnectionStateRequest)
  SharedDtor();
}

void LRSetCloudConnectionStateRequest::SharedDtor() {
}

void LRSetCloudConnectionStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LRSetCloudConnectionStateRequest::descriptor() {
  ::protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LRSetCloudConnectionStateRequest& LRSetCloudConnectionStateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRSetCloudConnectionStateRequest.base);
  return *internal_default_instance();
}


void LRSetCloudConnectionStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LRSetCloudConnectionStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_connected_to_cloud_ = false;
  _internal_metadata_.Clear();
}

bool LRSetCloudConnectionStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LRSetCloudConnectionStateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_connected_to_cloud = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_connected_to_cloud_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LRSetCloudConnectionStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LRSetCloudConnectionStateRequest)
  return false;
#undef DO_
}

void LRSetCloudConnectionStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LRSetCloudConnectionStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_connected_to_cloud = 1;
  if (this->is_connected_to_cloud() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_connected_to_cloud(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LRSetCloudConnectionStateRequest)
}

::google::protobuf::uint8* LRSetCloudConnectionStateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LRSetCloudConnectionStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_connected_to_cloud = 1;
  if (this->is_connected_to_cloud() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_connected_to_cloud(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LRSetCloudConnectionStateRequest)
  return target;
}

size_t LRSetCloudConnectionStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LRSetCloudConnectionStateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_connected_to_cloud = 1;
  if (this->is_connected_to_cloud() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LRSetCloudConnectionStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LRSetCloudConnectionStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LRSetCloudConnectionStateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LRSetCloudConnectionStateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LRSetCloudConnectionStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LRSetCloudConnectionStateRequest)
    MergeFrom(*source);
  }
}

void LRSetCloudConnectionStateRequest::MergeFrom(const LRSetCloudConnectionStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LRSetCloudConnectionStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_connected_to_cloud() != 0) {
    set_is_connected_to_cloud(from.is_connected_to_cloud());
  }
}

void LRSetCloudConnectionStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LRSetCloudConnectionStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LRSetCloudConnectionStateRequest::CopyFrom(const LRSetCloudConnectionStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LRSetCloudConnectionStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LRSetCloudConnectionStateRequest::IsInitialized() const {
  return true;
}

void LRSetCloudConnectionStateRequest::Swap(LRSetCloudConnectionStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LRSetCloudConnectionStateRequest::InternalSwap(LRSetCloudConnectionStateRequest* other) {
  using std::swap;
  swap(is_connected_to_cloud_, other->is_connected_to_cloud_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LRSetCloudConnectionStateRequest::GetMetadata() const {
  protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LRSetCloudConnectionStateResponse::InitAsDefaultInstance() {
  ::logi::proto::_LRSetCloudConnectionStateResponse_default_instance_._instance.get_mutable()->host_information_ = const_cast< ::logi::proto::HostInformation*>(
      ::logi::proto::HostInformation::internal_default_instance());
}
void LRSetCloudConnectionStateResponse::clear_errors() {
  errors_.Clear();
}
void LRSetCloudConnectionStateResponse::clear_host_information() {
  if (GetArenaNoVirtual() == NULL && host_information_ != NULL) {
    delete host_information_;
  }
  host_information_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LRSetCloudConnectionStateResponse::kErrorsFieldNumber;
const int LRSetCloudConnectionStateResponse::kHostInformationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LRSetCloudConnectionStateResponse::LRSetCloudConnectionStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRSetCloudConnectionStateResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LRSetCloudConnectionStateResponse)
}
LRSetCloudConnectionStateResponse::LRSetCloudConnectionStateResponse(const LRSetCloudConnectionStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_host_information()) {
    host_information_ = new ::logi::proto::HostInformation(*from.host_information_);
  } else {
    host_information_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:logi.proto.LRSetCloudConnectionStateResponse)
}

void LRSetCloudConnectionStateResponse::SharedCtor() {
  host_information_ = NULL;
}

LRSetCloudConnectionStateResponse::~LRSetCloudConnectionStateResponse() {
  // @@protoc_insertion_point(destructor:logi.proto.LRSetCloudConnectionStateResponse)
  SharedDtor();
}

void LRSetCloudConnectionStateResponse::SharedDtor() {
  if (this != internal_default_instance()) delete host_information_;
}

void LRSetCloudConnectionStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LRSetCloudConnectionStateResponse::descriptor() {
  ::protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LRSetCloudConnectionStateResponse& LRSetCloudConnectionStateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cloud_5fprovisioning_5frequests_2eproto::scc_info_LRSetCloudConnectionStateResponse.base);
  return *internal_default_instance();
}


void LRSetCloudConnectionStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LRSetCloudConnectionStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  if (GetArenaNoVirtual() == NULL && host_information_ != NULL) {
    delete host_information_;
  }
  host_information_ = NULL;
  _internal_metadata_.Clear();
}

bool LRSetCloudConnectionStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LRSetCloudConnectionStateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .logi.proto.Error errors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.HostInformation host_information = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_information()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LRSetCloudConnectionStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LRSetCloudConnectionStateResponse)
  return false;
#undef DO_
}

void LRSetCloudConnectionStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LRSetCloudConnectionStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Error errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->errors(static_cast<int>(i)),
      output);
  }

  // .logi.proto.HostInformation host_information = 2;
  if (this->has_host_information()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_host_information(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LRSetCloudConnectionStateResponse)
}

::google::protobuf::uint8* LRSetCloudConnectionStateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LRSetCloudConnectionStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Error errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->errors(static_cast<int>(i)), deterministic, target);
  }

  // .logi.proto.HostInformation host_information = 2;
  if (this->has_host_information()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_host_information(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LRSetCloudConnectionStateResponse)
  return target;
}

size_t LRSetCloudConnectionStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LRSetCloudConnectionStateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .logi.proto.Error errors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  // .logi.proto.HostInformation host_information = 2;
  if (this->has_host_information()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *host_information_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LRSetCloudConnectionStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LRSetCloudConnectionStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LRSetCloudConnectionStateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LRSetCloudConnectionStateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LRSetCloudConnectionStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LRSetCloudConnectionStateResponse)
    MergeFrom(*source);
  }
}

void LRSetCloudConnectionStateResponse::MergeFrom(const LRSetCloudConnectionStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LRSetCloudConnectionStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_host_information()) {
    mutable_host_information()->::logi::proto::HostInformation::MergeFrom(from.host_information());
  }
}

void LRSetCloudConnectionStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LRSetCloudConnectionStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LRSetCloudConnectionStateResponse::CopyFrom(const LRSetCloudConnectionStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LRSetCloudConnectionStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LRSetCloudConnectionStateResponse::IsInitialized() const {
  return true;
}

void LRSetCloudConnectionStateResponse::Swap(LRSetCloudConnectionStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LRSetCloudConnectionStateResponse::InternalSwap(LRSetCloudConnectionStateResponse* other) {
  using std::swap;
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
  swap(host_information_, other->host_information_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LRSetCloudConnectionStateResponse::GetMetadata() const {
  protobuf_cloud_5fprovisioning_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5frequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace logi
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LRProvisionHostRequest* Arena::CreateMaybeMessage< ::logi::proto::LRProvisionHostRequest >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LRProvisionHostRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LRProvisionHostResponse* Arena::CreateMaybeMessage< ::logi::proto::LRProvisionHostResponse >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LRProvisionHostResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LRDeprovisionHostRequest* Arena::CreateMaybeMessage< ::logi::proto::LRDeprovisionHostRequest >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LRDeprovisionHostRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LRDeprovisionHostResponse* Arena::CreateMaybeMessage< ::logi::proto::LRDeprovisionHostResponse >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LRDeprovisionHostResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LRGetProvisioningDataRequest* Arena::CreateMaybeMessage< ::logi::proto::LRGetProvisioningDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LRGetProvisioningDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LRGetProvisioningDataResponse* Arena::CreateMaybeMessage< ::logi::proto::LRGetProvisioningDataResponse >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LRGetProvisioningDataResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LRSetCloudConnectionStateRequest* Arena::CreateMaybeMessage< ::logi::proto::LRSetCloudConnectionStateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LRSetCloudConnectionStateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LRSetCloudConnectionStateResponse* Arena::CreateMaybeMessage< ::logi::proto::LRSetCloudConnectionStateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LRSetCloudConnectionStateResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
