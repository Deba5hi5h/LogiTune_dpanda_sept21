// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloud_device_requests.proto

#include "cloud_device_requests.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Error;
}  // namespace protobuf_common_2eproto
namespace logi {
namespace proto {
class LRCheckForProductUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LRCheckForProductUpdateRequest>
      _instance;
} _LRCheckForProductUpdateRequest_default_instance_;
class LRCheckForProductUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LRCheckForProductUpdateResponse>
      _instance;
} _LRCheckForProductUpdateResponse_default_instance_;
}  // namespace proto
}  // namespace logi
namespace protobuf_cloud_5fdevice_5frequests_2eproto {
static void InitDefaultsLRCheckForProductUpdateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LRCheckForProductUpdateRequest_default_instance_;
    new (ptr) ::logi::proto::LRCheckForProductUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LRCheckForProductUpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LRCheckForProductUpdateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLRCheckForProductUpdateRequest}, {}};

static void InitDefaultsLRCheckForProductUpdateResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LRCheckForProductUpdateResponse_default_instance_;
    new (ptr) ::logi::proto::LRCheckForProductUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LRCheckForProductUpdateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LRCheckForProductUpdateResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLRCheckForProductUpdateResponse}, {
      &protobuf_common_2eproto::scc_info_Error.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LRCheckForProductUpdateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LRCheckForProductUpdateResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRCheckForProductUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRCheckForProductUpdateRequest, update_now_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRCheckForProductUpdateRequest, product_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRCheckForProductUpdateRequest, product_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRCheckForProductUpdateRequest, expiration_millis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRCheckForProductUpdateRequest, reporting_interval_seconds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRCheckForProductUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRCheckForProductUpdateResponse, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRCheckForProductUpdateResponse, success_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::logi::proto::LRCheckForProductUpdateRequest)},
  { 10, -1, sizeof(::logi::proto::LRCheckForProductUpdateResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LRCheckForProductUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LRCheckForProductUpdateResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "cloud_device_requests.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033cloud_device_requests.proto\022\nlogi.prot"
      "o\032\014common.proto\032\036product_state_structure"
      "s.proto\"\273\001\n\036LRCheckForProductUpdateReque"
      "st\022\022\n\nupdate_now\030\001 \001(\010\022\024\n\014product_uuid\030\002"
      " \001(\t\0220\n\rproduct_model\030\003 \001(\0162\031.logi.proto"
      ".Product.Model\022\031\n\021expiration_millis\030\004 \001("
      "\004\022\"\n\032reporting_interval_seconds\030\005 \001(\r\"U\n"
      "\037LRCheckForProductUpdateResponse\022!\n\006erro"
      "rs\030\001 \003(\0132\021.logi.proto.Error\022\017\n\007success\030\002"
      " \001(\010B.\n,com.logitech.vc.raiden.proto.dev"
      "ice.messagesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 420);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cloud_device_requests.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
  ::protobuf_product_5fstate_5fstructures_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_cloud_5fdevice_5frequests_2eproto
namespace logi {
namespace proto {

// ===================================================================

void LRCheckForProductUpdateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LRCheckForProductUpdateRequest::kUpdateNowFieldNumber;
const int LRCheckForProductUpdateRequest::kProductUuidFieldNumber;
const int LRCheckForProductUpdateRequest::kProductModelFieldNumber;
const int LRCheckForProductUpdateRequest::kExpirationMillisFieldNumber;
const int LRCheckForProductUpdateRequest::kReportingIntervalSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LRCheckForProductUpdateRequest::LRCheckForProductUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cloud_5fdevice_5frequests_2eproto::scc_info_LRCheckForProductUpdateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LRCheckForProductUpdateRequest)
}
LRCheckForProductUpdateRequest::LRCheckForProductUpdateRequest(const LRCheckForProductUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_uuid().size() > 0) {
    product_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_uuid_);
  }
  ::memcpy(&update_now_, &from.update_now_,
    static_cast<size_t>(reinterpret_cast<char*>(&reporting_interval_seconds_) -
    reinterpret_cast<char*>(&update_now_)) + sizeof(reporting_interval_seconds_));
  // @@protoc_insertion_point(copy_constructor:logi.proto.LRCheckForProductUpdateRequest)
}

void LRCheckForProductUpdateRequest::SharedCtor() {
  product_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&update_now_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporting_interval_seconds_) -
      reinterpret_cast<char*>(&update_now_)) + sizeof(reporting_interval_seconds_));
}

LRCheckForProductUpdateRequest::~LRCheckForProductUpdateRequest() {
  // @@protoc_insertion_point(destructor:logi.proto.LRCheckForProductUpdateRequest)
  SharedDtor();
}

void LRCheckForProductUpdateRequest::SharedDtor() {
  product_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LRCheckForProductUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LRCheckForProductUpdateRequest::descriptor() {
  ::protobuf_cloud_5fdevice_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fdevice_5frequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LRCheckForProductUpdateRequest& LRCheckForProductUpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cloud_5fdevice_5frequests_2eproto::scc_info_LRCheckForProductUpdateRequest.base);
  return *internal_default_instance();
}


void LRCheckForProductUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LRCheckForProductUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&update_now_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reporting_interval_seconds_) -
      reinterpret_cast<char*>(&update_now_)) + sizeof(reporting_interval_seconds_));
  _internal_metadata_.Clear();
}

bool LRCheckForProductUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LRCheckForProductUpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool update_now = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_now_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_uuid().data(), static_cast<int>(this->product_uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRCheckForProductUpdateRequest.product_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.Product.Model product_model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_product_model(static_cast< ::logi::proto::Product_Model >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 expiration_millis = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expiration_millis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reporting_interval_seconds = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reporting_interval_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LRCheckForProductUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LRCheckForProductUpdateRequest)
  return false;
#undef DO_
}

void LRCheckForProductUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LRCheckForProductUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool update_now = 1;
  if (this->update_now() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->update_now(), output);
  }

  // string product_uuid = 2;
  if (this->product_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_uuid().data(), static_cast<int>(this->product_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRCheckForProductUpdateRequest.product_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->product_uuid(), output);
  }

  // .logi.proto.Product.Model product_model = 3;
  if (this->product_model() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->product_model(), output);
  }

  // uint64 expiration_millis = 4;
  if (this->expiration_millis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->expiration_millis(), output);
  }

  // uint32 reporting_interval_seconds = 5;
  if (this->reporting_interval_seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->reporting_interval_seconds(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LRCheckForProductUpdateRequest)
}

::google::protobuf::uint8* LRCheckForProductUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LRCheckForProductUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool update_now = 1;
  if (this->update_now() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->update_now(), target);
  }

  // string product_uuid = 2;
  if (this->product_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_uuid().data(), static_cast<int>(this->product_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRCheckForProductUpdateRequest.product_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->product_uuid(), target);
  }

  // .logi.proto.Product.Model product_model = 3;
  if (this->product_model() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->product_model(), target);
  }

  // uint64 expiration_millis = 4;
  if (this->expiration_millis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->expiration_millis(), target);
  }

  // uint32 reporting_interval_seconds = 5;
  if (this->reporting_interval_seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->reporting_interval_seconds(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LRCheckForProductUpdateRequest)
  return target;
}

size_t LRCheckForProductUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LRCheckForProductUpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string product_uuid = 2;
  if (this->product_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_uuid());
  }

  // bool update_now = 1;
  if (this->update_now() != 0) {
    total_size += 1 + 1;
  }

  // .logi.proto.Product.Model product_model = 3;
  if (this->product_model() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->product_model());
  }

  // uint64 expiration_millis = 4;
  if (this->expiration_millis() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->expiration_millis());
  }

  // uint32 reporting_interval_seconds = 5;
  if (this->reporting_interval_seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reporting_interval_seconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LRCheckForProductUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LRCheckForProductUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LRCheckForProductUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LRCheckForProductUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LRCheckForProductUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LRCheckForProductUpdateRequest)
    MergeFrom(*source);
  }
}

void LRCheckForProductUpdateRequest::MergeFrom(const LRCheckForProductUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LRCheckForProductUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_uuid().size() > 0) {

    product_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_uuid_);
  }
  if (from.update_now() != 0) {
    set_update_now(from.update_now());
  }
  if (from.product_model() != 0) {
    set_product_model(from.product_model());
  }
  if (from.expiration_millis() != 0) {
    set_expiration_millis(from.expiration_millis());
  }
  if (from.reporting_interval_seconds() != 0) {
    set_reporting_interval_seconds(from.reporting_interval_seconds());
  }
}

void LRCheckForProductUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LRCheckForProductUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LRCheckForProductUpdateRequest::CopyFrom(const LRCheckForProductUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LRCheckForProductUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LRCheckForProductUpdateRequest::IsInitialized() const {
  return true;
}

void LRCheckForProductUpdateRequest::Swap(LRCheckForProductUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LRCheckForProductUpdateRequest::InternalSwap(LRCheckForProductUpdateRequest* other) {
  using std::swap;
  product_uuid_.Swap(&other->product_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(update_now_, other->update_now_);
  swap(product_model_, other->product_model_);
  swap(expiration_millis_, other->expiration_millis_);
  swap(reporting_interval_seconds_, other->reporting_interval_seconds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LRCheckForProductUpdateRequest::GetMetadata() const {
  protobuf_cloud_5fdevice_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fdevice_5frequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LRCheckForProductUpdateResponse::InitAsDefaultInstance() {
}
void LRCheckForProductUpdateResponse::clear_errors() {
  errors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LRCheckForProductUpdateResponse::kErrorsFieldNumber;
const int LRCheckForProductUpdateResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LRCheckForProductUpdateResponse::LRCheckForProductUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cloud_5fdevice_5frequests_2eproto::scc_info_LRCheckForProductUpdateResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LRCheckForProductUpdateResponse)
}
LRCheckForProductUpdateResponse::LRCheckForProductUpdateResponse(const LRCheckForProductUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:logi.proto.LRCheckForProductUpdateResponse)
}

void LRCheckForProductUpdateResponse::SharedCtor() {
  success_ = false;
}

LRCheckForProductUpdateResponse::~LRCheckForProductUpdateResponse() {
  // @@protoc_insertion_point(destructor:logi.proto.LRCheckForProductUpdateResponse)
  SharedDtor();
}

void LRCheckForProductUpdateResponse::SharedDtor() {
}

void LRCheckForProductUpdateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LRCheckForProductUpdateResponse::descriptor() {
  ::protobuf_cloud_5fdevice_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fdevice_5frequests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LRCheckForProductUpdateResponse& LRCheckForProductUpdateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cloud_5fdevice_5frequests_2eproto::scc_info_LRCheckForProductUpdateResponse.base);
  return *internal_default_instance();
}


void LRCheckForProductUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LRCheckForProductUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  success_ = false;
  _internal_metadata_.Clear();
}

bool LRCheckForProductUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LRCheckForProductUpdateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .logi.proto.Error errors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LRCheckForProductUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LRCheckForProductUpdateResponse)
  return false;
#undef DO_
}

void LRCheckForProductUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LRCheckForProductUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Error errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->errors(static_cast<int>(i)),
      output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LRCheckForProductUpdateResponse)
}

::google::protobuf::uint8* LRCheckForProductUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LRCheckForProductUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .logi.proto.Error errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->errors(static_cast<int>(i)), deterministic, target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LRCheckForProductUpdateResponse)
  return target;
}

size_t LRCheckForProductUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LRCheckForProductUpdateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .logi.proto.Error errors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LRCheckForProductUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LRCheckForProductUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LRCheckForProductUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LRCheckForProductUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LRCheckForProductUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LRCheckForProductUpdateResponse)
    MergeFrom(*source);
  }
}

void LRCheckForProductUpdateResponse::MergeFrom(const LRCheckForProductUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LRCheckForProductUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void LRCheckForProductUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LRCheckForProductUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LRCheckForProductUpdateResponse::CopyFrom(const LRCheckForProductUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LRCheckForProductUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LRCheckForProductUpdateResponse::IsInitialized() const {
  return true;
}

void LRCheckForProductUpdateResponse::Swap(LRCheckForProductUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LRCheckForProductUpdateResponse::InternalSwap(LRCheckForProductUpdateResponse* other) {
  using std::swap;
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LRCheckForProductUpdateResponse::GetMetadata() const {
  protobuf_cloud_5fdevice_5frequests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fdevice_5frequests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace logi
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LRCheckForProductUpdateRequest* Arena::CreateMaybeMessage< ::logi::proto::LRCheckForProductUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LRCheckForProductUpdateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LRCheckForProductUpdateResponse* Arena::CreateMaybeMessage< ::logi::proto::LRCheckForProductUpdateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LRCheckForProductUpdateResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
