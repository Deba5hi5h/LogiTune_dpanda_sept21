// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync_agent_message.proto

#include "sync_agent_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_sync_5fagent_5fmessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sync_5fagent_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LSAEvent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sync_5fagent_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LSARequest;
}  // namespace protobuf_sync_5fagent_5fmessage_2eproto
namespace protobuf_sync_5fagent_5fsoftware_5fupdate_5fevents_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sync_5fagent_5fsoftware_5fupdate_5fevents_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LSASoftwareUpdateReportEvent;
}  // namespace protobuf_sync_5fagent_5fsoftware_5fupdate_5fevents_2eproto
namespace protobuf_sync_5fagent_5fsoftware_5fupdate_5frequests_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sync_5fagent_5fsoftware_5fupdate_5frequests_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LSAGetSoftwareUpdateReportRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sync_5fagent_5fsoftware_5fupdate_5frequests_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_LSAGetSoftwareUpdateReportResponse;
}  // namespace protobuf_sync_5fagent_5fsoftware_5fupdate_5frequests_2eproto
namespace protobuf_transport_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Header;
}  // namespace protobuf_transport_2eproto
namespace logi {
namespace proto {
class LogiSyncAgentMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogiSyncAgentMessage>
      _instance;
  const ::logi::proto::LSARequest* request_;
  const ::logi::proto::LSAEvent* event_;
} _LogiSyncAgentMessage_default_instance_;
class LSARequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LSARequest>
      _instance;
  const ::logi::proto::LSAGetSoftwareUpdateReportRequest* get_software_update_report_request_;
} _LSARequest_default_instance_;
class LSAResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LSAResponse>
      _instance;
  const ::logi::proto::LSAGetSoftwareUpdateReportResponse* get_software_update_report_response_;
} _LSAResponse_default_instance_;
class LSAEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LSAEvent>
      _instance;
  const ::logi::proto::LSASoftwareUpdateReportEvent* software_update_report_event_;
} _LSAEvent_default_instance_;
}  // namespace proto
}  // namespace logi
namespace protobuf_sync_5fagent_5fmessage_2eproto {
static void InitDefaultsLogiSyncAgentMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LogiSyncAgentMessage_default_instance_;
    new (ptr) ::logi::proto::LogiSyncAgentMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LogiSyncAgentMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_LogiSyncAgentMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsLogiSyncAgentMessage}, {
      &protobuf_transport_2eproto::scc_info_Header.base,
      &protobuf_sync_5fagent_5fmessage_2eproto::scc_info_LSARequest.base,
      &protobuf_sync_5fagent_5fmessage_2eproto::scc_info_LSAEvent.base,}};

static void InitDefaultsLSARequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LSARequest_default_instance_;
    new (ptr) ::logi::proto::LSARequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LSARequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LSARequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLSARequest}, {
      &protobuf_sync_5fagent_5fsoftware_5fupdate_5frequests_2eproto::scc_info_LSAGetSoftwareUpdateReportRequest.base,}};

static void InitDefaultsLSAResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LSAResponse_default_instance_;
    new (ptr) ::logi::proto::LSAResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LSAResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LSAResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLSAResponse}, {
      &protobuf_sync_5fagent_5fsoftware_5fupdate_5frequests_2eproto::scc_info_LSAGetSoftwareUpdateReportResponse.base,}};

static void InitDefaultsLSAEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LSAEvent_default_instance_;
    new (ptr) ::logi::proto::LSAEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LSAEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LSAEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLSAEvent}, {
      &protobuf_sync_5fagent_5fsoftware_5fupdate_5fevents_2eproto::scc_info_LSASoftwareUpdateReportEvent.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LogiSyncAgentMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LSARequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LSAResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LSAEvent.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LogiSyncAgentMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LogiSyncAgentMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LogiSyncAgentMessage, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LogiSyncAgentMessage, internal_api_id_),
  offsetof(::logi::proto::LogiSyncAgentMessageDefaultTypeInternal, request_),
  offsetof(::logi::proto::LogiSyncAgentMessageDefaultTypeInternal, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LogiSyncAgentMessage, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSARequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSARequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::logi::proto::LSARequestDefaultTypeInternal, get_software_update_report_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSARequest, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSAResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSAResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::logi::proto::LSAResponseDefaultTypeInternal, get_software_update_report_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSAResponse, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSAEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSAEvent, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::logi::proto::LSAEventDefaultTypeInternal, software_update_report_event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSAEvent, payload_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::logi::proto::LogiSyncAgentMessage)},
  { 10, -1, sizeof(::logi::proto::LSARequest)},
  { 17, -1, sizeof(::logi::proto::LSAResponse)},
  { 24, -1, sizeof(::logi::proto::LSAEvent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LogiSyncAgentMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LSARequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LSAResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LSAEvent_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "sync_agent_message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030sync_agent_message.proto\022\nlogi.proto\032\017"
      "transport.proto\032)sync_agent_software_upd"
      "ate_requests.proto\032\'sync_agent_software_"
      "update_events.proto\"\260\001\n\024LogiSyncAgentMes"
      "sage\022\"\n\006header\030\001 \001(\0132\022.logi.proto.Header"
      "\022\027\n\017internal_api_id\030\002 \001(\005\022)\n\007request\030\003 \001"
      "(\0132\026.logi.proto.LSARequestH\000\022%\n\005event\030\004 "
      "\001(\0132\024.logi.proto.LSAEventH\000B\t\n\007payload\"t"
      "\n\nLSARequest\022[\n\"get_software_update_repo"
      "rt_request\030\001 \001(\0132-.logi.proto.LSAGetSoft"
      "wareUpdateReportRequestH\000B\t\n\007payload\"w\n\013"
      "LSAResponse\022]\n#get_software_update_repor"
      "t_response\030\001 \001(\0132..logi.proto.LSAGetSoft"
      "wareUpdateReportResponseH\000B\t\n\007payload\"g\n"
      "\010LSAEvent\022P\n\034software_update_report_even"
      "t\030\001 \001(\0132(.logi.proto.LSASoftwareUpdateRe"
      "portEventH\000B\t\n\007payloadB*\n(com.logitech.v"
      "c.syncagent.proto.messagesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 714);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sync_agent_message.proto", &protobuf_RegisterTypes);
  ::protobuf_transport_2eproto::AddDescriptors();
  ::protobuf_sync_5fagent_5fsoftware_5fupdate_5frequests_2eproto::AddDescriptors();
  ::protobuf_sync_5fagent_5fsoftware_5fupdate_5fevents_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sync_5fagent_5fmessage_2eproto
namespace logi {
namespace proto {

// ===================================================================

void LogiSyncAgentMessage::InitAsDefaultInstance() {
  ::logi::proto::_LogiSyncAgentMessage_default_instance_._instance.get_mutable()->header_ = const_cast< ::logi::proto::Header*>(
      ::logi::proto::Header::internal_default_instance());
  ::logi::proto::_LogiSyncAgentMessage_default_instance_.request_ = const_cast< ::logi::proto::LSARequest*>(
      ::logi::proto::LSARequest::internal_default_instance());
  ::logi::proto::_LogiSyncAgentMessage_default_instance_.event_ = const_cast< ::logi::proto::LSAEvent*>(
      ::logi::proto::LSAEvent::internal_default_instance());
}
void LogiSyncAgentMessage::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void LogiSyncAgentMessage::set_allocated_request(::logi::proto::LSARequest* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    set_has_request();
    payload_.request_ = request;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.LogiSyncAgentMessage.request)
}
void LogiSyncAgentMessage::set_allocated_event(::logi::proto::LSAEvent* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    set_has_event();
    payload_.event_ = event;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.LogiSyncAgentMessage.event)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogiSyncAgentMessage::kHeaderFieldNumber;
const int LogiSyncAgentMessage::kInternalApiIdFieldNumber;
const int LogiSyncAgentMessage::kRequestFieldNumber;
const int LogiSyncAgentMessage::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogiSyncAgentMessage::LogiSyncAgentMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sync_5fagent_5fmessage_2eproto::scc_info_LogiSyncAgentMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LogiSyncAgentMessage)
}
LogiSyncAgentMessage::LogiSyncAgentMessage(const LogiSyncAgentMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::logi::proto::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  internal_api_id_ = from.internal_api_id_;
  clear_has_payload();
  switch (from.payload_case()) {
    case kRequest: {
      mutable_request()->::logi::proto::LSARequest::MergeFrom(from.request());
      break;
    }
    case kEvent: {
      mutable_event()->::logi::proto::LSAEvent::MergeFrom(from.event());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:logi.proto.LogiSyncAgentMessage)
}

void LogiSyncAgentMessage::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&internal_api_id_) -
      reinterpret_cast<char*>(&header_)) + sizeof(internal_api_id_));
  clear_has_payload();
}

LogiSyncAgentMessage::~LogiSyncAgentMessage() {
  // @@protoc_insertion_point(destructor:logi.proto.LogiSyncAgentMessage)
  SharedDtor();
}

void LogiSyncAgentMessage::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (has_payload()) {
    clear_payload();
  }
}

void LogiSyncAgentMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogiSyncAgentMessage::descriptor() {
  ::protobuf_sync_5fagent_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sync_5fagent_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogiSyncAgentMessage& LogiSyncAgentMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sync_5fagent_5fmessage_2eproto::scc_info_LogiSyncAgentMessage.base);
  return *internal_default_instance();
}


void LogiSyncAgentMessage::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:logi.proto.LogiSyncAgentMessage)
  switch (payload_case()) {
    case kRequest: {
      delete payload_.request_;
      break;
    }
    case kEvent: {
      delete payload_.event_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void LogiSyncAgentMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LogiSyncAgentMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  internal_api_id_ = 0;
  clear_payload();
  _internal_metadata_.Clear();
}

bool LogiSyncAgentMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LogiSyncAgentMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .logi.proto.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 internal_api_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &internal_api_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.LSARequest request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.LSAEvent event = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LogiSyncAgentMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LogiSyncAgentMessage)
  return false;
#undef DO_
}

void LogiSyncAgentMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LogiSyncAgentMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // int32 internal_api_id = 2;
  if (this->internal_api_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->internal_api_id(), output);
  }

  // .logi.proto.LSARequest request = 3;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_request(), output);
  }

  // .logi.proto.LSAEvent event = 4;
  if (has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_event(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LogiSyncAgentMessage)
}

::google::protobuf::uint8* LogiSyncAgentMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LogiSyncAgentMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // int32 internal_api_id = 2;
  if (this->internal_api_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->internal_api_id(), target);
  }

  // .logi.proto.LSARequest request = 3;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_request(), deterministic, target);
  }

  // .logi.proto.LSAEvent event = 4;
  if (has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_event(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LogiSyncAgentMessage)
  return target;
}

size_t LogiSyncAgentMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LogiSyncAgentMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .logi.proto.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // int32 internal_api_id = 2;
  if (this->internal_api_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->internal_api_id());
  }

  switch (payload_case()) {
    // .logi.proto.LSARequest request = 3;
    case kRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.request_);
      break;
    }
    // .logi.proto.LSAEvent event = 4;
    case kEvent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.event_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogiSyncAgentMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LogiSyncAgentMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const LogiSyncAgentMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogiSyncAgentMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LogiSyncAgentMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LogiSyncAgentMessage)
    MergeFrom(*source);
  }
}

void LogiSyncAgentMessage::MergeFrom(const LogiSyncAgentMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LogiSyncAgentMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::logi::proto::Header::MergeFrom(from.header());
  }
  if (from.internal_api_id() != 0) {
    set_internal_api_id(from.internal_api_id());
  }
  switch (from.payload_case()) {
    case kRequest: {
      mutable_request()->::logi::proto::LSARequest::MergeFrom(from.request());
      break;
    }
    case kEvent: {
      mutable_event()->::logi::proto::LSAEvent::MergeFrom(from.event());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void LogiSyncAgentMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LogiSyncAgentMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogiSyncAgentMessage::CopyFrom(const LogiSyncAgentMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LogiSyncAgentMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogiSyncAgentMessage::IsInitialized() const {
  return true;
}

void LogiSyncAgentMessage::Swap(LogiSyncAgentMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogiSyncAgentMessage::InternalSwap(LogiSyncAgentMessage* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(internal_api_id_, other->internal_api_id_);
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogiSyncAgentMessage::GetMetadata() const {
  protobuf_sync_5fagent_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sync_5fagent_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LSARequest::InitAsDefaultInstance() {
  ::logi::proto::_LSARequest_default_instance_.get_software_update_report_request_ = const_cast< ::logi::proto::LSAGetSoftwareUpdateReportRequest*>(
      ::logi::proto::LSAGetSoftwareUpdateReportRequest::internal_default_instance());
}
void LSARequest::set_allocated_get_software_update_report_request(::logi::proto::LSAGetSoftwareUpdateReportRequest* get_software_update_report_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (get_software_update_report_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      get_software_update_report_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_software_update_report_request, submessage_arena);
    }
    set_has_get_software_update_report_request();
    payload_.get_software_update_report_request_ = get_software_update_report_request;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.LSARequest.get_software_update_report_request)
}
void LSARequest::clear_get_software_update_report_request() {
  if (has_get_software_update_report_request()) {
    delete payload_.get_software_update_report_request_;
    clear_has_payload();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LSARequest::kGetSoftwareUpdateReportRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LSARequest::LSARequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sync_5fagent_5fmessage_2eproto::scc_info_LSARequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LSARequest)
}
LSARequest::LSARequest(const LSARequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kGetSoftwareUpdateReportRequest: {
      mutable_get_software_update_report_request()->::logi::proto::LSAGetSoftwareUpdateReportRequest::MergeFrom(from.get_software_update_report_request());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:logi.proto.LSARequest)
}

void LSARequest::SharedCtor() {
  clear_has_payload();
}

LSARequest::~LSARequest() {
  // @@protoc_insertion_point(destructor:logi.proto.LSARequest)
  SharedDtor();
}

void LSARequest::SharedDtor() {
  if (has_payload()) {
    clear_payload();
  }
}

void LSARequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LSARequest::descriptor() {
  ::protobuf_sync_5fagent_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sync_5fagent_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LSARequest& LSARequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sync_5fagent_5fmessage_2eproto::scc_info_LSARequest.base);
  return *internal_default_instance();
}


void LSARequest::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:logi.proto.LSARequest)
  switch (payload_case()) {
    case kGetSoftwareUpdateReportRequest: {
      delete payload_.get_software_update_report_request_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void LSARequest::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LSARequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear();
}

bool LSARequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LSARequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .logi.proto.LSAGetSoftwareUpdateReportRequest get_software_update_report_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_software_update_report_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LSARequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LSARequest)
  return false;
#undef DO_
}

void LSARequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LSARequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.LSAGetSoftwareUpdateReportRequest get_software_update_report_request = 1;
  if (has_get_software_update_report_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_get_software_update_report_request(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LSARequest)
}

::google::protobuf::uint8* LSARequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LSARequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.LSAGetSoftwareUpdateReportRequest get_software_update_report_request = 1;
  if (has_get_software_update_report_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_get_software_update_report_request(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LSARequest)
  return target;
}

size_t LSARequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LSARequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (payload_case()) {
    // .logi.proto.LSAGetSoftwareUpdateReportRequest get_software_update_report_request = 1;
    case kGetSoftwareUpdateReportRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.get_software_update_report_request_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LSARequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LSARequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LSARequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LSARequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LSARequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LSARequest)
    MergeFrom(*source);
  }
}

void LSARequest::MergeFrom(const LSARequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LSARequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kGetSoftwareUpdateReportRequest: {
      mutable_get_software_update_report_request()->::logi::proto::LSAGetSoftwareUpdateReportRequest::MergeFrom(from.get_software_update_report_request());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void LSARequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LSARequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSARequest::CopyFrom(const LSARequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LSARequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSARequest::IsInitialized() const {
  return true;
}

void LSARequest::Swap(LSARequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LSARequest::InternalSwap(LSARequest* other) {
  using std::swap;
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LSARequest::GetMetadata() const {
  protobuf_sync_5fagent_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sync_5fagent_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LSAResponse::InitAsDefaultInstance() {
  ::logi::proto::_LSAResponse_default_instance_.get_software_update_report_response_ = const_cast< ::logi::proto::LSAGetSoftwareUpdateReportResponse*>(
      ::logi::proto::LSAGetSoftwareUpdateReportResponse::internal_default_instance());
}
void LSAResponse::set_allocated_get_software_update_report_response(::logi::proto::LSAGetSoftwareUpdateReportResponse* get_software_update_report_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (get_software_update_report_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      get_software_update_report_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_software_update_report_response, submessage_arena);
    }
    set_has_get_software_update_report_response();
    payload_.get_software_update_report_response_ = get_software_update_report_response;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.LSAResponse.get_software_update_report_response)
}
void LSAResponse::clear_get_software_update_report_response() {
  if (has_get_software_update_report_response()) {
    delete payload_.get_software_update_report_response_;
    clear_has_payload();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LSAResponse::kGetSoftwareUpdateReportResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LSAResponse::LSAResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sync_5fagent_5fmessage_2eproto::scc_info_LSAResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LSAResponse)
}
LSAResponse::LSAResponse(const LSAResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kGetSoftwareUpdateReportResponse: {
      mutable_get_software_update_report_response()->::logi::proto::LSAGetSoftwareUpdateReportResponse::MergeFrom(from.get_software_update_report_response());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:logi.proto.LSAResponse)
}

void LSAResponse::SharedCtor() {
  clear_has_payload();
}

LSAResponse::~LSAResponse() {
  // @@protoc_insertion_point(destructor:logi.proto.LSAResponse)
  SharedDtor();
}

void LSAResponse::SharedDtor() {
  if (has_payload()) {
    clear_payload();
  }
}

void LSAResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LSAResponse::descriptor() {
  ::protobuf_sync_5fagent_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sync_5fagent_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LSAResponse& LSAResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sync_5fagent_5fmessage_2eproto::scc_info_LSAResponse.base);
  return *internal_default_instance();
}


void LSAResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:logi.proto.LSAResponse)
  switch (payload_case()) {
    case kGetSoftwareUpdateReportResponse: {
      delete payload_.get_software_update_report_response_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void LSAResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LSAResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear();
}

bool LSAResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LSAResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .logi.proto.LSAGetSoftwareUpdateReportResponse get_software_update_report_response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_software_update_report_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LSAResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LSAResponse)
  return false;
#undef DO_
}

void LSAResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LSAResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.LSAGetSoftwareUpdateReportResponse get_software_update_report_response = 1;
  if (has_get_software_update_report_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_get_software_update_report_response(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LSAResponse)
}

::google::protobuf::uint8* LSAResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LSAResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.LSAGetSoftwareUpdateReportResponse get_software_update_report_response = 1;
  if (has_get_software_update_report_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_get_software_update_report_response(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LSAResponse)
  return target;
}

size_t LSAResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LSAResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (payload_case()) {
    // .logi.proto.LSAGetSoftwareUpdateReportResponse get_software_update_report_response = 1;
    case kGetSoftwareUpdateReportResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.get_software_update_report_response_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LSAResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LSAResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LSAResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LSAResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LSAResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LSAResponse)
    MergeFrom(*source);
  }
}

void LSAResponse::MergeFrom(const LSAResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LSAResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kGetSoftwareUpdateReportResponse: {
      mutable_get_software_update_report_response()->::logi::proto::LSAGetSoftwareUpdateReportResponse::MergeFrom(from.get_software_update_report_response());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void LSAResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LSAResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSAResponse::CopyFrom(const LSAResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LSAResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSAResponse::IsInitialized() const {
  return true;
}

void LSAResponse::Swap(LSAResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LSAResponse::InternalSwap(LSAResponse* other) {
  using std::swap;
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LSAResponse::GetMetadata() const {
  protobuf_sync_5fagent_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sync_5fagent_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LSAEvent::InitAsDefaultInstance() {
  ::logi::proto::_LSAEvent_default_instance_.software_update_report_event_ = const_cast< ::logi::proto::LSASoftwareUpdateReportEvent*>(
      ::logi::proto::LSASoftwareUpdateReportEvent::internal_default_instance());
}
void LSAEvent::set_allocated_software_update_report_event(::logi::proto::LSASoftwareUpdateReportEvent* software_update_report_event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (software_update_report_event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      software_update_report_event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, software_update_report_event, submessage_arena);
    }
    set_has_software_update_report_event();
    payload_.software_update_report_event_ = software_update_report_event;
  }
  // @@protoc_insertion_point(field_set_allocated:logi.proto.LSAEvent.software_update_report_event)
}
void LSAEvent::clear_software_update_report_event() {
  if (has_software_update_report_event()) {
    delete payload_.software_update_report_event_;
    clear_has_payload();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LSAEvent::kSoftwareUpdateReportEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LSAEvent::LSAEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sync_5fagent_5fmessage_2eproto::scc_info_LSAEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LSAEvent)
}
LSAEvent::LSAEvent(const LSAEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kSoftwareUpdateReportEvent: {
      mutable_software_update_report_event()->::logi::proto::LSASoftwareUpdateReportEvent::MergeFrom(from.software_update_report_event());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:logi.proto.LSAEvent)
}

void LSAEvent::SharedCtor() {
  clear_has_payload();
}

LSAEvent::~LSAEvent() {
  // @@protoc_insertion_point(destructor:logi.proto.LSAEvent)
  SharedDtor();
}

void LSAEvent::SharedDtor() {
  if (has_payload()) {
    clear_payload();
  }
}

void LSAEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LSAEvent::descriptor() {
  ::protobuf_sync_5fagent_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sync_5fagent_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LSAEvent& LSAEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sync_5fagent_5fmessage_2eproto::scc_info_LSAEvent.base);
  return *internal_default_instance();
}


void LSAEvent::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:logi.proto.LSAEvent)
  switch (payload_case()) {
    case kSoftwareUpdateReportEvent: {
      delete payload_.software_update_report_event_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void LSAEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LSAEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear();
}

bool LSAEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LSAEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .logi.proto.LSASoftwareUpdateReportEvent software_update_report_event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_software_update_report_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LSAEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LSAEvent)
  return false;
#undef DO_
}

void LSAEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LSAEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.LSASoftwareUpdateReportEvent software_update_report_event = 1;
  if (has_software_update_report_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_software_update_report_event(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LSAEvent)
}

::google::protobuf::uint8* LSAEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LSAEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.LSASoftwareUpdateReportEvent software_update_report_event = 1;
  if (has_software_update_report_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_software_update_report_event(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LSAEvent)
  return target;
}

size_t LSAEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LSAEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (payload_case()) {
    // .logi.proto.LSASoftwareUpdateReportEvent software_update_report_event = 1;
    case kSoftwareUpdateReportEvent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.software_update_report_event_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LSAEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LSAEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const LSAEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LSAEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LSAEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LSAEvent)
    MergeFrom(*source);
  }
}

void LSAEvent::MergeFrom(const LSAEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LSAEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kSoftwareUpdateReportEvent: {
      mutable_software_update_report_event()->::logi::proto::LSASoftwareUpdateReportEvent::MergeFrom(from.software_update_report_event());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void LSAEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LSAEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSAEvent::CopyFrom(const LSAEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LSAEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSAEvent::IsInitialized() const {
  return true;
}

void LSAEvent::Swap(LSAEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LSAEvent::InternalSwap(LSAEvent* other) {
  using std::swap;
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LSAEvent::GetMetadata() const {
  protobuf_sync_5fagent_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sync_5fagent_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace logi
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LogiSyncAgentMessage* Arena::CreateMaybeMessage< ::logi::proto::LogiSyncAgentMessage >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LogiSyncAgentMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LSARequest* Arena::CreateMaybeMessage< ::logi::proto::LSARequest >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LSARequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LSAResponse* Arena::CreateMaybeMessage< ::logi::proto::LSAResponse >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LSAResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LSAEvent* Arena::CreateMaybeMessage< ::logi::proto::LSAEvent >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LSAEvent >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
