// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync_agent_software_update_structures.proto

#include "sync_agent_software_update_structures.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Error;
}  // namespace protobuf_common_2eproto
namespace protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LSALastSoftwareUpdateStatus;
}  // namespace protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto
namespace logi {
namespace proto {
class LSASoftwareUpdateReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LSASoftwareUpdateReport>
      _instance;
} _LSASoftwareUpdateReport_default_instance_;
class LSALastSoftwareUpdateStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LSALastSoftwareUpdateStatus>
      _instance;
} _LSALastSoftwareUpdateStatus_default_instance_;
}  // namespace proto
}  // namespace logi
namespace protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto {
static void InitDefaultsLSASoftwareUpdateReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LSASoftwareUpdateReport_default_instance_;
    new (ptr) ::logi::proto::LSASoftwareUpdateReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LSASoftwareUpdateReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LSASoftwareUpdateReport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLSASoftwareUpdateReport}, {
      &protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto::scc_info_LSALastSoftwareUpdateStatus.base,}};

static void InitDefaultsLSALastSoftwareUpdateStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LSALastSoftwareUpdateStatus_default_instance_;
    new (ptr) ::logi::proto::LSALastSoftwareUpdateStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LSALastSoftwareUpdateStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LSALastSoftwareUpdateStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLSALastSoftwareUpdateStatus}, {
      &protobuf_common_2eproto::scc_info_Error.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LSASoftwareUpdateReport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LSALastSoftwareUpdateStatus.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSASoftwareUpdateReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSASoftwareUpdateReport, update_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSASoftwareUpdateReport, current_software_package_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSASoftwareUpdateReport, target_software_package_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSASoftwareUpdateReport, last_update_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSALastSoftwareUpdateStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSALastSoftwareUpdateStatus, update_failed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LSALastSoftwareUpdateStatus, update_errors_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::logi::proto::LSASoftwareUpdateReport)},
  { 9, -1, sizeof(::logi::proto::LSALastSoftwareUpdateStatus)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LSASoftwareUpdateReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LSALastSoftwareUpdateStatus_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "sync_agent_software_update_structures.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n+sync_agent_software_update_structures."
      "proto\022\nlogi.proto\032\014common.proto\"\344\001\n\027LSAS"
      "oftwareUpdateReport\0221\n\014update_state\030\001 \001("
      "\0162\033.logi.proto.SyncUpdateState\022(\n curren"
      "t_software_package_version\030\002 \001(\t\022\'\n\037targ"
      "et_software_package_version\030\003 \001(\t\022C\n\022las"
      "t_update_status\030\004 \001(\0132\'.logi.proto.LSALa"
      "stSoftwareUpdateStatus\"^\n\033LSALastSoftwar"
      "eUpdateStatus\022\025\n\rupdate_failed\030\001 \001(\010\022(\n\r"
      "update_errors\030\002 \003(\0132\021.logi.proto.ErrorB*"
      "\n(com.logitech.vc.syncagent.proto.messag"
      "esb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 450);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sync_agent_software_update_structures.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto
namespace logi {
namespace proto {

// ===================================================================

void LSASoftwareUpdateReport::InitAsDefaultInstance() {
  ::logi::proto::_LSASoftwareUpdateReport_default_instance_._instance.get_mutable()->last_update_status_ = const_cast< ::logi::proto::LSALastSoftwareUpdateStatus*>(
      ::logi::proto::LSALastSoftwareUpdateStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LSASoftwareUpdateReport::kUpdateStateFieldNumber;
const int LSASoftwareUpdateReport::kCurrentSoftwarePackageVersionFieldNumber;
const int LSASoftwareUpdateReport::kTargetSoftwarePackageVersionFieldNumber;
const int LSASoftwareUpdateReport::kLastUpdateStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LSASoftwareUpdateReport::LSASoftwareUpdateReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto::scc_info_LSASoftwareUpdateReport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LSASoftwareUpdateReport)
}
LSASoftwareUpdateReport::LSASoftwareUpdateReport(const LSASoftwareUpdateReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  current_software_package_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.current_software_package_version().size() > 0) {
    current_software_package_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_software_package_version_);
  }
  target_software_package_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_software_package_version().size() > 0) {
    target_software_package_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_software_package_version_);
  }
  if (from.has_last_update_status()) {
    last_update_status_ = new ::logi::proto::LSALastSoftwareUpdateStatus(*from.last_update_status_);
  } else {
    last_update_status_ = NULL;
  }
  update_state_ = from.update_state_;
  // @@protoc_insertion_point(copy_constructor:logi.proto.LSASoftwareUpdateReport)
}

void LSASoftwareUpdateReport::SharedCtor() {
  current_software_package_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_software_package_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&last_update_status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_state_) -
      reinterpret_cast<char*>(&last_update_status_)) + sizeof(update_state_));
}

LSASoftwareUpdateReport::~LSASoftwareUpdateReport() {
  // @@protoc_insertion_point(destructor:logi.proto.LSASoftwareUpdateReport)
  SharedDtor();
}

void LSASoftwareUpdateReport::SharedDtor() {
  current_software_package_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_software_package_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete last_update_status_;
}

void LSASoftwareUpdateReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LSASoftwareUpdateReport::descriptor() {
  ::protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LSASoftwareUpdateReport& LSASoftwareUpdateReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto::scc_info_LSASoftwareUpdateReport.base);
  return *internal_default_instance();
}


void LSASoftwareUpdateReport::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LSASoftwareUpdateReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  current_software_package_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_software_package_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && last_update_status_ != NULL) {
    delete last_update_status_;
  }
  last_update_status_ = NULL;
  update_state_ = 0;
  _internal_metadata_.Clear();
}

bool LSASoftwareUpdateReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LSASoftwareUpdateReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .logi.proto.SyncUpdateState update_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_update_state(static_cast< ::logi::proto::SyncUpdateState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string current_software_package_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_software_package_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->current_software_package_version().data(), static_cast<int>(this->current_software_package_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LSASoftwareUpdateReport.current_software_package_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_software_package_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_software_package_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_software_package_version().data(), static_cast<int>(this->target_software_package_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LSASoftwareUpdateReport.target_software_package_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .logi.proto.LSALastSoftwareUpdateStatus last_update_status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_update_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LSASoftwareUpdateReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LSASoftwareUpdateReport)
  return false;
#undef DO_
}

void LSASoftwareUpdateReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LSASoftwareUpdateReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.SyncUpdateState update_state = 1;
  if (this->update_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->update_state(), output);
  }

  // string current_software_package_version = 2;
  if (this->current_software_package_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_software_package_version().data(), static_cast<int>(this->current_software_package_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LSASoftwareUpdateReport.current_software_package_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->current_software_package_version(), output);
  }

  // string target_software_package_version = 3;
  if (this->target_software_package_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_software_package_version().data(), static_cast<int>(this->target_software_package_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LSASoftwareUpdateReport.target_software_package_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->target_software_package_version(), output);
  }

  // .logi.proto.LSALastSoftwareUpdateStatus last_update_status = 4;
  if (this->has_last_update_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_last_update_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LSASoftwareUpdateReport)
}

::google::protobuf::uint8* LSASoftwareUpdateReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LSASoftwareUpdateReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .logi.proto.SyncUpdateState update_state = 1;
  if (this->update_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->update_state(), target);
  }

  // string current_software_package_version = 2;
  if (this->current_software_package_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_software_package_version().data(), static_cast<int>(this->current_software_package_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LSASoftwareUpdateReport.current_software_package_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->current_software_package_version(), target);
  }

  // string target_software_package_version = 3;
  if (this->target_software_package_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_software_package_version().data(), static_cast<int>(this->target_software_package_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LSASoftwareUpdateReport.target_software_package_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->target_software_package_version(), target);
  }

  // .logi.proto.LSALastSoftwareUpdateStatus last_update_status = 4;
  if (this->has_last_update_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_last_update_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LSASoftwareUpdateReport)
  return target;
}

size_t LSASoftwareUpdateReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LSASoftwareUpdateReport)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string current_software_package_version = 2;
  if (this->current_software_package_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->current_software_package_version());
  }

  // string target_software_package_version = 3;
  if (this->target_software_package_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_software_package_version());
  }

  // .logi.proto.LSALastSoftwareUpdateStatus last_update_status = 4;
  if (this->has_last_update_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_update_status_);
  }

  // .logi.proto.SyncUpdateState update_state = 1;
  if (this->update_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->update_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LSASoftwareUpdateReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LSASoftwareUpdateReport)
  GOOGLE_DCHECK_NE(&from, this);
  const LSASoftwareUpdateReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LSASoftwareUpdateReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LSASoftwareUpdateReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LSASoftwareUpdateReport)
    MergeFrom(*source);
  }
}

void LSASoftwareUpdateReport::MergeFrom(const LSASoftwareUpdateReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LSASoftwareUpdateReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current_software_package_version().size() > 0) {

    current_software_package_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_software_package_version_);
  }
  if (from.target_software_package_version().size() > 0) {

    target_software_package_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_software_package_version_);
  }
  if (from.has_last_update_status()) {
    mutable_last_update_status()->::logi::proto::LSALastSoftwareUpdateStatus::MergeFrom(from.last_update_status());
  }
  if (from.update_state() != 0) {
    set_update_state(from.update_state());
  }
}

void LSASoftwareUpdateReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LSASoftwareUpdateReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSASoftwareUpdateReport::CopyFrom(const LSASoftwareUpdateReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LSASoftwareUpdateReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSASoftwareUpdateReport::IsInitialized() const {
  return true;
}

void LSASoftwareUpdateReport::Swap(LSASoftwareUpdateReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LSASoftwareUpdateReport::InternalSwap(LSASoftwareUpdateReport* other) {
  using std::swap;
  current_software_package_version_.Swap(&other->current_software_package_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  target_software_package_version_.Swap(&other->target_software_package_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(last_update_status_, other->last_update_status_);
  swap(update_state_, other->update_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LSASoftwareUpdateReport::GetMetadata() const {
  protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LSALastSoftwareUpdateStatus::InitAsDefaultInstance() {
}
void LSALastSoftwareUpdateStatus::clear_update_errors() {
  update_errors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LSALastSoftwareUpdateStatus::kUpdateFailedFieldNumber;
const int LSALastSoftwareUpdateStatus::kUpdateErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LSALastSoftwareUpdateStatus::LSALastSoftwareUpdateStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto::scc_info_LSALastSoftwareUpdateStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LSALastSoftwareUpdateStatus)
}
LSALastSoftwareUpdateStatus::LSALastSoftwareUpdateStatus(const LSALastSoftwareUpdateStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      update_errors_(from.update_errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  update_failed_ = from.update_failed_;
  // @@protoc_insertion_point(copy_constructor:logi.proto.LSALastSoftwareUpdateStatus)
}

void LSALastSoftwareUpdateStatus::SharedCtor() {
  update_failed_ = false;
}

LSALastSoftwareUpdateStatus::~LSALastSoftwareUpdateStatus() {
  // @@protoc_insertion_point(destructor:logi.proto.LSALastSoftwareUpdateStatus)
  SharedDtor();
}

void LSALastSoftwareUpdateStatus::SharedDtor() {
}

void LSALastSoftwareUpdateStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LSALastSoftwareUpdateStatus::descriptor() {
  ::protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LSALastSoftwareUpdateStatus& LSALastSoftwareUpdateStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto::scc_info_LSALastSoftwareUpdateStatus.base);
  return *internal_default_instance();
}


void LSALastSoftwareUpdateStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LSALastSoftwareUpdateStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  update_errors_.Clear();
  update_failed_ = false;
  _internal_metadata_.Clear();
}

bool LSALastSoftwareUpdateStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LSALastSoftwareUpdateStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool update_failed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_failed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .logi.proto.Error update_errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_update_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LSALastSoftwareUpdateStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LSALastSoftwareUpdateStatus)
  return false;
#undef DO_
}

void LSALastSoftwareUpdateStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LSALastSoftwareUpdateStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool update_failed = 1;
  if (this->update_failed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->update_failed(), output);
  }

  // repeated .logi.proto.Error update_errors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->update_errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->update_errors(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LSALastSoftwareUpdateStatus)
}

::google::protobuf::uint8* LSALastSoftwareUpdateStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LSALastSoftwareUpdateStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool update_failed = 1;
  if (this->update_failed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->update_failed(), target);
  }

  // repeated .logi.proto.Error update_errors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->update_errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->update_errors(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LSALastSoftwareUpdateStatus)
  return target;
}

size_t LSALastSoftwareUpdateStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LSALastSoftwareUpdateStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .logi.proto.Error update_errors = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->update_errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->update_errors(static_cast<int>(i)));
    }
  }

  // bool update_failed = 1;
  if (this->update_failed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LSALastSoftwareUpdateStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LSALastSoftwareUpdateStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const LSALastSoftwareUpdateStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LSALastSoftwareUpdateStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LSALastSoftwareUpdateStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LSALastSoftwareUpdateStatus)
    MergeFrom(*source);
  }
}

void LSALastSoftwareUpdateStatus::MergeFrom(const LSALastSoftwareUpdateStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LSALastSoftwareUpdateStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  update_errors_.MergeFrom(from.update_errors_);
  if (from.update_failed() != 0) {
    set_update_failed(from.update_failed());
  }
}

void LSALastSoftwareUpdateStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LSALastSoftwareUpdateStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSALastSoftwareUpdateStatus::CopyFrom(const LSALastSoftwareUpdateStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LSALastSoftwareUpdateStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSALastSoftwareUpdateStatus::IsInitialized() const {
  return true;
}

void LSALastSoftwareUpdateStatus::Swap(LSALastSoftwareUpdateStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LSALastSoftwareUpdateStatus::InternalSwap(LSALastSoftwareUpdateStatus* other) {
  using std::swap;
  CastToBase(&update_errors_)->InternalSwap(CastToBase(&other->update_errors_));
  swap(update_failed_, other->update_failed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LSALastSoftwareUpdateStatus::GetMetadata() const {
  protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sync_5fagent_5fsoftware_5fupdate_5fstructures_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace logi
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LSASoftwareUpdateReport* Arena::CreateMaybeMessage< ::logi::proto::LSASoftwareUpdateReport >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LSASoftwareUpdateReport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LSALastSoftwareUpdateStatus* Arena::CreateMaybeMessage< ::logi::proto::LSALastSoftwareUpdateStatus >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LSALastSoftwareUpdateStatus >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
