// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloud_provisioning_structures.proto

#include "cloud_provisioning_structures.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace logi {
namespace proto {
class LRProvisioningDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LRProvisioningData>
      _instance;
} _LRProvisioningData_default_instance_;
}  // namespace proto
}  // namespace logi
namespace protobuf_cloud_5fprovisioning_5fstructures_2eproto {
static void InitDefaultsLRProvisioningData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LRProvisioningData_default_instance_;
    new (ptr) ::logi::proto::LRProvisioningData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LRProvisioningData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LRProvisioningData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLRProvisioningData}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LRProvisioningData.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, root_cert_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, client_cert_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, private_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, mqtt_endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, mqtt_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, https_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, tls_handshake_timeout_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, tls_read_timeout_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, tls_write_timeout_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, is_clean_session_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, mqtt_command_timeout_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, keep_alive_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, min_reconnect_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, max_reconnect_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, max_acks_to_wait_for_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, action_processing_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, max_outgoing_action_queue_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, discover_action_timeout_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, host_topic_outgoing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, host_topic_incoming_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, device_topic_outgoing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, device_topic_incoming_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, room_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, organization_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProvisioningData, organization_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::logi::proto::LRProvisioningData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LRProvisioningData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "cloud_provisioning_structures.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n#cloud_provisioning_structures.proto\022\nl"
      "ogi.proto\"\363\005\n\022LRProvisioningData\022\021\n\tclie"
      "nt_id\030\001 \001(\t\022\021\n\troot_cert\030\002 \001(\t\022\023\n\013client"
      "_cert\030\003 \001(\t\022\023\n\013private_key\030\004 \001(\t\022\025\n\rmqtt"
      "_endpoint\030\005 \001(\t\022\021\n\tmqtt_port\030\006 \001(\r\022\022\n\nht"
      "tps_port\030\007 \001(\r\022 \n\030tls_handshake_timeout_"
      "ms\030\010 \001(\004\022\033\n\023tls_read_timeout_ms\030\t \001(\004\022\034\n"
      "\024tls_write_timeout_ms\030\n \001(\004\022\030\n\020is_clean_"
      "session\030\013 \001(\010\022\037\n\027mqtt_command_timeout_ms"
      "\030\014 \001(\004\022\033\n\023keep_alive_interval\030\r \001(\r\022\036\n\026m"
      "in_reconnect_interval\030\016 \001(\r\022\036\n\026max_recon"
      "nect_interval\030\017 \001(\r\022\034\n\024max_acks_to_wait_"
      "for\030\020 \001(\r\022\036\n\026action_processing_rate\030\021 \001("
      "\r\022(\n max_outgoing_action_queue_length\030\022 "
      "\001(\r\022\"\n\032discover_action_timeout_ms\030\023 \001(\004\022"
      "\033\n\023host_topic_outgoing\030\024 \001(\t\022\033\n\023host_top"
      "ic_incoming\030\025 \001(\t\022\035\n\025device_topic_outgoi"
      "ng\030\026 \001(\t\022\035\n\025device_topic_incoming\030\027 \001(\t\022"
      "\021\n\troom_name\030d \001(\t\022\017\n\007room_id\030e \001(\t\022\031\n\021o"
      "rganization_name\030n \001(\t\022\027\n\017organization_i"
      "d\030o \001(\tB4\n2com.logitech.vc.raiden.proto."
      "provisioning.messagesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 869);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cloud_provisioning_structures.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_cloud_5fprovisioning_5fstructures_2eproto
namespace logi {
namespace proto {

// ===================================================================

void LRProvisioningData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LRProvisioningData::kClientIdFieldNumber;
const int LRProvisioningData::kRootCertFieldNumber;
const int LRProvisioningData::kClientCertFieldNumber;
const int LRProvisioningData::kPrivateKeyFieldNumber;
const int LRProvisioningData::kMqttEndpointFieldNumber;
const int LRProvisioningData::kMqttPortFieldNumber;
const int LRProvisioningData::kHttpsPortFieldNumber;
const int LRProvisioningData::kTlsHandshakeTimeoutMsFieldNumber;
const int LRProvisioningData::kTlsReadTimeoutMsFieldNumber;
const int LRProvisioningData::kTlsWriteTimeoutMsFieldNumber;
const int LRProvisioningData::kIsCleanSessionFieldNumber;
const int LRProvisioningData::kMqttCommandTimeoutMsFieldNumber;
const int LRProvisioningData::kKeepAliveIntervalFieldNumber;
const int LRProvisioningData::kMinReconnectIntervalFieldNumber;
const int LRProvisioningData::kMaxReconnectIntervalFieldNumber;
const int LRProvisioningData::kMaxAcksToWaitForFieldNumber;
const int LRProvisioningData::kActionProcessingRateFieldNumber;
const int LRProvisioningData::kMaxOutgoingActionQueueLengthFieldNumber;
const int LRProvisioningData::kDiscoverActionTimeoutMsFieldNumber;
const int LRProvisioningData::kHostTopicOutgoingFieldNumber;
const int LRProvisioningData::kHostTopicIncomingFieldNumber;
const int LRProvisioningData::kDeviceTopicOutgoingFieldNumber;
const int LRProvisioningData::kDeviceTopicIncomingFieldNumber;
const int LRProvisioningData::kRoomNameFieldNumber;
const int LRProvisioningData::kRoomIdFieldNumber;
const int LRProvisioningData::kOrganizationNameFieldNumber;
const int LRProvisioningData::kOrganizationIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LRProvisioningData::LRProvisioningData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cloud_5fprovisioning_5fstructures_2eproto::scc_info_LRProvisioningData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LRProvisioningData)
}
LRProvisioningData::LRProvisioningData(const LRProvisioningData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_id().size() > 0) {
    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  root_cert_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.root_cert().size() > 0) {
    root_cert_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.root_cert_);
  }
  client_cert_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_cert().size() > 0) {
    client_cert_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_cert_);
  }
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.private_key().size() > 0) {
    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
  mqtt_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mqtt_endpoint().size() > 0) {
    mqtt_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mqtt_endpoint_);
  }
  host_topic_outgoing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_topic_outgoing().size() > 0) {
    host_topic_outgoing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_topic_outgoing_);
  }
  host_topic_incoming_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_topic_incoming().size() > 0) {
    host_topic_incoming_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_topic_incoming_);
  }
  device_topic_outgoing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_topic_outgoing().size() > 0) {
    device_topic_outgoing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_topic_outgoing_);
  }
  device_topic_incoming_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_topic_incoming().size() > 0) {
    device_topic_incoming_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_topic_incoming_);
  }
  room_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.room_name().size() > 0) {
    room_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_name_);
  }
  room_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.room_id().size() > 0) {
    room_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_id_);
  }
  organization_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.organization_name().size() > 0) {
    organization_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.organization_name_);
  }
  organization_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.organization_id().size() > 0) {
    organization_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.organization_id_);
  }
  ::memcpy(&mqtt_port_, &from.mqtt_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_outgoing_action_queue_length_) -
    reinterpret_cast<char*>(&mqtt_port_)) + sizeof(max_outgoing_action_queue_length_));
  // @@protoc_insertion_point(copy_constructor:logi.proto.LRProvisioningData)
}

void LRProvisioningData::SharedCtor() {
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  root_cert_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_cert_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mqtt_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_topic_outgoing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_topic_incoming_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_topic_outgoing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_topic_incoming_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mqtt_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_outgoing_action_queue_length_) -
      reinterpret_cast<char*>(&mqtt_port_)) + sizeof(max_outgoing_action_queue_length_));
}

LRProvisioningData::~LRProvisioningData() {
  // @@protoc_insertion_point(destructor:logi.proto.LRProvisioningData)
  SharedDtor();
}

void LRProvisioningData::SharedDtor() {
  client_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  root_cert_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_cert_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mqtt_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_topic_outgoing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_topic_incoming_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_topic_outgoing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_topic_incoming_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LRProvisioningData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LRProvisioningData::descriptor() {
  ::protobuf_cloud_5fprovisioning_5fstructures_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5fstructures_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LRProvisioningData& LRProvisioningData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cloud_5fprovisioning_5fstructures_2eproto::scc_info_LRProvisioningData.base);
  return *internal_default_instance();
}


void LRProvisioningData::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LRProvisioningData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  root_cert_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_cert_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mqtt_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_topic_outgoing_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_topic_incoming_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_topic_outgoing_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_topic_incoming_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mqtt_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_outgoing_action_queue_length_) -
      reinterpret_cast<char*>(&mqtt_port_)) + sizeof(max_outgoing_action_queue_length_));
  _internal_metadata_.Clear();
}

bool LRProvisioningData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LRProvisioningData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string client_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_id().data(), static_cast<int>(this->client_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProvisioningData.client_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string root_cert = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_root_cert()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->root_cert().data(), static_cast<int>(this->root_cert().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProvisioningData.root_cert"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_cert = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_cert()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_cert().data(), static_cast<int>(this->client_cert().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProvisioningData.client_cert"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string private_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_private_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->private_key().data(), static_cast<int>(this->private_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProvisioningData.private_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mqtt_endpoint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mqtt_endpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mqtt_endpoint().data(), static_cast<int>(this->mqtt_endpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProvisioningData.mqtt_endpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mqtt_port = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mqtt_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 https_port = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &https_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 tls_handshake_timeout_ms = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tls_handshake_timeout_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 tls_read_timeout_ms = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tls_read_timeout_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 tls_write_timeout_ms = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tls_write_timeout_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_clean_session = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_clean_session_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mqtt_command_timeout_ms = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mqtt_command_timeout_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 keep_alive_interval = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &keep_alive_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 min_reconnect_interval = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &min_reconnect_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_reconnect_interval = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_reconnect_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_acks_to_wait_for = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_acks_to_wait_for_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 action_processing_rate = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_processing_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_outgoing_action_queue_length = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_outgoing_action_queue_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 discover_action_timeout_ms = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &discover_action_timeout_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host_topic_outgoing = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_topic_outgoing()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_topic_outgoing().data(), static_cast<int>(this->host_topic_outgoing().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProvisioningData.host_topic_outgoing"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host_topic_incoming = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_topic_incoming()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_topic_incoming().data(), static_cast<int>(this->host_topic_incoming().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProvisioningData.host_topic_incoming"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_topic_outgoing = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_topic_outgoing()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_topic_outgoing().data(), static_cast<int>(this->device_topic_outgoing().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProvisioningData.device_topic_outgoing"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_topic_incoming = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_topic_incoming()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_topic_incoming().data(), static_cast<int>(this->device_topic_incoming().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProvisioningData.device_topic_incoming"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string room_name = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->room_name().data(), static_cast<int>(this->room_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProvisioningData.room_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string room_id = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->room_id().data(), static_cast<int>(this->room_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProvisioningData.room_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string organization_name = 110;
      case 110: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_organization_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->organization_name().data(), static_cast<int>(this->organization_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProvisioningData.organization_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string organization_id = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_organization_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->organization_id().data(), static_cast<int>(this->organization_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProvisioningData.organization_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LRProvisioningData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LRProvisioningData)
  return false;
#undef DO_
}

void LRProvisioningData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LRProvisioningData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.client_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->client_id(), output);
  }

  // string root_cert = 2;
  if (this->root_cert().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->root_cert().data(), static_cast<int>(this->root_cert().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.root_cert");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->root_cert(), output);
  }

  // string client_cert = 3;
  if (this->client_cert().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_cert().data(), static_cast<int>(this->client_cert().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.client_cert");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->client_cert(), output);
  }

  // string private_key = 4;
  if (this->private_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->private_key().data(), static_cast<int>(this->private_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.private_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->private_key(), output);
  }

  // string mqtt_endpoint = 5;
  if (this->mqtt_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mqtt_endpoint().data(), static_cast<int>(this->mqtt_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.mqtt_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mqtt_endpoint(), output);
  }

  // uint32 mqtt_port = 6;
  if (this->mqtt_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->mqtt_port(), output);
  }

  // uint32 https_port = 7;
  if (this->https_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->https_port(), output);
  }

  // uint64 tls_handshake_timeout_ms = 8;
  if (this->tls_handshake_timeout_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->tls_handshake_timeout_ms(), output);
  }

  // uint64 tls_read_timeout_ms = 9;
  if (this->tls_read_timeout_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->tls_read_timeout_ms(), output);
  }

  // uint64 tls_write_timeout_ms = 10;
  if (this->tls_write_timeout_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->tls_write_timeout_ms(), output);
  }

  // bool is_clean_session = 11;
  if (this->is_clean_session() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_clean_session(), output);
  }

  // uint64 mqtt_command_timeout_ms = 12;
  if (this->mqtt_command_timeout_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->mqtt_command_timeout_ms(), output);
  }

  // uint32 keep_alive_interval = 13;
  if (this->keep_alive_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->keep_alive_interval(), output);
  }

  // uint32 min_reconnect_interval = 14;
  if (this->min_reconnect_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->min_reconnect_interval(), output);
  }

  // uint32 max_reconnect_interval = 15;
  if (this->max_reconnect_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->max_reconnect_interval(), output);
  }

  // uint32 max_acks_to_wait_for = 16;
  if (this->max_acks_to_wait_for() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->max_acks_to_wait_for(), output);
  }

  // uint32 action_processing_rate = 17;
  if (this->action_processing_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->action_processing_rate(), output);
  }

  // uint32 max_outgoing_action_queue_length = 18;
  if (this->max_outgoing_action_queue_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->max_outgoing_action_queue_length(), output);
  }

  // uint64 discover_action_timeout_ms = 19;
  if (this->discover_action_timeout_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(19, this->discover_action_timeout_ms(), output);
  }

  // string host_topic_outgoing = 20;
  if (this->host_topic_outgoing().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_topic_outgoing().data(), static_cast<int>(this->host_topic_outgoing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.host_topic_outgoing");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->host_topic_outgoing(), output);
  }

  // string host_topic_incoming = 21;
  if (this->host_topic_incoming().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_topic_incoming().data(), static_cast<int>(this->host_topic_incoming().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.host_topic_incoming");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->host_topic_incoming(), output);
  }

  // string device_topic_outgoing = 22;
  if (this->device_topic_outgoing().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_topic_outgoing().data(), static_cast<int>(this->device_topic_outgoing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.device_topic_outgoing");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->device_topic_outgoing(), output);
  }

  // string device_topic_incoming = 23;
  if (this->device_topic_incoming().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_topic_incoming().data(), static_cast<int>(this->device_topic_incoming().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.device_topic_incoming");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->device_topic_incoming(), output);
  }

  // string room_name = 100;
  if (this->room_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_name().data(), static_cast<int>(this->room_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.room_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->room_name(), output);
  }

  // string room_id = 101;
  if (this->room_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_id().data(), static_cast<int>(this->room_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.room_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->room_id(), output);
  }

  // string organization_name = 110;
  if (this->organization_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organization_name().data(), static_cast<int>(this->organization_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.organization_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      110, this->organization_name(), output);
  }

  // string organization_id = 111;
  if (this->organization_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organization_id().data(), static_cast<int>(this->organization_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.organization_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      111, this->organization_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LRProvisioningData)
}

::google::protobuf::uint8* LRProvisioningData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LRProvisioningData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.client_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->client_id(), target);
  }

  // string root_cert = 2;
  if (this->root_cert().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->root_cert().data(), static_cast<int>(this->root_cert().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.root_cert");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->root_cert(), target);
  }

  // string client_cert = 3;
  if (this->client_cert().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_cert().data(), static_cast<int>(this->client_cert().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.client_cert");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->client_cert(), target);
  }

  // string private_key = 4;
  if (this->private_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->private_key().data(), static_cast<int>(this->private_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.private_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->private_key(), target);
  }

  // string mqtt_endpoint = 5;
  if (this->mqtt_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mqtt_endpoint().data(), static_cast<int>(this->mqtt_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.mqtt_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mqtt_endpoint(), target);
  }

  // uint32 mqtt_port = 6;
  if (this->mqtt_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->mqtt_port(), target);
  }

  // uint32 https_port = 7;
  if (this->https_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->https_port(), target);
  }

  // uint64 tls_handshake_timeout_ms = 8;
  if (this->tls_handshake_timeout_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->tls_handshake_timeout_ms(), target);
  }

  // uint64 tls_read_timeout_ms = 9;
  if (this->tls_read_timeout_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->tls_read_timeout_ms(), target);
  }

  // uint64 tls_write_timeout_ms = 10;
  if (this->tls_write_timeout_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->tls_write_timeout_ms(), target);
  }

  // bool is_clean_session = 11;
  if (this->is_clean_session() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_clean_session(), target);
  }

  // uint64 mqtt_command_timeout_ms = 12;
  if (this->mqtt_command_timeout_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->mqtt_command_timeout_ms(), target);
  }

  // uint32 keep_alive_interval = 13;
  if (this->keep_alive_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->keep_alive_interval(), target);
  }

  // uint32 min_reconnect_interval = 14;
  if (this->min_reconnect_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->min_reconnect_interval(), target);
  }

  // uint32 max_reconnect_interval = 15;
  if (this->max_reconnect_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->max_reconnect_interval(), target);
  }

  // uint32 max_acks_to_wait_for = 16;
  if (this->max_acks_to_wait_for() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->max_acks_to_wait_for(), target);
  }

  // uint32 action_processing_rate = 17;
  if (this->action_processing_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->action_processing_rate(), target);
  }

  // uint32 max_outgoing_action_queue_length = 18;
  if (this->max_outgoing_action_queue_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->max_outgoing_action_queue_length(), target);
  }

  // uint64 discover_action_timeout_ms = 19;
  if (this->discover_action_timeout_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(19, this->discover_action_timeout_ms(), target);
  }

  // string host_topic_outgoing = 20;
  if (this->host_topic_outgoing().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_topic_outgoing().data(), static_cast<int>(this->host_topic_outgoing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.host_topic_outgoing");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->host_topic_outgoing(), target);
  }

  // string host_topic_incoming = 21;
  if (this->host_topic_incoming().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_topic_incoming().data(), static_cast<int>(this->host_topic_incoming().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.host_topic_incoming");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->host_topic_incoming(), target);
  }

  // string device_topic_outgoing = 22;
  if (this->device_topic_outgoing().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_topic_outgoing().data(), static_cast<int>(this->device_topic_outgoing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.device_topic_outgoing");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->device_topic_outgoing(), target);
  }

  // string device_topic_incoming = 23;
  if (this->device_topic_incoming().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_topic_incoming().data(), static_cast<int>(this->device_topic_incoming().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.device_topic_incoming");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->device_topic_incoming(), target);
  }

  // string room_name = 100;
  if (this->room_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_name().data(), static_cast<int>(this->room_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.room_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->room_name(), target);
  }

  // string room_id = 101;
  if (this->room_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_id().data(), static_cast<int>(this->room_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.room_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->room_id(), target);
  }

  // string organization_name = 110;
  if (this->organization_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organization_name().data(), static_cast<int>(this->organization_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.organization_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        110, this->organization_name(), target);
  }

  // string organization_id = 111;
  if (this->organization_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organization_id().data(), static_cast<int>(this->organization_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProvisioningData.organization_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        111, this->organization_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LRProvisioningData)
  return target;
}

size_t LRProvisioningData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LRProvisioningData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string client_id = 1;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_id());
  }

  // string root_cert = 2;
  if (this->root_cert().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->root_cert());
  }

  // string client_cert = 3;
  if (this->client_cert().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_cert());
  }

  // string private_key = 4;
  if (this->private_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->private_key());
  }

  // string mqtt_endpoint = 5;
  if (this->mqtt_endpoint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mqtt_endpoint());
  }

  // string host_topic_outgoing = 20;
  if (this->host_topic_outgoing().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_topic_outgoing());
  }

  // string host_topic_incoming = 21;
  if (this->host_topic_incoming().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_topic_incoming());
  }

  // string device_topic_outgoing = 22;
  if (this->device_topic_outgoing().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_topic_outgoing());
  }

  // string device_topic_incoming = 23;
  if (this->device_topic_incoming().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_topic_incoming());
  }

  // string room_name = 100;
  if (this->room_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_name());
  }

  // string room_id = 101;
  if (this->room_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_id());
  }

  // string organization_name = 110;
  if (this->organization_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->organization_name());
  }

  // string organization_id = 111;
  if (this->organization_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->organization_id());
  }

  // uint32 mqtt_port = 6;
  if (this->mqtt_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mqtt_port());
  }

  // uint32 https_port = 7;
  if (this->https_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->https_port());
  }

  // uint64 tls_handshake_timeout_ms = 8;
  if (this->tls_handshake_timeout_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tls_handshake_timeout_ms());
  }

  // uint64 tls_read_timeout_ms = 9;
  if (this->tls_read_timeout_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tls_read_timeout_ms());
  }

  // uint64 tls_write_timeout_ms = 10;
  if (this->tls_write_timeout_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tls_write_timeout_ms());
  }

  // uint64 mqtt_command_timeout_ms = 12;
  if (this->mqtt_command_timeout_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mqtt_command_timeout_ms());
  }

  // bool is_clean_session = 11;
  if (this->is_clean_session() != 0) {
    total_size += 1 + 1;
  }

  // uint32 keep_alive_interval = 13;
  if (this->keep_alive_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->keep_alive_interval());
  }

  // uint32 min_reconnect_interval = 14;
  if (this->min_reconnect_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->min_reconnect_interval());
  }

  // uint32 max_reconnect_interval = 15;
  if (this->max_reconnect_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_reconnect_interval());
  }

  // uint32 max_acks_to_wait_for = 16;
  if (this->max_acks_to_wait_for() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_acks_to_wait_for());
  }

  // uint32 action_processing_rate = 17;
  if (this->action_processing_rate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_processing_rate());
  }

  // uint64 discover_action_timeout_ms = 19;
  if (this->discover_action_timeout_ms() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->discover_action_timeout_ms());
  }

  // uint32 max_outgoing_action_queue_length = 18;
  if (this->max_outgoing_action_queue_length() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_outgoing_action_queue_length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LRProvisioningData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LRProvisioningData)
  GOOGLE_DCHECK_NE(&from, this);
  const LRProvisioningData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LRProvisioningData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LRProvisioningData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LRProvisioningData)
    MergeFrom(*source);
  }
}

void LRProvisioningData::MergeFrom(const LRProvisioningData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LRProvisioningData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_id().size() > 0) {

    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  if (from.root_cert().size() > 0) {

    root_cert_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.root_cert_);
  }
  if (from.client_cert().size() > 0) {

    client_cert_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_cert_);
  }
  if (from.private_key().size() > 0) {

    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
  if (from.mqtt_endpoint().size() > 0) {

    mqtt_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mqtt_endpoint_);
  }
  if (from.host_topic_outgoing().size() > 0) {

    host_topic_outgoing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_topic_outgoing_);
  }
  if (from.host_topic_incoming().size() > 0) {

    host_topic_incoming_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_topic_incoming_);
  }
  if (from.device_topic_outgoing().size() > 0) {

    device_topic_outgoing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_topic_outgoing_);
  }
  if (from.device_topic_incoming().size() > 0) {

    device_topic_incoming_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_topic_incoming_);
  }
  if (from.room_name().size() > 0) {

    room_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_name_);
  }
  if (from.room_id().size() > 0) {

    room_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_id_);
  }
  if (from.organization_name().size() > 0) {

    organization_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.organization_name_);
  }
  if (from.organization_id().size() > 0) {

    organization_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.organization_id_);
  }
  if (from.mqtt_port() != 0) {
    set_mqtt_port(from.mqtt_port());
  }
  if (from.https_port() != 0) {
    set_https_port(from.https_port());
  }
  if (from.tls_handshake_timeout_ms() != 0) {
    set_tls_handshake_timeout_ms(from.tls_handshake_timeout_ms());
  }
  if (from.tls_read_timeout_ms() != 0) {
    set_tls_read_timeout_ms(from.tls_read_timeout_ms());
  }
  if (from.tls_write_timeout_ms() != 0) {
    set_tls_write_timeout_ms(from.tls_write_timeout_ms());
  }
  if (from.mqtt_command_timeout_ms() != 0) {
    set_mqtt_command_timeout_ms(from.mqtt_command_timeout_ms());
  }
  if (from.is_clean_session() != 0) {
    set_is_clean_session(from.is_clean_session());
  }
  if (from.keep_alive_interval() != 0) {
    set_keep_alive_interval(from.keep_alive_interval());
  }
  if (from.min_reconnect_interval() != 0) {
    set_min_reconnect_interval(from.min_reconnect_interval());
  }
  if (from.max_reconnect_interval() != 0) {
    set_max_reconnect_interval(from.max_reconnect_interval());
  }
  if (from.max_acks_to_wait_for() != 0) {
    set_max_acks_to_wait_for(from.max_acks_to_wait_for());
  }
  if (from.action_processing_rate() != 0) {
    set_action_processing_rate(from.action_processing_rate());
  }
  if (from.discover_action_timeout_ms() != 0) {
    set_discover_action_timeout_ms(from.discover_action_timeout_ms());
  }
  if (from.max_outgoing_action_queue_length() != 0) {
    set_max_outgoing_action_queue_length(from.max_outgoing_action_queue_length());
  }
}

void LRProvisioningData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LRProvisioningData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LRProvisioningData::CopyFrom(const LRProvisioningData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LRProvisioningData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LRProvisioningData::IsInitialized() const {
  return true;
}

void LRProvisioningData::Swap(LRProvisioningData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LRProvisioningData::InternalSwap(LRProvisioningData* other) {
  using std::swap;
  client_id_.Swap(&other->client_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  root_cert_.Swap(&other->root_cert_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_cert_.Swap(&other->client_cert_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  private_key_.Swap(&other->private_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mqtt_endpoint_.Swap(&other->mqtt_endpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_topic_outgoing_.Swap(&other->host_topic_outgoing_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_topic_incoming_.Swap(&other->host_topic_incoming_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_topic_outgoing_.Swap(&other->device_topic_outgoing_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_topic_incoming_.Swap(&other->device_topic_incoming_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  room_name_.Swap(&other->room_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  room_id_.Swap(&other->room_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  organization_name_.Swap(&other->organization_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  organization_id_.Swap(&other->organization_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mqtt_port_, other->mqtt_port_);
  swap(https_port_, other->https_port_);
  swap(tls_handshake_timeout_ms_, other->tls_handshake_timeout_ms_);
  swap(tls_read_timeout_ms_, other->tls_read_timeout_ms_);
  swap(tls_write_timeout_ms_, other->tls_write_timeout_ms_);
  swap(mqtt_command_timeout_ms_, other->mqtt_command_timeout_ms_);
  swap(is_clean_session_, other->is_clean_session_);
  swap(keep_alive_interval_, other->keep_alive_interval_);
  swap(min_reconnect_interval_, other->min_reconnect_interval_);
  swap(max_reconnect_interval_, other->max_reconnect_interval_);
  swap(max_acks_to_wait_for_, other->max_acks_to_wait_for_);
  swap(action_processing_rate_, other->action_processing_rate_);
  swap(discover_action_timeout_ms_, other->discover_action_timeout_ms_);
  swap(max_outgoing_action_queue_length_, other->max_outgoing_action_queue_length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LRProvisioningData::GetMetadata() const {
  protobuf_cloud_5fprovisioning_5fstructures_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fprovisioning_5fstructures_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace logi
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LRProvisioningData* Arena::CreateMaybeMessage< ::logi::proto::LRProvisioningData >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LRProvisioningData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
