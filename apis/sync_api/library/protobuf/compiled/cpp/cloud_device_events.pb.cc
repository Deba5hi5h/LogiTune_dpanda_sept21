// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloud_device_events.proto

#include "cloud_device_events.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_cloud_5fdevice_5fstructures_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cloud_5fdevice_5fstructures_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_LRProductSnapshot;
}  // namespace protobuf_cloud_5fdevice_5fstructures_2eproto
namespace logi {
namespace proto {
class LRProductUpdatedEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LRProductUpdatedEvent>
      _instance;
} _LRProductUpdatedEvent_default_instance_;
}  // namespace proto
}  // namespace logi
namespace protobuf_cloud_5fdevice_5fevents_2eproto {
static void InitDefaultsLRProductUpdatedEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::logi::proto::_LRProductUpdatedEvent_default_instance_;
    new (ptr) ::logi::proto::LRProductUpdatedEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::logi::proto::LRProductUpdatedEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LRProductUpdatedEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLRProductUpdatedEvent}, {
      &protobuf_cloud_5fdevice_5fstructures_2eproto::scc_info_LRProductSnapshot.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LRProductUpdatedEvent.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProductUpdatedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProductUpdatedEvent, org_info_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProductUpdatedEvent, org_policy_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProductUpdatedEvent, room_info_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProductUpdatedEvent, room_policy_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::logi::proto::LRProductUpdatedEvent, snapshots_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::logi::proto::LRProductUpdatedEvent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::logi::proto::_LRProductUpdatedEvent_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "cloud_device_events.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031cloud_device_events.proto\022\nlogi.proto\032"
      "\035cloud_device_structures.proto\"\277\001\n\025LRPro"
      "ductUpdatedEvent\022\032\n\022org_info_timestamp\030\001"
      " \001(\t\022\034\n\024org_policy_timestamp\030\002 \001(\t\022\033\n\023ro"
      "om_info_timestamp\030\003 \001(\t\022\035\n\025room_policy_t"
      "imestamp\030\004 \001(\t\0220\n\tsnapshots\030\005 \003(\0132\035.logi"
      ".proto.LRProductSnapshotB.\n,com.logitech"
      ".vc.raiden.proto.device.messagesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 320);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cloud_device_events.proto", &protobuf_RegisterTypes);
  ::protobuf_cloud_5fdevice_5fstructures_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_cloud_5fdevice_5fevents_2eproto
namespace logi {
namespace proto {

// ===================================================================

void LRProductUpdatedEvent::InitAsDefaultInstance() {
}
void LRProductUpdatedEvent::clear_snapshots() {
  snapshots_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LRProductUpdatedEvent::kOrgInfoTimestampFieldNumber;
const int LRProductUpdatedEvent::kOrgPolicyTimestampFieldNumber;
const int LRProductUpdatedEvent::kRoomInfoTimestampFieldNumber;
const int LRProductUpdatedEvent::kRoomPolicyTimestampFieldNumber;
const int LRProductUpdatedEvent::kSnapshotsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LRProductUpdatedEvent::LRProductUpdatedEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cloud_5fdevice_5fevents_2eproto::scc_info_LRProductUpdatedEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:logi.proto.LRProductUpdatedEvent)
}
LRProductUpdatedEvent::LRProductUpdatedEvent(const LRProductUpdatedEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      snapshots_(from.snapshots_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  org_info_timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.org_info_timestamp().size() > 0) {
    org_info_timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_info_timestamp_);
  }
  org_policy_timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.org_policy_timestamp().size() > 0) {
    org_policy_timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_policy_timestamp_);
  }
  room_info_timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.room_info_timestamp().size() > 0) {
    room_info_timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_info_timestamp_);
  }
  room_policy_timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.room_policy_timestamp().size() > 0) {
    room_policy_timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_policy_timestamp_);
  }
  // @@protoc_insertion_point(copy_constructor:logi.proto.LRProductUpdatedEvent)
}

void LRProductUpdatedEvent::SharedCtor() {
  org_info_timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_policy_timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_info_timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_policy_timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LRProductUpdatedEvent::~LRProductUpdatedEvent() {
  // @@protoc_insertion_point(destructor:logi.proto.LRProductUpdatedEvent)
  SharedDtor();
}

void LRProductUpdatedEvent::SharedDtor() {
  org_info_timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_policy_timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_info_timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_policy_timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LRProductUpdatedEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LRProductUpdatedEvent::descriptor() {
  ::protobuf_cloud_5fdevice_5fevents_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fdevice_5fevents_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LRProductUpdatedEvent& LRProductUpdatedEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cloud_5fdevice_5fevents_2eproto::scc_info_LRProductUpdatedEvent.base);
  return *internal_default_instance();
}


void LRProductUpdatedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:logi.proto.LRProductUpdatedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  snapshots_.Clear();
  org_info_timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  org_policy_timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_info_timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_policy_timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LRProductUpdatedEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:logi.proto.LRProductUpdatedEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string org_info_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_org_info_timestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->org_info_timestamp().data(), static_cast<int>(this->org_info_timestamp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProductUpdatedEvent.org_info_timestamp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string org_policy_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_org_policy_timestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->org_policy_timestamp().data(), static_cast<int>(this->org_policy_timestamp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProductUpdatedEvent.org_policy_timestamp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string room_info_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_info_timestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->room_info_timestamp().data(), static_cast<int>(this->room_info_timestamp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProductUpdatedEvent.room_info_timestamp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string room_policy_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_policy_timestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->room_policy_timestamp().data(), static_cast<int>(this->room_policy_timestamp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "logi.proto.LRProductUpdatedEvent.room_policy_timestamp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .logi.proto.LRProductSnapshot snapshots = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_snapshots()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:logi.proto.LRProductUpdatedEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:logi.proto.LRProductUpdatedEvent)
  return false;
#undef DO_
}

void LRProductUpdatedEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:logi.proto.LRProductUpdatedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_info_timestamp = 1;
  if (this->org_info_timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_info_timestamp().data(), static_cast<int>(this->org_info_timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProductUpdatedEvent.org_info_timestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->org_info_timestamp(), output);
  }

  // string org_policy_timestamp = 2;
  if (this->org_policy_timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_policy_timestamp().data(), static_cast<int>(this->org_policy_timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProductUpdatedEvent.org_policy_timestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->org_policy_timestamp(), output);
  }

  // string room_info_timestamp = 3;
  if (this->room_info_timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_info_timestamp().data(), static_cast<int>(this->room_info_timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProductUpdatedEvent.room_info_timestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->room_info_timestamp(), output);
  }

  // string room_policy_timestamp = 4;
  if (this->room_policy_timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_policy_timestamp().data(), static_cast<int>(this->room_policy_timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProductUpdatedEvent.room_policy_timestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->room_policy_timestamp(), output);
  }

  // repeated .logi.proto.LRProductSnapshot snapshots = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->snapshots_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->snapshots(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:logi.proto.LRProductUpdatedEvent)
}

::google::protobuf::uint8* LRProductUpdatedEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:logi.proto.LRProductUpdatedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_info_timestamp = 1;
  if (this->org_info_timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_info_timestamp().data(), static_cast<int>(this->org_info_timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProductUpdatedEvent.org_info_timestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->org_info_timestamp(), target);
  }

  // string org_policy_timestamp = 2;
  if (this->org_policy_timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->org_policy_timestamp().data(), static_cast<int>(this->org_policy_timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProductUpdatedEvent.org_policy_timestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->org_policy_timestamp(), target);
  }

  // string room_info_timestamp = 3;
  if (this->room_info_timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_info_timestamp().data(), static_cast<int>(this->room_info_timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProductUpdatedEvent.room_info_timestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->room_info_timestamp(), target);
  }

  // string room_policy_timestamp = 4;
  if (this->room_policy_timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_policy_timestamp().data(), static_cast<int>(this->room_policy_timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "logi.proto.LRProductUpdatedEvent.room_policy_timestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->room_policy_timestamp(), target);
  }

  // repeated .logi.proto.LRProductSnapshot snapshots = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->snapshots_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->snapshots(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logi.proto.LRProductUpdatedEvent)
  return target;
}

size_t LRProductUpdatedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logi.proto.LRProductUpdatedEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .logi.proto.LRProductSnapshot snapshots = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->snapshots_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->snapshots(static_cast<int>(i)));
    }
  }

  // string org_info_timestamp = 1;
  if (this->org_info_timestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->org_info_timestamp());
  }

  // string org_policy_timestamp = 2;
  if (this->org_policy_timestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->org_policy_timestamp());
  }

  // string room_info_timestamp = 3;
  if (this->room_info_timestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_info_timestamp());
  }

  // string room_policy_timestamp = 4;
  if (this->room_policy_timestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_policy_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LRProductUpdatedEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:logi.proto.LRProductUpdatedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const LRProductUpdatedEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LRProductUpdatedEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:logi.proto.LRProductUpdatedEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:logi.proto.LRProductUpdatedEvent)
    MergeFrom(*source);
  }
}

void LRProductUpdatedEvent::MergeFrom(const LRProductUpdatedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:logi.proto.LRProductUpdatedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  snapshots_.MergeFrom(from.snapshots_);
  if (from.org_info_timestamp().size() > 0) {

    org_info_timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_info_timestamp_);
  }
  if (from.org_policy_timestamp().size() > 0) {

    org_policy_timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.org_policy_timestamp_);
  }
  if (from.room_info_timestamp().size() > 0) {

    room_info_timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_info_timestamp_);
  }
  if (from.room_policy_timestamp().size() > 0) {

    room_policy_timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_policy_timestamp_);
  }
}

void LRProductUpdatedEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:logi.proto.LRProductUpdatedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LRProductUpdatedEvent::CopyFrom(const LRProductUpdatedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logi.proto.LRProductUpdatedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LRProductUpdatedEvent::IsInitialized() const {
  return true;
}

void LRProductUpdatedEvent::Swap(LRProductUpdatedEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LRProductUpdatedEvent::InternalSwap(LRProductUpdatedEvent* other) {
  using std::swap;
  CastToBase(&snapshots_)->InternalSwap(CastToBase(&other->snapshots_));
  org_info_timestamp_.Swap(&other->org_info_timestamp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  org_policy_timestamp_.Swap(&other->org_policy_timestamp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  room_info_timestamp_.Swap(&other->room_info_timestamp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  room_policy_timestamp_.Swap(&other->room_policy_timestamp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LRProductUpdatedEvent::GetMetadata() const {
  protobuf_cloud_5fdevice_5fevents_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cloud_5fdevice_5fevents_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace logi
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::logi::proto::LRProductUpdatedEvent* Arena::CreateMaybeMessage< ::logi::proto::LRProductUpdatedEvent >(Arena* arena) {
  return Arena::CreateInternal< ::logi::proto::LRProductUpdatedEvent >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
