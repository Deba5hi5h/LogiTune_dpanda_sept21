/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var transport_pb = require('./transport_pb.js');
var cloud_provisioning_requests_pb = require('./cloud_provisioning_requests_pb.js');
var cloud_provisioning_events_pb = require('./cloud_provisioning_events_pb.js');
var cloud_device_events_pb = require('./cloud_device_events_pb.js');
var cloud_device_requests_pb = require('./cloud_device_requests_pb.js');
goog.exportSymbol('proto.logi.proto.LREvent', null, global);
goog.exportSymbol('proto.logi.proto.LRRequest', null, global);
goog.exportSymbol('proto.logi.proto.LRResponse', null, global);
goog.exportSymbol('proto.logi.proto.LogiRaidenMessage', null, global);
goog.exportSymbol('proto.logi.proto.LogiRaidenMessage.Source', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.LogiRaidenMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.logi.proto.LogiRaidenMessage.oneofGroups_);
};
goog.inherits(proto.logi.proto.LogiRaidenMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.LogiRaidenMessage.displayName = 'proto.logi.proto.LogiRaidenMessage';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.logi.proto.LogiRaidenMessage.oneofGroups_ = [[4,5,6]];

/**
 * @enum {number}
 */
proto.logi.proto.LogiRaidenMessage.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  REQUEST: 4,
  RESPONSE: 5,
  EVENT: 6
};

/**
 * @return {proto.logi.proto.LogiRaidenMessage.PayloadCase}
 */
proto.logi.proto.LogiRaidenMessage.prototype.getPayloadCase = function() {
  return /** @type {proto.logi.proto.LogiRaidenMessage.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.logi.proto.LogiRaidenMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.LogiRaidenMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.LogiRaidenMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.LogiRaidenMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LogiRaidenMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && transport_pb.Header.toObject(includeInstance, f),
    source: jspb.Message.getFieldWithDefault(msg, 2, 0),
    internalApiId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    request: (f = msg.getRequest()) && proto.logi.proto.LRRequest.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && proto.logi.proto.LRResponse.toObject(includeInstance, f),
    event: (f = msg.getEvent()) && proto.logi.proto.LREvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.LogiRaidenMessage}
 */
proto.logi.proto.LogiRaidenMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.LogiRaidenMessage;
  return proto.logi.proto.LogiRaidenMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.LogiRaidenMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.LogiRaidenMessage}
 */
proto.logi.proto.LogiRaidenMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new transport_pb.Header;
      reader.readMessage(value,transport_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {!proto.logi.proto.LogiRaidenMessage.Source} */ (reader.readEnum());
      msg.setSource(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInternalApiId(value);
      break;
    case 4:
      var value = new proto.logi.proto.LRRequest;
      reader.readMessage(value,proto.logi.proto.LRRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 5:
      var value = new proto.logi.proto.LRResponse;
      reader.readMessage(value,proto.logi.proto.LRResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    case 6:
      var value = new proto.logi.proto.LREvent;
      reader.readMessage(value,proto.logi.proto.LREvent.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.LogiRaidenMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.LogiRaidenMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.LogiRaidenMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LogiRaidenMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      transport_pb.Header.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getInternalApiId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.logi.proto.LRRequest.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.logi.proto.LRResponse.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.logi.proto.LREvent.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.logi.proto.LogiRaidenMessage.Source = {
  UNAVAILABLE: 0,
  CLIENT: 1,
  PROXY: 2
};

/**
 * optional Header header = 1;
 * @return {?proto.logi.proto.Header}
 */
proto.logi.proto.LogiRaidenMessage.prototype.getHeader = function() {
  return /** @type{?proto.logi.proto.Header} */ (
    jspb.Message.getWrapperField(this, transport_pb.Header, 1));
};


/** @param {?proto.logi.proto.Header|undefined} value */
proto.logi.proto.LogiRaidenMessage.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.logi.proto.LogiRaidenMessage.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LogiRaidenMessage.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Source source = 2;
 * @return {!proto.logi.proto.LogiRaidenMessage.Source}
 */
proto.logi.proto.LogiRaidenMessage.prototype.getSource = function() {
  return /** @type {!proto.logi.proto.LogiRaidenMessage.Source} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.logi.proto.LogiRaidenMessage.Source} value */
proto.logi.proto.LogiRaidenMessage.prototype.setSource = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 internal_api_id = 3;
 * @return {number}
 */
proto.logi.proto.LogiRaidenMessage.prototype.getInternalApiId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.logi.proto.LogiRaidenMessage.prototype.setInternalApiId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional LRRequest request = 4;
 * @return {?proto.logi.proto.LRRequest}
 */
proto.logi.proto.LogiRaidenMessage.prototype.getRequest = function() {
  return /** @type{?proto.logi.proto.LRRequest} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.LRRequest, 4));
};


/** @param {?proto.logi.proto.LRRequest|undefined} value */
proto.logi.proto.LogiRaidenMessage.prototype.setRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.logi.proto.LogiRaidenMessage.oneofGroups_[0], value);
};


proto.logi.proto.LogiRaidenMessage.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LogiRaidenMessage.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional LRResponse response = 5;
 * @return {?proto.logi.proto.LRResponse}
 */
proto.logi.proto.LogiRaidenMessage.prototype.getResponse = function() {
  return /** @type{?proto.logi.proto.LRResponse} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.LRResponse, 5));
};


/** @param {?proto.logi.proto.LRResponse|undefined} value */
proto.logi.proto.LogiRaidenMessage.prototype.setResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.logi.proto.LogiRaidenMessage.oneofGroups_[0], value);
};


proto.logi.proto.LogiRaidenMessage.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LogiRaidenMessage.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional LREvent event = 6;
 * @return {?proto.logi.proto.LREvent}
 */
proto.logi.proto.LogiRaidenMessage.prototype.getEvent = function() {
  return /** @type{?proto.logi.proto.LREvent} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.LREvent, 6));
};


/** @param {?proto.logi.proto.LREvent|undefined} value */
proto.logi.proto.LogiRaidenMessage.prototype.setEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.logi.proto.LogiRaidenMessage.oneofGroups_[0], value);
};


proto.logi.proto.LogiRaidenMessage.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LogiRaidenMessage.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.LRRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.logi.proto.LRRequest.oneofGroups_);
};
goog.inherits(proto.logi.proto.LRRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.LRRequest.displayName = 'proto.logi.proto.LRRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.logi.proto.LRRequest.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.logi.proto.LRRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  PROVISION_HOST_REQUEST: 1,
  DEPROVISION_HOST_REQUEST: 2,
  GET_PROVISIONING_DATA_REQUEST: 3,
  SET_CLOUD_CONNECTION_STATE_REQUEST: 4,
  CHECK_FOR_PRODUCT_UPDATE_REQUEST: 5
};

/**
 * @return {proto.logi.proto.LRRequest.PayloadCase}
 */
proto.logi.proto.LRRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.logi.proto.LRRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.logi.proto.LRRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.LRRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.LRRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.LRRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LRRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    provisionHostRequest: (f = msg.getProvisionHostRequest()) && cloud_provisioning_requests_pb.LRProvisionHostRequest.toObject(includeInstance, f),
    deprovisionHostRequest: (f = msg.getDeprovisionHostRequest()) && cloud_provisioning_requests_pb.LRDeprovisionHostRequest.toObject(includeInstance, f),
    getProvisioningDataRequest: (f = msg.getGetProvisioningDataRequest()) && cloud_provisioning_requests_pb.LRGetProvisioningDataRequest.toObject(includeInstance, f),
    setCloudConnectionStateRequest: (f = msg.getSetCloudConnectionStateRequest()) && cloud_provisioning_requests_pb.LRSetCloudConnectionStateRequest.toObject(includeInstance, f),
    checkForProductUpdateRequest: (f = msg.getCheckForProductUpdateRequest()) && cloud_device_requests_pb.LRCheckForProductUpdateRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.LRRequest}
 */
proto.logi.proto.LRRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.LRRequest;
  return proto.logi.proto.LRRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.LRRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.LRRequest}
 */
proto.logi.proto.LRRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cloud_provisioning_requests_pb.LRProvisionHostRequest;
      reader.readMessage(value,cloud_provisioning_requests_pb.LRProvisionHostRequest.deserializeBinaryFromReader);
      msg.setProvisionHostRequest(value);
      break;
    case 2:
      var value = new cloud_provisioning_requests_pb.LRDeprovisionHostRequest;
      reader.readMessage(value,cloud_provisioning_requests_pb.LRDeprovisionHostRequest.deserializeBinaryFromReader);
      msg.setDeprovisionHostRequest(value);
      break;
    case 3:
      var value = new cloud_provisioning_requests_pb.LRGetProvisioningDataRequest;
      reader.readMessage(value,cloud_provisioning_requests_pb.LRGetProvisioningDataRequest.deserializeBinaryFromReader);
      msg.setGetProvisioningDataRequest(value);
      break;
    case 4:
      var value = new cloud_provisioning_requests_pb.LRSetCloudConnectionStateRequest;
      reader.readMessage(value,cloud_provisioning_requests_pb.LRSetCloudConnectionStateRequest.deserializeBinaryFromReader);
      msg.setSetCloudConnectionStateRequest(value);
      break;
    case 5:
      var value = new cloud_device_requests_pb.LRCheckForProductUpdateRequest;
      reader.readMessage(value,cloud_device_requests_pb.LRCheckForProductUpdateRequest.deserializeBinaryFromReader);
      msg.setCheckForProductUpdateRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.LRRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.LRRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.LRRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LRRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvisionHostRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cloud_provisioning_requests_pb.LRProvisionHostRequest.serializeBinaryToWriter
    );
  }
  f = message.getDeprovisionHostRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cloud_provisioning_requests_pb.LRDeprovisionHostRequest.serializeBinaryToWriter
    );
  }
  f = message.getGetProvisioningDataRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cloud_provisioning_requests_pb.LRGetProvisioningDataRequest.serializeBinaryToWriter
    );
  }
  f = message.getSetCloudConnectionStateRequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cloud_provisioning_requests_pb.LRSetCloudConnectionStateRequest.serializeBinaryToWriter
    );
  }
  f = message.getCheckForProductUpdateRequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cloud_device_requests_pb.LRCheckForProductUpdateRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional LRProvisionHostRequest provision_host_request = 1;
 * @return {?proto.logi.proto.LRProvisionHostRequest}
 */
proto.logi.proto.LRRequest.prototype.getProvisionHostRequest = function() {
  return /** @type{?proto.logi.proto.LRProvisionHostRequest} */ (
    jspb.Message.getWrapperField(this, cloud_provisioning_requests_pb.LRProvisionHostRequest, 1));
};


/** @param {?proto.logi.proto.LRProvisionHostRequest|undefined} value */
proto.logi.proto.LRRequest.prototype.setProvisionHostRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.logi.proto.LRRequest.oneofGroups_[0], value);
};


proto.logi.proto.LRRequest.prototype.clearProvisionHostRequest = function() {
  this.setProvisionHostRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LRRequest.prototype.hasProvisionHostRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LRDeprovisionHostRequest deprovision_host_request = 2;
 * @return {?proto.logi.proto.LRDeprovisionHostRequest}
 */
proto.logi.proto.LRRequest.prototype.getDeprovisionHostRequest = function() {
  return /** @type{?proto.logi.proto.LRDeprovisionHostRequest} */ (
    jspb.Message.getWrapperField(this, cloud_provisioning_requests_pb.LRDeprovisionHostRequest, 2));
};


/** @param {?proto.logi.proto.LRDeprovisionHostRequest|undefined} value */
proto.logi.proto.LRRequest.prototype.setDeprovisionHostRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.logi.proto.LRRequest.oneofGroups_[0], value);
};


proto.logi.proto.LRRequest.prototype.clearDeprovisionHostRequest = function() {
  this.setDeprovisionHostRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LRRequest.prototype.hasDeprovisionHostRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LRGetProvisioningDataRequest get_provisioning_data_request = 3;
 * @return {?proto.logi.proto.LRGetProvisioningDataRequest}
 */
proto.logi.proto.LRRequest.prototype.getGetProvisioningDataRequest = function() {
  return /** @type{?proto.logi.proto.LRGetProvisioningDataRequest} */ (
    jspb.Message.getWrapperField(this, cloud_provisioning_requests_pb.LRGetProvisioningDataRequest, 3));
};


/** @param {?proto.logi.proto.LRGetProvisioningDataRequest|undefined} value */
proto.logi.proto.LRRequest.prototype.setGetProvisioningDataRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.logi.proto.LRRequest.oneofGroups_[0], value);
};


proto.logi.proto.LRRequest.prototype.clearGetProvisioningDataRequest = function() {
  this.setGetProvisioningDataRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LRRequest.prototype.hasGetProvisioningDataRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional LRSetCloudConnectionStateRequest set_cloud_connection_state_request = 4;
 * @return {?proto.logi.proto.LRSetCloudConnectionStateRequest}
 */
proto.logi.proto.LRRequest.prototype.getSetCloudConnectionStateRequest = function() {
  return /** @type{?proto.logi.proto.LRSetCloudConnectionStateRequest} */ (
    jspb.Message.getWrapperField(this, cloud_provisioning_requests_pb.LRSetCloudConnectionStateRequest, 4));
};


/** @param {?proto.logi.proto.LRSetCloudConnectionStateRequest|undefined} value */
proto.logi.proto.LRRequest.prototype.setSetCloudConnectionStateRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.logi.proto.LRRequest.oneofGroups_[0], value);
};


proto.logi.proto.LRRequest.prototype.clearSetCloudConnectionStateRequest = function() {
  this.setSetCloudConnectionStateRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LRRequest.prototype.hasSetCloudConnectionStateRequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional LRCheckForProductUpdateRequest check_for_product_update_request = 5;
 * @return {?proto.logi.proto.LRCheckForProductUpdateRequest}
 */
proto.logi.proto.LRRequest.prototype.getCheckForProductUpdateRequest = function() {
  return /** @type{?proto.logi.proto.LRCheckForProductUpdateRequest} */ (
    jspb.Message.getWrapperField(this, cloud_device_requests_pb.LRCheckForProductUpdateRequest, 5));
};


/** @param {?proto.logi.proto.LRCheckForProductUpdateRequest|undefined} value */
proto.logi.proto.LRRequest.prototype.setCheckForProductUpdateRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.logi.proto.LRRequest.oneofGroups_[0], value);
};


proto.logi.proto.LRRequest.prototype.clearCheckForProductUpdateRequest = function() {
  this.setCheckForProductUpdateRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LRRequest.prototype.hasCheckForProductUpdateRequest = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.LRResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.logi.proto.LRResponse.oneofGroups_);
};
goog.inherits(proto.logi.proto.LRResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.LRResponse.displayName = 'proto.logi.proto.LRResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.logi.proto.LRResponse.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.logi.proto.LRResponse.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  PROVISION_HOST_RESPONSE: 1,
  DEPROVISION_HOST_RESPONSE: 2,
  GET_PROVISIONING_DATA_RESPONSE: 3,
  SET_CLOUD_CONNECTION_STATE_RESPONSE: 4,
  CHECK_FOR_PRODUCT_UPDATE_RESPONSE: 5
};

/**
 * @return {proto.logi.proto.LRResponse.PayloadCase}
 */
proto.logi.proto.LRResponse.prototype.getPayloadCase = function() {
  return /** @type {proto.logi.proto.LRResponse.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.logi.proto.LRResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.LRResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.LRResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.LRResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LRResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    provisionHostResponse: (f = msg.getProvisionHostResponse()) && cloud_provisioning_requests_pb.LRProvisionHostResponse.toObject(includeInstance, f),
    deprovisionHostResponse: (f = msg.getDeprovisionHostResponse()) && cloud_provisioning_requests_pb.LRDeprovisionHostResponse.toObject(includeInstance, f),
    getProvisioningDataResponse: (f = msg.getGetProvisioningDataResponse()) && cloud_provisioning_requests_pb.LRGetProvisioningDataResponse.toObject(includeInstance, f),
    setCloudConnectionStateResponse: (f = msg.getSetCloudConnectionStateResponse()) && cloud_provisioning_requests_pb.LRSetCloudConnectionStateResponse.toObject(includeInstance, f),
    checkForProductUpdateResponse: (f = msg.getCheckForProductUpdateResponse()) && cloud_device_requests_pb.LRCheckForProductUpdateResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.LRResponse}
 */
proto.logi.proto.LRResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.LRResponse;
  return proto.logi.proto.LRResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.LRResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.LRResponse}
 */
proto.logi.proto.LRResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cloud_provisioning_requests_pb.LRProvisionHostResponse;
      reader.readMessage(value,cloud_provisioning_requests_pb.LRProvisionHostResponse.deserializeBinaryFromReader);
      msg.setProvisionHostResponse(value);
      break;
    case 2:
      var value = new cloud_provisioning_requests_pb.LRDeprovisionHostResponse;
      reader.readMessage(value,cloud_provisioning_requests_pb.LRDeprovisionHostResponse.deserializeBinaryFromReader);
      msg.setDeprovisionHostResponse(value);
      break;
    case 3:
      var value = new cloud_provisioning_requests_pb.LRGetProvisioningDataResponse;
      reader.readMessage(value,cloud_provisioning_requests_pb.LRGetProvisioningDataResponse.deserializeBinaryFromReader);
      msg.setGetProvisioningDataResponse(value);
      break;
    case 4:
      var value = new cloud_provisioning_requests_pb.LRSetCloudConnectionStateResponse;
      reader.readMessage(value,cloud_provisioning_requests_pb.LRSetCloudConnectionStateResponse.deserializeBinaryFromReader);
      msg.setSetCloudConnectionStateResponse(value);
      break;
    case 5:
      var value = new cloud_device_requests_pb.LRCheckForProductUpdateResponse;
      reader.readMessage(value,cloud_device_requests_pb.LRCheckForProductUpdateResponse.deserializeBinaryFromReader);
      msg.setCheckForProductUpdateResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.LRResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.LRResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.LRResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LRResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvisionHostResponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cloud_provisioning_requests_pb.LRProvisionHostResponse.serializeBinaryToWriter
    );
  }
  f = message.getDeprovisionHostResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cloud_provisioning_requests_pb.LRDeprovisionHostResponse.serializeBinaryToWriter
    );
  }
  f = message.getGetProvisioningDataResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cloud_provisioning_requests_pb.LRGetProvisioningDataResponse.serializeBinaryToWriter
    );
  }
  f = message.getSetCloudConnectionStateResponse();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cloud_provisioning_requests_pb.LRSetCloudConnectionStateResponse.serializeBinaryToWriter
    );
  }
  f = message.getCheckForProductUpdateResponse();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cloud_device_requests_pb.LRCheckForProductUpdateResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional LRProvisionHostResponse provision_host_response = 1;
 * @return {?proto.logi.proto.LRProvisionHostResponse}
 */
proto.logi.proto.LRResponse.prototype.getProvisionHostResponse = function() {
  return /** @type{?proto.logi.proto.LRProvisionHostResponse} */ (
    jspb.Message.getWrapperField(this, cloud_provisioning_requests_pb.LRProvisionHostResponse, 1));
};


/** @param {?proto.logi.proto.LRProvisionHostResponse|undefined} value */
proto.logi.proto.LRResponse.prototype.setProvisionHostResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.logi.proto.LRResponse.oneofGroups_[0], value);
};


proto.logi.proto.LRResponse.prototype.clearProvisionHostResponse = function() {
  this.setProvisionHostResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LRResponse.prototype.hasProvisionHostResponse = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LRDeprovisionHostResponse deprovision_host_response = 2;
 * @return {?proto.logi.proto.LRDeprovisionHostResponse}
 */
proto.logi.proto.LRResponse.prototype.getDeprovisionHostResponse = function() {
  return /** @type{?proto.logi.proto.LRDeprovisionHostResponse} */ (
    jspb.Message.getWrapperField(this, cloud_provisioning_requests_pb.LRDeprovisionHostResponse, 2));
};


/** @param {?proto.logi.proto.LRDeprovisionHostResponse|undefined} value */
proto.logi.proto.LRResponse.prototype.setDeprovisionHostResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.logi.proto.LRResponse.oneofGroups_[0], value);
};


proto.logi.proto.LRResponse.prototype.clearDeprovisionHostResponse = function() {
  this.setDeprovisionHostResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LRResponse.prototype.hasDeprovisionHostResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LRGetProvisioningDataResponse get_provisioning_data_response = 3;
 * @return {?proto.logi.proto.LRGetProvisioningDataResponse}
 */
proto.logi.proto.LRResponse.prototype.getGetProvisioningDataResponse = function() {
  return /** @type{?proto.logi.proto.LRGetProvisioningDataResponse} */ (
    jspb.Message.getWrapperField(this, cloud_provisioning_requests_pb.LRGetProvisioningDataResponse, 3));
};


/** @param {?proto.logi.proto.LRGetProvisioningDataResponse|undefined} value */
proto.logi.proto.LRResponse.prototype.setGetProvisioningDataResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.logi.proto.LRResponse.oneofGroups_[0], value);
};


proto.logi.proto.LRResponse.prototype.clearGetProvisioningDataResponse = function() {
  this.setGetProvisioningDataResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LRResponse.prototype.hasGetProvisioningDataResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional LRSetCloudConnectionStateResponse set_cloud_connection_state_response = 4;
 * @return {?proto.logi.proto.LRSetCloudConnectionStateResponse}
 */
proto.logi.proto.LRResponse.prototype.getSetCloudConnectionStateResponse = function() {
  return /** @type{?proto.logi.proto.LRSetCloudConnectionStateResponse} */ (
    jspb.Message.getWrapperField(this, cloud_provisioning_requests_pb.LRSetCloudConnectionStateResponse, 4));
};


/** @param {?proto.logi.proto.LRSetCloudConnectionStateResponse|undefined} value */
proto.logi.proto.LRResponse.prototype.setSetCloudConnectionStateResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.logi.proto.LRResponse.oneofGroups_[0], value);
};


proto.logi.proto.LRResponse.prototype.clearSetCloudConnectionStateResponse = function() {
  this.setSetCloudConnectionStateResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LRResponse.prototype.hasSetCloudConnectionStateResponse = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional LRCheckForProductUpdateResponse check_for_product_update_response = 5;
 * @return {?proto.logi.proto.LRCheckForProductUpdateResponse}
 */
proto.logi.proto.LRResponse.prototype.getCheckForProductUpdateResponse = function() {
  return /** @type{?proto.logi.proto.LRCheckForProductUpdateResponse} */ (
    jspb.Message.getWrapperField(this, cloud_device_requests_pb.LRCheckForProductUpdateResponse, 5));
};


/** @param {?proto.logi.proto.LRCheckForProductUpdateResponse|undefined} value */
proto.logi.proto.LRResponse.prototype.setCheckForProductUpdateResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.logi.proto.LRResponse.oneofGroups_[0], value);
};


proto.logi.proto.LRResponse.prototype.clearCheckForProductUpdateResponse = function() {
  this.setCheckForProductUpdateResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LRResponse.prototype.hasCheckForProductUpdateResponse = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.LREvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.logi.proto.LREvent.oneofGroups_);
};
goog.inherits(proto.logi.proto.LREvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.LREvent.displayName = 'proto.logi.proto.LREvent';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.logi.proto.LREvent.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.logi.proto.LREvent.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  PROVISIONING_DATA_AVAILABLE_EVENT: 1,
  PRODUCT_UPDATED_EVENT: 2
};

/**
 * @return {proto.logi.proto.LREvent.PayloadCase}
 */
proto.logi.proto.LREvent.prototype.getPayloadCase = function() {
  return /** @type {proto.logi.proto.LREvent.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.logi.proto.LREvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.LREvent.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.LREvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.LREvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LREvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    provisioningDataAvailableEvent: (f = msg.getProvisioningDataAvailableEvent()) && cloud_provisioning_events_pb.LRProvisioningDataAvailableEvent.toObject(includeInstance, f),
    productUpdatedEvent: (f = msg.getProductUpdatedEvent()) && cloud_device_events_pb.LRProductUpdatedEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.LREvent}
 */
proto.logi.proto.LREvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.LREvent;
  return proto.logi.proto.LREvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.LREvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.LREvent}
 */
proto.logi.proto.LREvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cloud_provisioning_events_pb.LRProvisioningDataAvailableEvent;
      reader.readMessage(value,cloud_provisioning_events_pb.LRProvisioningDataAvailableEvent.deserializeBinaryFromReader);
      msg.setProvisioningDataAvailableEvent(value);
      break;
    case 2:
      var value = new cloud_device_events_pb.LRProductUpdatedEvent;
      reader.readMessage(value,cloud_device_events_pb.LRProductUpdatedEvent.deserializeBinaryFromReader);
      msg.setProductUpdatedEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.LREvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.LREvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.LREvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LREvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvisioningDataAvailableEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cloud_provisioning_events_pb.LRProvisioningDataAvailableEvent.serializeBinaryToWriter
    );
  }
  f = message.getProductUpdatedEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cloud_device_events_pb.LRProductUpdatedEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional LRProvisioningDataAvailableEvent provisioning_data_available_event = 1;
 * @return {?proto.logi.proto.LRProvisioningDataAvailableEvent}
 */
proto.logi.proto.LREvent.prototype.getProvisioningDataAvailableEvent = function() {
  return /** @type{?proto.logi.proto.LRProvisioningDataAvailableEvent} */ (
    jspb.Message.getWrapperField(this, cloud_provisioning_events_pb.LRProvisioningDataAvailableEvent, 1));
};


/** @param {?proto.logi.proto.LRProvisioningDataAvailableEvent|undefined} value */
proto.logi.proto.LREvent.prototype.setProvisioningDataAvailableEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.logi.proto.LREvent.oneofGroups_[0], value);
};


proto.logi.proto.LREvent.prototype.clearProvisioningDataAvailableEvent = function() {
  this.setProvisioningDataAvailableEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LREvent.prototype.hasProvisioningDataAvailableEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LRProductUpdatedEvent product_updated_event = 2;
 * @return {?proto.logi.proto.LRProductUpdatedEvent}
 */
proto.logi.proto.LREvent.prototype.getProductUpdatedEvent = function() {
  return /** @type{?proto.logi.proto.LRProductUpdatedEvent} */ (
    jspb.Message.getWrapperField(this, cloud_device_events_pb.LRProductUpdatedEvent, 2));
};


/** @param {?proto.logi.proto.LRProductUpdatedEvent|undefined} value */
proto.logi.proto.LREvent.prototype.setProductUpdatedEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.logi.proto.LREvent.oneofGroups_[0], value);
};


proto.logi.proto.LREvent.prototype.clearProductUpdatedEvent = function() {
  this.setProductUpdatedEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LREvent.prototype.hasProductUpdatedEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.logi.proto);
