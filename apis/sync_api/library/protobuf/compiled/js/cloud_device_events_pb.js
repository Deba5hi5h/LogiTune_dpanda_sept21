/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var cloud_device_structures_pb = require('./cloud_device_structures_pb.js');
goog.exportSymbol('proto.logi.proto.LRProductUpdatedEvent', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.LRProductUpdatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.logi.proto.LRProductUpdatedEvent.repeatedFields_, null);
};
goog.inherits(proto.logi.proto.LRProductUpdatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.LRProductUpdatedEvent.displayName = 'proto.logi.proto.LRProductUpdatedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.logi.proto.LRProductUpdatedEvent.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.LRProductUpdatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.LRProductUpdatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.LRProductUpdatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LRProductUpdatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgInfoTimestamp: jspb.Message.getFieldWithDefault(msg, 1, ""),
    orgPolicyTimestamp: jspb.Message.getFieldWithDefault(msg, 2, ""),
    roomInfoTimestamp: jspb.Message.getFieldWithDefault(msg, 3, ""),
    roomPolicyTimestamp: jspb.Message.getFieldWithDefault(msg, 4, ""),
    snapshotsList: jspb.Message.toObjectList(msg.getSnapshotsList(),
    cloud_device_structures_pb.LRProductSnapshot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.LRProductUpdatedEvent}
 */
proto.logi.proto.LRProductUpdatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.LRProductUpdatedEvent;
  return proto.logi.proto.LRProductUpdatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.LRProductUpdatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.LRProductUpdatedEvent}
 */
proto.logi.proto.LRProductUpdatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgInfoTimestamp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgPolicyTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomInfoTimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomPolicyTimestamp(value);
      break;
    case 5:
      var value = new cloud_device_structures_pb.LRProductSnapshot;
      reader.readMessage(value,cloud_device_structures_pb.LRProductSnapshot.deserializeBinaryFromReader);
      msg.addSnapshots(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.LRProductUpdatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.LRProductUpdatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.LRProductUpdatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LRProductUpdatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgInfoTimestamp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrgPolicyTimestamp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRoomInfoTimestamp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRoomPolicyTimestamp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSnapshotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      cloud_device_structures_pb.LRProductSnapshot.serializeBinaryToWriter
    );
  }
};


/**
 * optional string org_info_timestamp = 1;
 * @return {string}
 */
proto.logi.proto.LRProductUpdatedEvent.prototype.getOrgInfoTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.logi.proto.LRProductUpdatedEvent.prototype.setOrgInfoTimestamp = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string org_policy_timestamp = 2;
 * @return {string}
 */
proto.logi.proto.LRProductUpdatedEvent.prototype.getOrgPolicyTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.logi.proto.LRProductUpdatedEvent.prototype.setOrgPolicyTimestamp = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string room_info_timestamp = 3;
 * @return {string}
 */
proto.logi.proto.LRProductUpdatedEvent.prototype.getRoomInfoTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.logi.proto.LRProductUpdatedEvent.prototype.setRoomInfoTimestamp = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string room_policy_timestamp = 4;
 * @return {string}
 */
proto.logi.proto.LRProductUpdatedEvent.prototype.getRoomPolicyTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.logi.proto.LRProductUpdatedEvent.prototype.setRoomPolicyTimestamp = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated LRProductSnapshot snapshots = 5;
 * @return {!Array<!proto.logi.proto.LRProductSnapshot>}
 */
proto.logi.proto.LRProductUpdatedEvent.prototype.getSnapshotsList = function() {
  return /** @type{!Array<!proto.logi.proto.LRProductSnapshot>} */ (
    jspb.Message.getRepeatedWrapperField(this, cloud_device_structures_pb.LRProductSnapshot, 5));
};


/** @param {!Array<!proto.logi.proto.LRProductSnapshot>} value */
proto.logi.proto.LRProductUpdatedEvent.prototype.setSnapshotsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.logi.proto.LRProductSnapshot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.logi.proto.LRProductSnapshot}
 */
proto.logi.proto.LRProductUpdatedEvent.prototype.addSnapshots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.logi.proto.LRProductSnapshot, opt_index);
};


proto.logi.proto.LRProductUpdatedEvent.prototype.clearSnapshotsList = function() {
  this.setSnapshotsList([]);
};


goog.object.extend(exports, proto.logi.proto);
