/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
var configuration_structures_pb = require('./configuration_structures_pb.js');
goog.exportSymbol('proto.logi.proto.GetHostInformationRequest', null, global);
goog.exportSymbol('proto.logi.proto.GetHostInformationResponse', null, global);
goog.exportSymbol('proto.logi.proto.GetLogiSyncConfigurationRequest', null, global);
goog.exportSymbol('proto.logi.proto.GetLogiSyncConfigurationResponse', null, global);
goog.exportSymbol('proto.logi.proto.LogiSyncConfigurationRequest', null, global);
goog.exportSymbol('proto.logi.proto.LogiSyncConfigurationResponse', null, global);
goog.exportSymbol('proto.logi.proto.SetLogiSyncConfigurationRequest', null, global);
goog.exportSymbol('proto.logi.proto.SetLogiSyncConfigurationResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.GetLogiSyncConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.logi.proto.GetLogiSyncConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.GetLogiSyncConfigurationRequest.displayName = 'proto.logi.proto.GetLogiSyncConfigurationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.GetLogiSyncConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.GetLogiSyncConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.GetLogiSyncConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.GetLogiSyncConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    reserved: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.GetLogiSyncConfigurationRequest}
 */
proto.logi.proto.GetLogiSyncConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.GetLogiSyncConfigurationRequest;
  return proto.logi.proto.GetLogiSyncConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.GetLogiSyncConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.GetLogiSyncConfigurationRequest}
 */
proto.logi.proto.GetLogiSyncConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.GetLogiSyncConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.GetLogiSyncConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.GetLogiSyncConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.GetLogiSyncConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReserved();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool reserved = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.logi.proto.GetLogiSyncConfigurationRequest.prototype.getReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.logi.proto.GetLogiSyncConfigurationRequest.prototype.setReserved = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.GetLogiSyncConfigurationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.logi.proto.GetLogiSyncConfigurationResponse.repeatedFields_, null);
};
goog.inherits(proto.logi.proto.GetLogiSyncConfigurationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.GetLogiSyncConfigurationResponse.displayName = 'proto.logi.proto.GetLogiSyncConfigurationResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.logi.proto.GetLogiSyncConfigurationResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.GetLogiSyncConfigurationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.GetLogiSyncConfigurationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.GetLogiSyncConfigurationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.GetLogiSyncConfigurationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    common_pb.Error.toObject, includeInstance),
    configuration: (f = msg.getConfiguration()) && configuration_structures_pb.LogiSyncConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.GetLogiSyncConfigurationResponse}
 */
proto.logi.proto.GetLogiSyncConfigurationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.GetLogiSyncConfigurationResponse;
  return proto.logi.proto.GetLogiSyncConfigurationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.GetLogiSyncConfigurationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.GetLogiSyncConfigurationResponse}
 */
proto.logi.proto.GetLogiSyncConfigurationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 2:
      var value = new configuration_structures_pb.LogiSyncConfiguration;
      reader.readMessage(value,configuration_structures_pb.LogiSyncConfiguration.deserializeBinaryFromReader);
      msg.setConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.GetLogiSyncConfigurationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.GetLogiSyncConfigurationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.GetLogiSyncConfigurationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.GetLogiSyncConfigurationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getConfiguration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      configuration_structures_pb.LogiSyncConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Error errors = 1;
 * @return {!Array<!proto.logi.proto.Error>}
 */
proto.logi.proto.GetLogiSyncConfigurationResponse.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.logi.proto.Error>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Error, 1));
};


/** @param {!Array<!proto.logi.proto.Error>} value */
proto.logi.proto.GetLogiSyncConfigurationResponse.prototype.setErrorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.logi.proto.Error=} opt_value
 * @param {number=} opt_index
 * @return {!proto.logi.proto.Error}
 */
proto.logi.proto.GetLogiSyncConfigurationResponse.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.logi.proto.Error, opt_index);
};


proto.logi.proto.GetLogiSyncConfigurationResponse.prototype.clearErrorsList = function() {
  this.setErrorsList([]);
};


/**
 * optional LogiSyncConfiguration configuration = 2;
 * @return {?proto.logi.proto.LogiSyncConfiguration}
 */
proto.logi.proto.GetLogiSyncConfigurationResponse.prototype.getConfiguration = function() {
  return /** @type{?proto.logi.proto.LogiSyncConfiguration} */ (
    jspb.Message.getWrapperField(this, configuration_structures_pb.LogiSyncConfiguration, 2));
};


/** @param {?proto.logi.proto.LogiSyncConfiguration|undefined} value */
proto.logi.proto.GetLogiSyncConfigurationResponse.prototype.setConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.logi.proto.GetLogiSyncConfigurationResponse.prototype.clearConfiguration = function() {
  this.setConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.GetLogiSyncConfigurationResponse.prototype.hasConfiguration = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.GetHostInformationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.logi.proto.GetHostInformationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.GetHostInformationRequest.displayName = 'proto.logi.proto.GetHostInformationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.GetHostInformationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.GetHostInformationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.GetHostInformationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.GetHostInformationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    reserved: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.GetHostInformationRequest}
 */
proto.logi.proto.GetHostInformationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.GetHostInformationRequest;
  return proto.logi.proto.GetHostInformationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.GetHostInformationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.GetHostInformationRequest}
 */
proto.logi.proto.GetHostInformationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.GetHostInformationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.GetHostInformationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.GetHostInformationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.GetHostInformationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReserved();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool reserved = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.logi.proto.GetHostInformationRequest.prototype.getReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.logi.proto.GetHostInformationRequest.prototype.setReserved = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.GetHostInformationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.logi.proto.GetHostInformationResponse.repeatedFields_, null);
};
goog.inherits(proto.logi.proto.GetHostInformationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.GetHostInformationResponse.displayName = 'proto.logi.proto.GetHostInformationResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.logi.proto.GetHostInformationResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.GetHostInformationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.GetHostInformationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.GetHostInformationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.GetHostInformationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    common_pb.Error.toObject, includeInstance),
    information: (f = msg.getInformation()) && configuration_structures_pb.HostInformation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.GetHostInformationResponse}
 */
proto.logi.proto.GetHostInformationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.GetHostInformationResponse;
  return proto.logi.proto.GetHostInformationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.GetHostInformationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.GetHostInformationResponse}
 */
proto.logi.proto.GetHostInformationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 2:
      var value = new configuration_structures_pb.HostInformation;
      reader.readMessage(value,configuration_structures_pb.HostInformation.deserializeBinaryFromReader);
      msg.setInformation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.GetHostInformationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.GetHostInformationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.GetHostInformationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.GetHostInformationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getInformation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      configuration_structures_pb.HostInformation.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Error errors = 1;
 * @return {!Array<!proto.logi.proto.Error>}
 */
proto.logi.proto.GetHostInformationResponse.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.logi.proto.Error>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Error, 1));
};


/** @param {!Array<!proto.logi.proto.Error>} value */
proto.logi.proto.GetHostInformationResponse.prototype.setErrorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.logi.proto.Error=} opt_value
 * @param {number=} opt_index
 * @return {!proto.logi.proto.Error}
 */
proto.logi.proto.GetHostInformationResponse.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.logi.proto.Error, opt_index);
};


proto.logi.proto.GetHostInformationResponse.prototype.clearErrorsList = function() {
  this.setErrorsList([]);
};


/**
 * optional HostInformation information = 2;
 * @return {?proto.logi.proto.HostInformation}
 */
proto.logi.proto.GetHostInformationResponse.prototype.getInformation = function() {
  return /** @type{?proto.logi.proto.HostInformation} */ (
    jspb.Message.getWrapperField(this, configuration_structures_pb.HostInformation, 2));
};


/** @param {?proto.logi.proto.HostInformation|undefined} value */
proto.logi.proto.GetHostInformationResponse.prototype.setInformation = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.logi.proto.GetHostInformationResponse.prototype.clearInformation = function() {
  this.setInformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.GetHostInformationResponse.prototype.hasInformation = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.SetLogiSyncConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.logi.proto.SetLogiSyncConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.SetLogiSyncConfigurationRequest.displayName = 'proto.logi.proto.SetLogiSyncConfigurationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.SetLogiSyncConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.SetLogiSyncConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.SetLogiSyncConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.SetLogiSyncConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    configuration: (f = msg.getConfiguration()) && configuration_structures_pb.LogiSyncConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.SetLogiSyncConfigurationRequest}
 */
proto.logi.proto.SetLogiSyncConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.SetLogiSyncConfigurationRequest;
  return proto.logi.proto.SetLogiSyncConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.SetLogiSyncConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.SetLogiSyncConfigurationRequest}
 */
proto.logi.proto.SetLogiSyncConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new configuration_structures_pb.LogiSyncConfiguration;
      reader.readMessage(value,configuration_structures_pb.LogiSyncConfiguration.deserializeBinaryFromReader);
      msg.setConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.SetLogiSyncConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.SetLogiSyncConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.SetLogiSyncConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.SetLogiSyncConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfiguration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      configuration_structures_pb.LogiSyncConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional LogiSyncConfiguration configuration = 1;
 * @return {?proto.logi.proto.LogiSyncConfiguration}
 */
proto.logi.proto.SetLogiSyncConfigurationRequest.prototype.getConfiguration = function() {
  return /** @type{?proto.logi.proto.LogiSyncConfiguration} */ (
    jspb.Message.getWrapperField(this, configuration_structures_pb.LogiSyncConfiguration, 1));
};


/** @param {?proto.logi.proto.LogiSyncConfiguration|undefined} value */
proto.logi.proto.SetLogiSyncConfigurationRequest.prototype.setConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.logi.proto.SetLogiSyncConfigurationRequest.prototype.clearConfiguration = function() {
  this.setConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.SetLogiSyncConfigurationRequest.prototype.hasConfiguration = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.SetLogiSyncConfigurationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.logi.proto.SetLogiSyncConfigurationResponse.repeatedFields_, null);
};
goog.inherits(proto.logi.proto.SetLogiSyncConfigurationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.SetLogiSyncConfigurationResponse.displayName = 'proto.logi.proto.SetLogiSyncConfigurationResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.logi.proto.SetLogiSyncConfigurationResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.SetLogiSyncConfigurationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.SetLogiSyncConfigurationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.SetLogiSyncConfigurationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.SetLogiSyncConfigurationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    common_pb.Error.toObject, includeInstance),
    configuration: (f = msg.getConfiguration()) && configuration_structures_pb.LogiSyncConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.SetLogiSyncConfigurationResponse}
 */
proto.logi.proto.SetLogiSyncConfigurationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.SetLogiSyncConfigurationResponse;
  return proto.logi.proto.SetLogiSyncConfigurationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.SetLogiSyncConfigurationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.SetLogiSyncConfigurationResponse}
 */
proto.logi.proto.SetLogiSyncConfigurationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 2:
      var value = new configuration_structures_pb.LogiSyncConfiguration;
      reader.readMessage(value,configuration_structures_pb.LogiSyncConfiguration.deserializeBinaryFromReader);
      msg.setConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.SetLogiSyncConfigurationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.SetLogiSyncConfigurationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.SetLogiSyncConfigurationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.SetLogiSyncConfigurationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getConfiguration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      configuration_structures_pb.LogiSyncConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Error errors = 1;
 * @return {!Array<!proto.logi.proto.Error>}
 */
proto.logi.proto.SetLogiSyncConfigurationResponse.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.logi.proto.Error>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Error, 1));
};


/** @param {!Array<!proto.logi.proto.Error>} value */
proto.logi.proto.SetLogiSyncConfigurationResponse.prototype.setErrorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.logi.proto.Error=} opt_value
 * @param {number=} opt_index
 * @return {!proto.logi.proto.Error}
 */
proto.logi.proto.SetLogiSyncConfigurationResponse.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.logi.proto.Error, opt_index);
};


proto.logi.proto.SetLogiSyncConfigurationResponse.prototype.clearErrorsList = function() {
  this.setErrorsList([]);
};


/**
 * optional LogiSyncConfiguration configuration = 2;
 * @return {?proto.logi.proto.LogiSyncConfiguration}
 */
proto.logi.proto.SetLogiSyncConfigurationResponse.prototype.getConfiguration = function() {
  return /** @type{?proto.logi.proto.LogiSyncConfiguration} */ (
    jspb.Message.getWrapperField(this, configuration_structures_pb.LogiSyncConfiguration, 2));
};


/** @param {?proto.logi.proto.LogiSyncConfiguration|undefined} value */
proto.logi.proto.SetLogiSyncConfigurationResponse.prototype.setConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.logi.proto.SetLogiSyncConfigurationResponse.prototype.clearConfiguration = function() {
  this.setConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.SetLogiSyncConfigurationResponse.prototype.hasConfiguration = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.LogiSyncConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.logi.proto.LogiSyncConfigurationRequest.oneofGroups_);
};
goog.inherits(proto.logi.proto.LogiSyncConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.LogiSyncConfigurationRequest.displayName = 'proto.logi.proto.LogiSyncConfigurationRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.logi.proto.LogiSyncConfigurationRequest.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.logi.proto.LogiSyncConfigurationRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  GET_LOGI_SYNC_CONFIGURATION_REQUEST: 1,
  GET_HOST_INFORMATION_REQUEST: 2,
  SET_LOGI_SYNC_CONFIGURATION_REQUEST: 3
};

/**
 * @return {proto.logi.proto.LogiSyncConfigurationRequest.RequestCase}
 */
proto.logi.proto.LogiSyncConfigurationRequest.prototype.getRequestCase = function() {
  return /** @type {proto.logi.proto.LogiSyncConfigurationRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.logi.proto.LogiSyncConfigurationRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.LogiSyncConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.LogiSyncConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.LogiSyncConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LogiSyncConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    getLogiSyncConfigurationRequest: (f = msg.getGetLogiSyncConfigurationRequest()) && proto.logi.proto.GetLogiSyncConfigurationRequest.toObject(includeInstance, f),
    getHostInformationRequest: (f = msg.getGetHostInformationRequest()) && proto.logi.proto.GetHostInformationRequest.toObject(includeInstance, f),
    setLogiSyncConfigurationRequest: (f = msg.getSetLogiSyncConfigurationRequest()) && proto.logi.proto.SetLogiSyncConfigurationRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.LogiSyncConfigurationRequest}
 */
proto.logi.proto.LogiSyncConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.LogiSyncConfigurationRequest;
  return proto.logi.proto.LogiSyncConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.LogiSyncConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.LogiSyncConfigurationRequest}
 */
proto.logi.proto.LogiSyncConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.logi.proto.GetLogiSyncConfigurationRequest;
      reader.readMessage(value,proto.logi.proto.GetLogiSyncConfigurationRequest.deserializeBinaryFromReader);
      msg.setGetLogiSyncConfigurationRequest(value);
      break;
    case 2:
      var value = new proto.logi.proto.GetHostInformationRequest;
      reader.readMessage(value,proto.logi.proto.GetHostInformationRequest.deserializeBinaryFromReader);
      msg.setGetHostInformationRequest(value);
      break;
    case 3:
      var value = new proto.logi.proto.SetLogiSyncConfigurationRequest;
      reader.readMessage(value,proto.logi.proto.SetLogiSyncConfigurationRequest.deserializeBinaryFromReader);
      msg.setSetLogiSyncConfigurationRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.LogiSyncConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.LogiSyncConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.LogiSyncConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LogiSyncConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGetLogiSyncConfigurationRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.logi.proto.GetLogiSyncConfigurationRequest.serializeBinaryToWriter
    );
  }
  f = message.getGetHostInformationRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.logi.proto.GetHostInformationRequest.serializeBinaryToWriter
    );
  }
  f = message.getSetLogiSyncConfigurationRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.logi.proto.SetLogiSyncConfigurationRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional GetLogiSyncConfigurationRequest get_logi_sync_configuration_request = 1;
 * @return {?proto.logi.proto.GetLogiSyncConfigurationRequest}
 */
proto.logi.proto.LogiSyncConfigurationRequest.prototype.getGetLogiSyncConfigurationRequest = function() {
  return /** @type{?proto.logi.proto.GetLogiSyncConfigurationRequest} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.GetLogiSyncConfigurationRequest, 1));
};


/** @param {?proto.logi.proto.GetLogiSyncConfigurationRequest|undefined} value */
proto.logi.proto.LogiSyncConfigurationRequest.prototype.setGetLogiSyncConfigurationRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.logi.proto.LogiSyncConfigurationRequest.oneofGroups_[0], value);
};


proto.logi.proto.LogiSyncConfigurationRequest.prototype.clearGetLogiSyncConfigurationRequest = function() {
  this.setGetLogiSyncConfigurationRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LogiSyncConfigurationRequest.prototype.hasGetLogiSyncConfigurationRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GetHostInformationRequest get_host_information_request = 2;
 * @return {?proto.logi.proto.GetHostInformationRequest}
 */
proto.logi.proto.LogiSyncConfigurationRequest.prototype.getGetHostInformationRequest = function() {
  return /** @type{?proto.logi.proto.GetHostInformationRequest} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.GetHostInformationRequest, 2));
};


/** @param {?proto.logi.proto.GetHostInformationRequest|undefined} value */
proto.logi.proto.LogiSyncConfigurationRequest.prototype.setGetHostInformationRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.logi.proto.LogiSyncConfigurationRequest.oneofGroups_[0], value);
};


proto.logi.proto.LogiSyncConfigurationRequest.prototype.clearGetHostInformationRequest = function() {
  this.setGetHostInformationRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LogiSyncConfigurationRequest.prototype.hasGetHostInformationRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SetLogiSyncConfigurationRequest set_logi_sync_configuration_request = 3;
 * @return {?proto.logi.proto.SetLogiSyncConfigurationRequest}
 */
proto.logi.proto.LogiSyncConfigurationRequest.prototype.getSetLogiSyncConfigurationRequest = function() {
  return /** @type{?proto.logi.proto.SetLogiSyncConfigurationRequest} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.SetLogiSyncConfigurationRequest, 3));
};


/** @param {?proto.logi.proto.SetLogiSyncConfigurationRequest|undefined} value */
proto.logi.proto.LogiSyncConfigurationRequest.prototype.setSetLogiSyncConfigurationRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.logi.proto.LogiSyncConfigurationRequest.oneofGroups_[0], value);
};


proto.logi.proto.LogiSyncConfigurationRequest.prototype.clearSetLogiSyncConfigurationRequest = function() {
  this.setSetLogiSyncConfigurationRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LogiSyncConfigurationRequest.prototype.hasSetLogiSyncConfigurationRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.LogiSyncConfigurationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.logi.proto.LogiSyncConfigurationResponse.oneofGroups_);
};
goog.inherits(proto.logi.proto.LogiSyncConfigurationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.LogiSyncConfigurationResponse.displayName = 'proto.logi.proto.LogiSyncConfigurationResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.logi.proto.LogiSyncConfigurationResponse.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.logi.proto.LogiSyncConfigurationResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  GET_LOGI_SYNC_CONFIGURATION_RESPONSE: 2,
  GET_HOST_INFORMATION_RESPONSE: 3,
  SET_LOGI_SYNC_CONFIGURATION_RESPONSE: 4
};

/**
 * @return {proto.logi.proto.LogiSyncConfigurationResponse.ResponseCase}
 */
proto.logi.proto.LogiSyncConfigurationResponse.prototype.getResponseCase = function() {
  return /** @type {proto.logi.proto.LogiSyncConfigurationResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.logi.proto.LogiSyncConfigurationResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.LogiSyncConfigurationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.LogiSyncConfigurationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.LogiSyncConfigurationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LogiSyncConfigurationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    getLogiSyncConfigurationResponse: (f = msg.getGetLogiSyncConfigurationResponse()) && proto.logi.proto.GetLogiSyncConfigurationResponse.toObject(includeInstance, f),
    getHostInformationResponse: (f = msg.getGetHostInformationResponse()) && proto.logi.proto.GetHostInformationResponse.toObject(includeInstance, f),
    setLogiSyncConfigurationResponse: (f = msg.getSetLogiSyncConfigurationResponse()) && proto.logi.proto.SetLogiSyncConfigurationResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.LogiSyncConfigurationResponse}
 */
proto.logi.proto.LogiSyncConfigurationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.LogiSyncConfigurationResponse;
  return proto.logi.proto.LogiSyncConfigurationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.LogiSyncConfigurationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.LogiSyncConfigurationResponse}
 */
proto.logi.proto.LogiSyncConfigurationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.logi.proto.GetLogiSyncConfigurationResponse;
      reader.readMessage(value,proto.logi.proto.GetLogiSyncConfigurationResponse.deserializeBinaryFromReader);
      msg.setGetLogiSyncConfigurationResponse(value);
      break;
    case 3:
      var value = new proto.logi.proto.GetHostInformationResponse;
      reader.readMessage(value,proto.logi.proto.GetHostInformationResponse.deserializeBinaryFromReader);
      msg.setGetHostInformationResponse(value);
      break;
    case 4:
      var value = new proto.logi.proto.SetLogiSyncConfigurationResponse;
      reader.readMessage(value,proto.logi.proto.SetLogiSyncConfigurationResponse.deserializeBinaryFromReader);
      msg.setSetLogiSyncConfigurationResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.LogiSyncConfigurationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.LogiSyncConfigurationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.LogiSyncConfigurationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.LogiSyncConfigurationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGetLogiSyncConfigurationResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.logi.proto.GetLogiSyncConfigurationResponse.serializeBinaryToWriter
    );
  }
  f = message.getGetHostInformationResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.logi.proto.GetHostInformationResponse.serializeBinaryToWriter
    );
  }
  f = message.getSetLogiSyncConfigurationResponse();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.logi.proto.SetLogiSyncConfigurationResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional GetLogiSyncConfigurationResponse get_logi_sync_configuration_response = 2;
 * @return {?proto.logi.proto.GetLogiSyncConfigurationResponse}
 */
proto.logi.proto.LogiSyncConfigurationResponse.prototype.getGetLogiSyncConfigurationResponse = function() {
  return /** @type{?proto.logi.proto.GetLogiSyncConfigurationResponse} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.GetLogiSyncConfigurationResponse, 2));
};


/** @param {?proto.logi.proto.GetLogiSyncConfigurationResponse|undefined} value */
proto.logi.proto.LogiSyncConfigurationResponse.prototype.setGetLogiSyncConfigurationResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.logi.proto.LogiSyncConfigurationResponse.oneofGroups_[0], value);
};


proto.logi.proto.LogiSyncConfigurationResponse.prototype.clearGetLogiSyncConfigurationResponse = function() {
  this.setGetLogiSyncConfigurationResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LogiSyncConfigurationResponse.prototype.hasGetLogiSyncConfigurationResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GetHostInformationResponse get_host_information_response = 3;
 * @return {?proto.logi.proto.GetHostInformationResponse}
 */
proto.logi.proto.LogiSyncConfigurationResponse.prototype.getGetHostInformationResponse = function() {
  return /** @type{?proto.logi.proto.GetHostInformationResponse} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.GetHostInformationResponse, 3));
};


/** @param {?proto.logi.proto.GetHostInformationResponse|undefined} value */
proto.logi.proto.LogiSyncConfigurationResponse.prototype.setGetHostInformationResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.logi.proto.LogiSyncConfigurationResponse.oneofGroups_[0], value);
};


proto.logi.proto.LogiSyncConfigurationResponse.prototype.clearGetHostInformationResponse = function() {
  this.setGetHostInformationResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LogiSyncConfigurationResponse.prototype.hasGetHostInformationResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SetLogiSyncConfigurationResponse set_logi_sync_configuration_response = 4;
 * @return {?proto.logi.proto.SetLogiSyncConfigurationResponse}
 */
proto.logi.proto.LogiSyncConfigurationResponse.prototype.getSetLogiSyncConfigurationResponse = function() {
  return /** @type{?proto.logi.proto.SetLogiSyncConfigurationResponse} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.SetLogiSyncConfigurationResponse, 4));
};


/** @param {?proto.logi.proto.SetLogiSyncConfigurationResponse|undefined} value */
proto.logi.proto.LogiSyncConfigurationResponse.prototype.setSetLogiSyncConfigurationResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.logi.proto.LogiSyncConfigurationResponse.oneofGroups_[0], value);
};


proto.logi.proto.LogiSyncConfigurationResponse.prototype.clearSetLogiSyncConfigurationResponse = function() {
  this.setSetLogiSyncConfigurationResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.LogiSyncConfigurationResponse.prototype.hasSetLogiSyncConfigurationResponse = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.logi.proto);
