/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
var product_state_structures_pb = require('./product_state_structures_pb.js');
goog.exportSymbol('proto.logi.proto.DeviceConnectedToProductEvent', null, global);
goog.exportSymbol('proto.logi.proto.DeviceDisconnectedFromProductEvent', null, global);
goog.exportSymbol('proto.logi.proto.DevicePropertyChangedEvent', null, global);
goog.exportSymbol('proto.logi.proto.ProductAvailableEvent', null, global);
goog.exportSymbol('proto.logi.proto.ProductConfigurationChangedEvent', null, global);
goog.exportSymbol('proto.logi.proto.ProductErrorEvent', null, global);
goog.exportSymbol('proto.logi.proto.ProductEvent', null, global);
goog.exportSymbol('proto.logi.proto.ProductStateChangedEvent', null, global);
goog.exportSymbol('proto.logi.proto.ProductUnavailableEvent', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.ProductStateChangedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.logi.proto.ProductStateChangedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.ProductStateChangedEvent.displayName = 'proto.logi.proto.ProductStateChangedEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.ProductStateChangedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.ProductStateChangedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.ProductStateChangedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.ProductStateChangedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    productUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    connectionState: jspb.Message.getFieldWithDefault(msg, 2, 0),
    product: (f = msg.getProduct()) && product_state_structures_pb.Product.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.ProductStateChangedEvent}
 */
proto.logi.proto.ProductStateChangedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.ProductStateChangedEvent;
  return proto.logi.proto.ProductStateChangedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.ProductStateChangedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.ProductStateChangedEvent}
 */
proto.logi.proto.ProductStateChangedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductUuid(value);
      break;
    case 2:
      var value = /** @type {!proto.logi.proto.SyncConnectionState} */ (reader.readEnum());
      msg.setConnectionState(value);
      break;
    case 3:
      var value = new product_state_structures_pb.Product;
      reader.readMessage(value,product_state_structures_pb.Product.deserializeBinaryFromReader);
      msg.setProduct(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.ProductStateChangedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.ProductStateChangedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.ProductStateChangedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.ProductStateChangedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnectionState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getProduct();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      product_state_structures_pb.Product.serializeBinaryToWriter
    );
  }
};


/**
 * optional string product_uuid = 1;
 * @return {string}
 */
proto.logi.proto.ProductStateChangedEvent.prototype.getProductUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.logi.proto.ProductStateChangedEvent.prototype.setProductUuid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SyncConnectionState connection_state = 2;
 * @return {!proto.logi.proto.SyncConnectionState}
 */
proto.logi.proto.ProductStateChangedEvent.prototype.getConnectionState = function() {
  return /** @type {!proto.logi.proto.SyncConnectionState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.logi.proto.SyncConnectionState} value */
proto.logi.proto.ProductStateChangedEvent.prototype.setConnectionState = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Product product = 3;
 * @return {?proto.logi.proto.Product}
 */
proto.logi.proto.ProductStateChangedEvent.prototype.getProduct = function() {
  return /** @type{?proto.logi.proto.Product} */ (
    jspb.Message.getWrapperField(this, product_state_structures_pb.Product, 3));
};


/** @param {?proto.logi.proto.Product|undefined} value */
proto.logi.proto.ProductStateChangedEvent.prototype.setProduct = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.logi.proto.ProductStateChangedEvent.prototype.clearProduct = function() {
  this.setProduct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.ProductStateChangedEvent.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.ProductAvailableEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.logi.proto.ProductAvailableEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.ProductAvailableEvent.displayName = 'proto.logi.proto.ProductAvailableEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.ProductAvailableEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.ProductAvailableEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.ProductAvailableEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.ProductAvailableEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    product: (f = msg.getProduct()) && product_state_structures_pb.Product.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.ProductAvailableEvent}
 */
proto.logi.proto.ProductAvailableEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.ProductAvailableEvent;
  return proto.logi.proto.ProductAvailableEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.ProductAvailableEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.ProductAvailableEvent}
 */
proto.logi.proto.ProductAvailableEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new product_state_structures_pb.Product;
      reader.readMessage(value,product_state_structures_pb.Product.deserializeBinaryFromReader);
      msg.setProduct(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.ProductAvailableEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.ProductAvailableEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.ProductAvailableEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.ProductAvailableEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProduct();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      product_state_structures_pb.Product.serializeBinaryToWriter
    );
  }
};


/**
 * optional Product product = 1;
 * @return {?proto.logi.proto.Product}
 */
proto.logi.proto.ProductAvailableEvent.prototype.getProduct = function() {
  return /** @type{?proto.logi.proto.Product} */ (
    jspb.Message.getWrapperField(this, product_state_structures_pb.Product, 1));
};


/** @param {?proto.logi.proto.Product|undefined} value */
proto.logi.proto.ProductAvailableEvent.prototype.setProduct = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.logi.proto.ProductAvailableEvent.prototype.clearProduct = function() {
  this.setProduct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.ProductAvailableEvent.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.ProductUnavailableEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.logi.proto.ProductUnavailableEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.ProductUnavailableEvent.displayName = 'proto.logi.proto.ProductUnavailableEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.ProductUnavailableEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.ProductUnavailableEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.ProductUnavailableEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.ProductUnavailableEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    productUuid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.ProductUnavailableEvent}
 */
proto.logi.proto.ProductUnavailableEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.ProductUnavailableEvent;
  return proto.logi.proto.ProductUnavailableEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.ProductUnavailableEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.ProductUnavailableEvent}
 */
proto.logi.proto.ProductUnavailableEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.ProductUnavailableEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.ProductUnavailableEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.ProductUnavailableEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.ProductUnavailableEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string product_uuid = 1;
 * @return {string}
 */
proto.logi.proto.ProductUnavailableEvent.prototype.getProductUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.logi.proto.ProductUnavailableEvent.prototype.setProductUuid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.DeviceConnectedToProductEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.logi.proto.DeviceConnectedToProductEvent.repeatedFields_, null);
};
goog.inherits(proto.logi.proto.DeviceConnectedToProductEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.DeviceConnectedToProductEvent.displayName = 'proto.logi.proto.DeviceConnectedToProductEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.logi.proto.DeviceConnectedToProductEvent.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.DeviceConnectedToProductEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.DeviceConnectedToProductEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.DeviceConnectedToProductEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.DeviceConnectedToProductEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    productUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    devicesList: jspb.Message.toObjectList(msg.getDevicesList(),
    product_state_structures_pb.Device.toObject, includeInstance),
    deviceConnectionList: jspb.Message.toObjectList(msg.getDeviceConnectionList(),
    product_state_structures_pb.DeviceEdge.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.DeviceConnectedToProductEvent}
 */
proto.logi.proto.DeviceConnectedToProductEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.DeviceConnectedToProductEvent;
  return proto.logi.proto.DeviceConnectedToProductEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.DeviceConnectedToProductEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.DeviceConnectedToProductEvent}
 */
proto.logi.proto.DeviceConnectedToProductEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductUuid(value);
      break;
    case 2:
      var value = new product_state_structures_pb.Device;
      reader.readMessage(value,product_state_structures_pb.Device.deserializeBinaryFromReader);
      msg.addDevices(value);
      break;
    case 3:
      var value = new product_state_structures_pb.DeviceEdge;
      reader.readMessage(value,product_state_structures_pb.DeviceEdge.deserializeBinaryFromReader);
      msg.addDeviceConnection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.DeviceConnectedToProductEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.DeviceConnectedToProductEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.DeviceConnectedToProductEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.DeviceConnectedToProductEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      product_state_structures_pb.Device.serializeBinaryToWriter
    );
  }
  f = message.getDeviceConnectionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      product_state_structures_pb.DeviceEdge.serializeBinaryToWriter
    );
  }
};


/**
 * optional string product_uuid = 1;
 * @return {string}
 */
proto.logi.proto.DeviceConnectedToProductEvent.prototype.getProductUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.logi.proto.DeviceConnectedToProductEvent.prototype.setProductUuid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Device devices = 2;
 * @return {!Array<!proto.logi.proto.Device>}
 */
proto.logi.proto.DeviceConnectedToProductEvent.prototype.getDevicesList = function() {
  return /** @type{!Array<!proto.logi.proto.Device>} */ (
    jspb.Message.getRepeatedWrapperField(this, product_state_structures_pb.Device, 2));
};


/** @param {!Array<!proto.logi.proto.Device>} value */
proto.logi.proto.DeviceConnectedToProductEvent.prototype.setDevicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.logi.proto.Device=} opt_value
 * @param {number=} opt_index
 * @return {!proto.logi.proto.Device}
 */
proto.logi.proto.DeviceConnectedToProductEvent.prototype.addDevices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.logi.proto.Device, opt_index);
};


proto.logi.proto.DeviceConnectedToProductEvent.prototype.clearDevicesList = function() {
  this.setDevicesList([]);
};


/**
 * repeated DeviceEdge device_connection = 3;
 * @return {!Array<!proto.logi.proto.DeviceEdge>}
 */
proto.logi.proto.DeviceConnectedToProductEvent.prototype.getDeviceConnectionList = function() {
  return /** @type{!Array<!proto.logi.proto.DeviceEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, product_state_structures_pb.DeviceEdge, 3));
};


/** @param {!Array<!proto.logi.proto.DeviceEdge>} value */
proto.logi.proto.DeviceConnectedToProductEvent.prototype.setDeviceConnectionList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.logi.proto.DeviceEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.logi.proto.DeviceEdge}
 */
proto.logi.proto.DeviceConnectedToProductEvent.prototype.addDeviceConnection = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.logi.proto.DeviceEdge, opt_index);
};


proto.logi.proto.DeviceConnectedToProductEvent.prototype.clearDeviceConnectionList = function() {
  this.setDeviceConnectionList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.DeviceDisconnectedFromProductEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.logi.proto.DeviceDisconnectedFromProductEvent.repeatedFields_, null);
};
goog.inherits(proto.logi.proto.DeviceDisconnectedFromProductEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.DeviceDisconnectedFromProductEvent.displayName = 'proto.logi.proto.DeviceDisconnectedFromProductEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.logi.proto.DeviceDisconnectedFromProductEvent.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.DeviceDisconnectedFromProductEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.DeviceDisconnectedFromProductEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.DeviceDisconnectedFromProductEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.DeviceDisconnectedFromProductEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    productUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceUuidsList: jspb.Message.getRepeatedField(msg, 2),
    deviceConnectionList: jspb.Message.toObjectList(msg.getDeviceConnectionList(),
    product_state_structures_pb.DeviceEdge.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.DeviceDisconnectedFromProductEvent}
 */
proto.logi.proto.DeviceDisconnectedFromProductEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.DeviceDisconnectedFromProductEvent;
  return proto.logi.proto.DeviceDisconnectedFromProductEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.DeviceDisconnectedFromProductEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.DeviceDisconnectedFromProductEvent}
 */
proto.logi.proto.DeviceDisconnectedFromProductEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addDeviceUuids(value);
      break;
    case 3:
      var value = new product_state_structures_pb.DeviceEdge;
      reader.readMessage(value,product_state_structures_pb.DeviceEdge.deserializeBinaryFromReader);
      msg.addDeviceConnection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.DeviceDisconnectedFromProductEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.DeviceDisconnectedFromProductEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.DeviceDisconnectedFromProductEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.DeviceDisconnectedFromProductEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceUuidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getDeviceConnectionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      product_state_structures_pb.DeviceEdge.serializeBinaryToWriter
    );
  }
};


/**
 * optional string product_uuid = 1;
 * @return {string}
 */
proto.logi.proto.DeviceDisconnectedFromProductEvent.prototype.getProductUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.logi.proto.DeviceDisconnectedFromProductEvent.prototype.setProductUuid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string device_uuids = 2;
 * @return {!Array<string>}
 */
proto.logi.proto.DeviceDisconnectedFromProductEvent.prototype.getDeviceUuidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.logi.proto.DeviceDisconnectedFromProductEvent.prototype.setDeviceUuidsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.logi.proto.DeviceDisconnectedFromProductEvent.prototype.addDeviceUuids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.logi.proto.DeviceDisconnectedFromProductEvent.prototype.clearDeviceUuidsList = function() {
  this.setDeviceUuidsList([]);
};


/**
 * repeated DeviceEdge device_connection = 3;
 * @return {!Array<!proto.logi.proto.DeviceEdge>}
 */
proto.logi.proto.DeviceDisconnectedFromProductEvent.prototype.getDeviceConnectionList = function() {
  return /** @type{!Array<!proto.logi.proto.DeviceEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, product_state_structures_pb.DeviceEdge, 3));
};


/** @param {!Array<!proto.logi.proto.DeviceEdge>} value */
proto.logi.proto.DeviceDisconnectedFromProductEvent.prototype.setDeviceConnectionList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.logi.proto.DeviceEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.logi.proto.DeviceEdge}
 */
proto.logi.proto.DeviceDisconnectedFromProductEvent.prototype.addDeviceConnection = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.logi.proto.DeviceEdge, opt_index);
};


proto.logi.proto.DeviceDisconnectedFromProductEvent.prototype.clearDeviceConnectionList = function() {
  this.setDeviceConnectionList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.DevicePropertyChangedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.logi.proto.DevicePropertyChangedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.DevicePropertyChangedEvent.displayName = 'proto.logi.proto.DevicePropertyChangedEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.DevicePropertyChangedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.DevicePropertyChangedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.DevicePropertyChangedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.DevicePropertyChangedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    productUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    propertyKey: jspb.Message.getFieldWithDefault(msg, 3, 0),
    propertyValue: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isRemoved: jspb.Message.getFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.DevicePropertyChangedEvent}
 */
proto.logi.proto.DevicePropertyChangedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.DevicePropertyChangedEvent;
  return proto.logi.proto.DevicePropertyChangedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.DevicePropertyChangedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.DevicePropertyChangedEvent}
 */
proto.logi.proto.DevicePropertyChangedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceUuid(value);
      break;
    case 3:
      var value = /** @type {!proto.logi.proto.Device.Property} */ (reader.readEnum());
      msg.setPropertyKey(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPropertyValue(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRemoved(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.DevicePropertyChangedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.DevicePropertyChangedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.DevicePropertyChangedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.DevicePropertyChangedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPropertyKey();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPropertyValue();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsRemoved();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string product_uuid = 1;
 * @return {string}
 */
proto.logi.proto.DevicePropertyChangedEvent.prototype.getProductUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.logi.proto.DevicePropertyChangedEvent.prototype.setProductUuid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string device_uuid = 2;
 * @return {string}
 */
proto.logi.proto.DevicePropertyChangedEvent.prototype.getDeviceUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.logi.proto.DevicePropertyChangedEvent.prototype.setDeviceUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Device.Property property_key = 3;
 * @return {!proto.logi.proto.Device.Property}
 */
proto.logi.proto.DevicePropertyChangedEvent.prototype.getPropertyKey = function() {
  return /** @type {!proto.logi.proto.Device.Property} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.logi.proto.Device.Property} value */
proto.logi.proto.DevicePropertyChangedEvent.prototype.setPropertyKey = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string property_value = 4;
 * @return {string}
 */
proto.logi.proto.DevicePropertyChangedEvent.prototype.getPropertyValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.logi.proto.DevicePropertyChangedEvent.prototype.setPropertyValue = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool is_removed = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.logi.proto.DevicePropertyChangedEvent.prototype.getIsRemoved = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.logi.proto.DevicePropertyChangedEvent.prototype.setIsRemoved = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.ProductConfigurationChangedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.logi.proto.ProductConfigurationChangedEvent.repeatedFields_, null);
};
goog.inherits(proto.logi.proto.ProductConfigurationChangedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.ProductConfigurationChangedEvent.displayName = 'proto.logi.proto.ProductConfigurationChangedEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.logi.proto.ProductConfigurationChangedEvent.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.ProductConfigurationChangedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.ProductConfigurationChangedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.ProductConfigurationChangedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.ProductConfigurationChangedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    productUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    expectedDeviceCountMap: (f = msg.getExpectedDeviceCountMap()) ? f.toObject(includeInstance, undefined) : [],
    actualDeviceCountMap: (f = msg.getActualDeviceCountMap()) ? f.toObject(includeInstance, undefined) : [],
    forgottenDevicesList: jspb.Message.toObjectList(msg.getForgottenDevicesList(),
    product_state_structures_pb.Device.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.ProductConfigurationChangedEvent}
 */
proto.logi.proto.ProductConfigurationChangedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.ProductConfigurationChangedEvent;
  return proto.logi.proto.ProductConfigurationChangedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.ProductConfigurationChangedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.ProductConfigurationChangedEvent}
 */
proto.logi.proto.ProductConfigurationChangedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductUuid(value);
      break;
    case 2:
      var value = msg.getExpectedDeviceCountMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readUint32, null, 0);
         });
      break;
    case 3:
      var value = msg.getActualDeviceCountMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readUint32, null, 0);
         });
      break;
    case 4:
      var value = new product_state_structures_pb.Device;
      reader.readMessage(value,product_state_structures_pb.Device.deserializeBinaryFromReader);
      msg.addForgottenDevices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.ProductConfigurationChangedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.ProductConfigurationChangedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.ProductConfigurationChangedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.ProductConfigurationChangedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExpectedDeviceCountMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeUint32);
  }
  f = message.getActualDeviceCountMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeUint32);
  }
  f = message.getForgottenDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      product_state_structures_pb.Device.serializeBinaryToWriter
    );
  }
};


/**
 * optional string product_uuid = 1;
 * @return {string}
 */
proto.logi.proto.ProductConfigurationChangedEvent.prototype.getProductUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.logi.proto.ProductConfigurationChangedEvent.prototype.setProductUuid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<uint32, uint32> expected_device_count = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.logi.proto.ProductConfigurationChangedEvent.prototype.getExpectedDeviceCountMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.logi.proto.ProductConfigurationChangedEvent.prototype.clearExpectedDeviceCountMap = function() {
  this.getExpectedDeviceCountMap().clear();
};


/**
 * map<uint32, uint32> actual_device_count = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.logi.proto.ProductConfigurationChangedEvent.prototype.getActualDeviceCountMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.logi.proto.ProductConfigurationChangedEvent.prototype.clearActualDeviceCountMap = function() {
  this.getActualDeviceCountMap().clear();
};


/**
 * repeated Device forgotten_devices = 4;
 * @return {!Array<!proto.logi.proto.Device>}
 */
proto.logi.proto.ProductConfigurationChangedEvent.prototype.getForgottenDevicesList = function() {
  return /** @type{!Array<!proto.logi.proto.Device>} */ (
    jspb.Message.getRepeatedWrapperField(this, product_state_structures_pb.Device, 4));
};


/** @param {!Array<!proto.logi.proto.Device>} value */
proto.logi.proto.ProductConfigurationChangedEvent.prototype.setForgottenDevicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.logi.proto.Device=} opt_value
 * @param {number=} opt_index
 * @return {!proto.logi.proto.Device}
 */
proto.logi.proto.ProductConfigurationChangedEvent.prototype.addForgottenDevices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.logi.proto.Device, opt_index);
};


proto.logi.proto.ProductConfigurationChangedEvent.prototype.clearForgottenDevicesList = function() {
  this.setForgottenDevicesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.ProductErrorEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.logi.proto.ProductErrorEvent.repeatedFields_, null);
};
goog.inherits(proto.logi.proto.ProductErrorEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.ProductErrorEvent.displayName = 'proto.logi.proto.ProductErrorEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.logi.proto.ProductErrorEvent.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.ProductErrorEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.ProductErrorEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.ProductErrorEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.ProductErrorEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    productUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    common_pb.Error.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.ProductErrorEvent}
 */
proto.logi.proto.ProductErrorEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.ProductErrorEvent;
  return proto.logi.proto.ProductErrorEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.ProductErrorEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.ProductErrorEvent}
 */
proto.logi.proto.ProductErrorEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceUuid(value);
      break;
    case 3:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.ProductErrorEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.ProductErrorEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.ProductErrorEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.ProductErrorEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string product_uuid = 1;
 * @return {string}
 */
proto.logi.proto.ProductErrorEvent.prototype.getProductUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.logi.proto.ProductErrorEvent.prototype.setProductUuid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string device_uuid = 2;
 * @return {string}
 */
proto.logi.proto.ProductErrorEvent.prototype.getDeviceUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.logi.proto.ProductErrorEvent.prototype.setDeviceUuid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Error errors = 3;
 * @return {!Array<!proto.logi.proto.Error>}
 */
proto.logi.proto.ProductErrorEvent.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.logi.proto.Error>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Error, 3));
};


/** @param {!Array<!proto.logi.proto.Error>} value */
proto.logi.proto.ProductErrorEvent.prototype.setErrorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.logi.proto.Error=} opt_value
 * @param {number=} opt_index
 * @return {!proto.logi.proto.Error}
 */
proto.logi.proto.ProductErrorEvent.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.logi.proto.Error, opt_index);
};


proto.logi.proto.ProductErrorEvent.prototype.clearErrorsList = function() {
  this.setErrorsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.logi.proto.ProductEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.logi.proto.ProductEvent.oneofGroups_);
};
goog.inherits(proto.logi.proto.ProductEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.logi.proto.ProductEvent.displayName = 'proto.logi.proto.ProductEvent';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.logi.proto.ProductEvent.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.logi.proto.ProductEvent.EventCase = {
  EVENT_NOT_SET: 0,
  PRODUCT_AVAILABLE_EVENT: 1,
  PRODUCT_UNAVAILABLE_EVENT: 2,
  DEVICE_CONNECTED_TO_PRODUCT_EVENT: 3,
  DEVICE_DISCONNECTED_FROM_PRODUCT_EVENT: 4,
  PRODUCT_ERROR_EVENT: 5,
  DEVICE_PROPERTY_CHANGED_EVENT: 6,
  PRODUCT_CONFIGURATION_CHANGED_EVENT: 7,
  PRODUCT_STATE_CHANGED_EVENT: 8
};

/**
 * @return {proto.logi.proto.ProductEvent.EventCase}
 */
proto.logi.proto.ProductEvent.prototype.getEventCase = function() {
  return /** @type {proto.logi.proto.ProductEvent.EventCase} */(jspb.Message.computeOneofCase(this, proto.logi.proto.ProductEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.logi.proto.ProductEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.logi.proto.ProductEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.logi.proto.ProductEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.ProductEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    productAvailableEvent: (f = msg.getProductAvailableEvent()) && proto.logi.proto.ProductAvailableEvent.toObject(includeInstance, f),
    productUnavailableEvent: (f = msg.getProductUnavailableEvent()) && proto.logi.proto.ProductUnavailableEvent.toObject(includeInstance, f),
    deviceConnectedToProductEvent: (f = msg.getDeviceConnectedToProductEvent()) && proto.logi.proto.DeviceConnectedToProductEvent.toObject(includeInstance, f),
    deviceDisconnectedFromProductEvent: (f = msg.getDeviceDisconnectedFromProductEvent()) && proto.logi.proto.DeviceDisconnectedFromProductEvent.toObject(includeInstance, f),
    productErrorEvent: (f = msg.getProductErrorEvent()) && proto.logi.proto.ProductErrorEvent.toObject(includeInstance, f),
    devicePropertyChangedEvent: (f = msg.getDevicePropertyChangedEvent()) && proto.logi.proto.DevicePropertyChangedEvent.toObject(includeInstance, f),
    productConfigurationChangedEvent: (f = msg.getProductConfigurationChangedEvent()) && proto.logi.proto.ProductConfigurationChangedEvent.toObject(includeInstance, f),
    productStateChangedEvent: (f = msg.getProductStateChangedEvent()) && proto.logi.proto.ProductStateChangedEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.logi.proto.ProductEvent}
 */
proto.logi.proto.ProductEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.logi.proto.ProductEvent;
  return proto.logi.proto.ProductEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.logi.proto.ProductEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.logi.proto.ProductEvent}
 */
proto.logi.proto.ProductEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.logi.proto.ProductAvailableEvent;
      reader.readMessage(value,proto.logi.proto.ProductAvailableEvent.deserializeBinaryFromReader);
      msg.setProductAvailableEvent(value);
      break;
    case 2:
      var value = new proto.logi.proto.ProductUnavailableEvent;
      reader.readMessage(value,proto.logi.proto.ProductUnavailableEvent.deserializeBinaryFromReader);
      msg.setProductUnavailableEvent(value);
      break;
    case 3:
      var value = new proto.logi.proto.DeviceConnectedToProductEvent;
      reader.readMessage(value,proto.logi.proto.DeviceConnectedToProductEvent.deserializeBinaryFromReader);
      msg.setDeviceConnectedToProductEvent(value);
      break;
    case 4:
      var value = new proto.logi.proto.DeviceDisconnectedFromProductEvent;
      reader.readMessage(value,proto.logi.proto.DeviceDisconnectedFromProductEvent.deserializeBinaryFromReader);
      msg.setDeviceDisconnectedFromProductEvent(value);
      break;
    case 5:
      var value = new proto.logi.proto.ProductErrorEvent;
      reader.readMessage(value,proto.logi.proto.ProductErrorEvent.deserializeBinaryFromReader);
      msg.setProductErrorEvent(value);
      break;
    case 6:
      var value = new proto.logi.proto.DevicePropertyChangedEvent;
      reader.readMessage(value,proto.logi.proto.DevicePropertyChangedEvent.deserializeBinaryFromReader);
      msg.setDevicePropertyChangedEvent(value);
      break;
    case 7:
      var value = new proto.logi.proto.ProductConfigurationChangedEvent;
      reader.readMessage(value,proto.logi.proto.ProductConfigurationChangedEvent.deserializeBinaryFromReader);
      msg.setProductConfigurationChangedEvent(value);
      break;
    case 8:
      var value = new proto.logi.proto.ProductStateChangedEvent;
      reader.readMessage(value,proto.logi.proto.ProductStateChangedEvent.deserializeBinaryFromReader);
      msg.setProductStateChangedEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.logi.proto.ProductEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.logi.proto.ProductEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.logi.proto.ProductEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.logi.proto.ProductEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductAvailableEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.logi.proto.ProductAvailableEvent.serializeBinaryToWriter
    );
  }
  f = message.getProductUnavailableEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.logi.proto.ProductUnavailableEvent.serializeBinaryToWriter
    );
  }
  f = message.getDeviceConnectedToProductEvent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.logi.proto.DeviceConnectedToProductEvent.serializeBinaryToWriter
    );
  }
  f = message.getDeviceDisconnectedFromProductEvent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.logi.proto.DeviceDisconnectedFromProductEvent.serializeBinaryToWriter
    );
  }
  f = message.getProductErrorEvent();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.logi.proto.ProductErrorEvent.serializeBinaryToWriter
    );
  }
  f = message.getDevicePropertyChangedEvent();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.logi.proto.DevicePropertyChangedEvent.serializeBinaryToWriter
    );
  }
  f = message.getProductConfigurationChangedEvent();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.logi.proto.ProductConfigurationChangedEvent.serializeBinaryToWriter
    );
  }
  f = message.getProductStateChangedEvent();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.logi.proto.ProductStateChangedEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProductAvailableEvent product_available_event = 1;
 * @return {?proto.logi.proto.ProductAvailableEvent}
 */
proto.logi.proto.ProductEvent.prototype.getProductAvailableEvent = function() {
  return /** @type{?proto.logi.proto.ProductAvailableEvent} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.ProductAvailableEvent, 1));
};


/** @param {?proto.logi.proto.ProductAvailableEvent|undefined} value */
proto.logi.proto.ProductEvent.prototype.setProductAvailableEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.logi.proto.ProductEvent.oneofGroups_[0], value);
};


proto.logi.proto.ProductEvent.prototype.clearProductAvailableEvent = function() {
  this.setProductAvailableEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.ProductEvent.prototype.hasProductAvailableEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProductUnavailableEvent product_unavailable_event = 2;
 * @return {?proto.logi.proto.ProductUnavailableEvent}
 */
proto.logi.proto.ProductEvent.prototype.getProductUnavailableEvent = function() {
  return /** @type{?proto.logi.proto.ProductUnavailableEvent} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.ProductUnavailableEvent, 2));
};


/** @param {?proto.logi.proto.ProductUnavailableEvent|undefined} value */
proto.logi.proto.ProductEvent.prototype.setProductUnavailableEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.logi.proto.ProductEvent.oneofGroups_[0], value);
};


proto.logi.proto.ProductEvent.prototype.clearProductUnavailableEvent = function() {
  this.setProductUnavailableEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.ProductEvent.prototype.hasProductUnavailableEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DeviceConnectedToProductEvent device_connected_to_product_event = 3;
 * @return {?proto.logi.proto.DeviceConnectedToProductEvent}
 */
proto.logi.proto.ProductEvent.prototype.getDeviceConnectedToProductEvent = function() {
  return /** @type{?proto.logi.proto.DeviceConnectedToProductEvent} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.DeviceConnectedToProductEvent, 3));
};


/** @param {?proto.logi.proto.DeviceConnectedToProductEvent|undefined} value */
proto.logi.proto.ProductEvent.prototype.setDeviceConnectedToProductEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.logi.proto.ProductEvent.oneofGroups_[0], value);
};


proto.logi.proto.ProductEvent.prototype.clearDeviceConnectedToProductEvent = function() {
  this.setDeviceConnectedToProductEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.ProductEvent.prototype.hasDeviceConnectedToProductEvent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DeviceDisconnectedFromProductEvent device_disconnected_from_product_event = 4;
 * @return {?proto.logi.proto.DeviceDisconnectedFromProductEvent}
 */
proto.logi.proto.ProductEvent.prototype.getDeviceDisconnectedFromProductEvent = function() {
  return /** @type{?proto.logi.proto.DeviceDisconnectedFromProductEvent} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.DeviceDisconnectedFromProductEvent, 4));
};


/** @param {?proto.logi.proto.DeviceDisconnectedFromProductEvent|undefined} value */
proto.logi.proto.ProductEvent.prototype.setDeviceDisconnectedFromProductEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.logi.proto.ProductEvent.oneofGroups_[0], value);
};


proto.logi.proto.ProductEvent.prototype.clearDeviceDisconnectedFromProductEvent = function() {
  this.setDeviceDisconnectedFromProductEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.ProductEvent.prototype.hasDeviceDisconnectedFromProductEvent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ProductErrorEvent product_error_event = 5;
 * @return {?proto.logi.proto.ProductErrorEvent}
 */
proto.logi.proto.ProductEvent.prototype.getProductErrorEvent = function() {
  return /** @type{?proto.logi.proto.ProductErrorEvent} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.ProductErrorEvent, 5));
};


/** @param {?proto.logi.proto.ProductErrorEvent|undefined} value */
proto.logi.proto.ProductEvent.prototype.setProductErrorEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.logi.proto.ProductEvent.oneofGroups_[0], value);
};


proto.logi.proto.ProductEvent.prototype.clearProductErrorEvent = function() {
  this.setProductErrorEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.ProductEvent.prototype.hasProductErrorEvent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DevicePropertyChangedEvent device_property_changed_event = 6;
 * @return {?proto.logi.proto.DevicePropertyChangedEvent}
 */
proto.logi.proto.ProductEvent.prototype.getDevicePropertyChangedEvent = function() {
  return /** @type{?proto.logi.proto.DevicePropertyChangedEvent} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.DevicePropertyChangedEvent, 6));
};


/** @param {?proto.logi.proto.DevicePropertyChangedEvent|undefined} value */
proto.logi.proto.ProductEvent.prototype.setDevicePropertyChangedEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.logi.proto.ProductEvent.oneofGroups_[0], value);
};


proto.logi.proto.ProductEvent.prototype.clearDevicePropertyChangedEvent = function() {
  this.setDevicePropertyChangedEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.ProductEvent.prototype.hasDevicePropertyChangedEvent = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ProductConfigurationChangedEvent product_configuration_changed_event = 7;
 * @return {?proto.logi.proto.ProductConfigurationChangedEvent}
 */
proto.logi.proto.ProductEvent.prototype.getProductConfigurationChangedEvent = function() {
  return /** @type{?proto.logi.proto.ProductConfigurationChangedEvent} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.ProductConfigurationChangedEvent, 7));
};


/** @param {?proto.logi.proto.ProductConfigurationChangedEvent|undefined} value */
proto.logi.proto.ProductEvent.prototype.setProductConfigurationChangedEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.logi.proto.ProductEvent.oneofGroups_[0], value);
};


proto.logi.proto.ProductEvent.prototype.clearProductConfigurationChangedEvent = function() {
  this.setProductConfigurationChangedEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.ProductEvent.prototype.hasProductConfigurationChangedEvent = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ProductStateChangedEvent product_state_changed_event = 8;
 * @return {?proto.logi.proto.ProductStateChangedEvent}
 */
proto.logi.proto.ProductEvent.prototype.getProductStateChangedEvent = function() {
  return /** @type{?proto.logi.proto.ProductStateChangedEvent} */ (
    jspb.Message.getWrapperField(this, proto.logi.proto.ProductStateChangedEvent, 8));
};


/** @param {?proto.logi.proto.ProductStateChangedEvent|undefined} value */
proto.logi.proto.ProductEvent.prototype.setProductStateChangedEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.logi.proto.ProductEvent.oneofGroups_[0], value);
};


proto.logi.proto.ProductEvent.prototype.clearProductStateChangedEvent = function() {
  this.setProductStateChangedEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.logi.proto.ProductEvent.prototype.hasProductStateChangedEvent = function() {
  return jspb.Message.getField(this, 8) != null;
};


goog.object.extend(exports, proto.logi.proto);
